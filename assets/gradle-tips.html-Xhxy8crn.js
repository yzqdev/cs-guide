import{_ as s,c as a,a as t,o as p}from"./app-C8DxhDIZ.js";const e={};function l(i,n){return p(),a("div",null,n[0]||(n[0]=[t(`<h1 id="gradle技巧" tabindex="-1"><a class="header-anchor" href="#gradle技巧"><span>gradle技巧</span></a></h1><h2 id="gradle添加ext" tabindex="-1"><a class="header-anchor" href="#gradle添加ext"><span>gradle添加ext</span></a></h2><h2 id="使用extra" tabindex="-1"><a class="header-anchor" href="#使用extra"><span>使用extra</span></a></h2><p><strong>注意</strong></p><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">ext<span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;development&quot;</span></span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p><a href="https://juejin.cn/post/6979872825561579533" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/6979872825561579533</a><a href="https://developer.android.google.cn/studio/build/migrate-to-kts?hl=zh-cn" target="_blank" rel="noopener noreferrer">https://developer.android.google.cn/studio/build/migrate-to-kts?hl=zh-cn</a></p><p>Google 官方推荐的一个 Gradle 配置<a href="https://developer.android.google.cn/studio/build/gradle-tips?hl=zh-cn" target="_blank" rel="noopener noreferrer">最佳实践</a>是在项目最外层 build.gradle 文件的<code>ext</code>代码块中定义项目范围的属性，然后在所有模块间共享这些属性，比如我们通常会这样存放依赖的版本号。</p><div class="language-groovy" data-highlighter="prismjs" data-ext="groovy" data-title="groovy"><pre><code><span class="line"><span class="token comment">// build.gradle</span></span>
<span class="line"></span>
<span class="line">ext <span class="token punctuation">{</span></span>
<span class="line">    compileSdkVersion <span class="token operator">=</span> <span class="token number">28</span></span>
<span class="line">    buildToolsVersion <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">&quot;28.0.3&quot;</span></span></span>
<span class="line">    supportLibVersion <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">&quot;28.0.0&quot;</span></span></span>
<span class="line">    <span class="token punctuation">...</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"> </span>
<span class="line"></span></code></pre></div><p>但是由于缺乏IDE的辅助(跳转查看、全局重构等都不支持)，实际使用体验欠佳。</p><p>在<code>KTL</code>中用<code>extra</code>来代替<code>Groovy</code>中的<code>ext</code></p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// The extra object can be used for custom properties and makes them available to all</span></span>
<span class="line"><span class="token comment">// modules in the project.</span></span>
<span class="line"><span class="token comment">// The following are only a few examples of the types of properties you can define.</span></span>
<span class="line">extra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;compileSdkVersion&quot;</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">28</span></span>
<span class="line"><span class="token comment">// You can also create properties to specify versions for dependencies.</span></span>
<span class="line"><span class="token comment">// Having consistent versions between modules can avoid conflicts with behavior.</span></span>
<span class="line">extra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;supportLibVersion&quot;</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;28.0.0&quot;</span></span></span>
<span class="line"> </span>
<span class="line">android <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Use the following syntax to access properties you defined at the project level:</span></span>
<span class="line">    <span class="token comment">// rootProject.extra[&quot;property_name&quot;]</span></span>
<span class="line">    <span class="token function">compileSdkVersion</span><span class="token punctuation">(</span>rootProject<span class="token punctuation">.</span>extra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;sdkVersion&quot;</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Alternatively, you can access properties using a type safe delegate:</span></span>
<span class="line">    <span class="token keyword">val</span> sdkVersion<span class="token operator">:</span> Int <span class="token keyword">by</span> rootProject<span class="token punctuation">.</span>extra</span>
<span class="line">    <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">    <span class="token function">compileSdkVersion</span><span class="token punctuation">(</span>sdkVersion<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">dependencies <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.support:appcompat-v7:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">rootProject<span class="token punctuation">.</span>ext<span class="token punctuation">.</span>supportLibVersion</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>build.gralde</code>中的<code>ext</code>数据是可以在<code>build.gradle.kts</code>中使用<code>extra</code>进行访问的。 使用</p></blockquote><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"> minSdk<span class="token operator">=</span>rootProject<span class="token punctuation">.</span>extra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;minSdk&quot;</span></span><span class="token punctuation">]</span> <span class="token keyword">as</span> Int</span>
<span class="line">targetSdk<span class="token operator">=</span>rootProject<span class="token punctuation">.</span>extra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;targetSdk&quot;</span></span><span class="token punctuation">]</span> <span class="token keyword">as</span> Int</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="使用gradle-properties" tabindex="-1"><a class="header-anchor" href="#使用gradle-properties"><span>使用gradle.properties</span></a></h2><p>gradle.properties</p><div class="language-ini" data-highlighter="prismjs" data-ext="ini" data-title="ini"><pre><code><span class="line"><span class="token key attr-name">android.nonTransitiveRClass</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"><span class="token key attr-name">compose_version</span><span class="token punctuation">=</span><span class="token value attr-value">1.2.1</span></span>
<span class="line"><span class="token key attr-name">compiler_version</span><span class="token punctuation">=</span><span class="token value attr-value">1.3.1</span></span>
<span class="line"><span class="token key attr-name">ktor_version</span><span class="token punctuation">=</span><span class="token value attr-value">2.1.1</span></span>
<span class="line"><span class="token key attr-name">retrofitVersion</span><span class="token punctuation">=</span><span class="token value attr-value">2.9.0</span></span>
<span class="line"></span></code></pre></div><p>然后在子项目的build.gradle.kts中配置</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">val</span> compose_version<span class="token operator">:</span> String <span class="token keyword">by</span> project</span>
<span class="line"><span class="token keyword">val</span> compiler_version<span class="token operator">:</span> String <span class="token keyword">by</span> project</span>
<span class="line">plugins <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">id</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.application&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">id</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;org.jetbrains.kotlin.android&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">android <span class="token punctuation">{</span></span>
<span class="line">    compileSdk <span class="token operator">=</span> rootProject<span class="token punctuation">.</span>extra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;compileSdk&quot;</span></span><span class="token punctuation">]</span> <span class="token keyword">as</span> Int</span>
<span class="line">    namespace <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;com.yzq.mobile.comp.qiqi&quot;</span></span></span>
<span class="line">    defaultConfig <span class="token punctuation">{</span></span>
<span class="line">        applicationId <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;com.yzq.mobile.comp.qiqi&quot;</span></span></span>
<span class="line">        minSdk <span class="token operator">=</span> rootProject<span class="token punctuation">.</span>extra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;minSdk&quot;</span></span><span class="token punctuation">]</span> <span class="token keyword">as</span> Int</span>
<span class="line">        targetSdk <span class="token operator">=</span> rootProject<span class="token punctuation">.</span>extra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;targetSdk&quot;</span></span><span class="token punctuation">]</span> <span class="token keyword">as</span> Int</span>
<span class="line">        versionCode <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line">        versionName <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;1.0.1&quot;</span></span></span>
<span class="line"></span>
<span class="line">        testInstrumentationRunner <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;androidx.test.runner.AndroidJUnitRunner&quot;</span></span></span>
<span class="line">        vectorDrawables <span class="token punctuation">{</span></span>
<span class="line">            useSupportLibrary <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    buildTypes <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">named</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;release&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            isMinifyEnabled <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">            <span class="token function">setProguardFiles</span><span class="token punctuation">(</span></span>
<span class="line">                <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">                    <span class="token function">getDefaultProguardFile</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;proguard-android-optimize.txt&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token string-literal singleline"><span class="token string">&quot;proguard-rules.pro&quot;</span></span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    compileOptions <span class="token punctuation">{</span></span>
<span class="line">        sourceCompatibility <span class="token operator">=</span> JavaVersion<span class="token punctuation">.</span>VERSION_1_8</span>
<span class="line">        targetCompatibility <span class="token operator">=</span> JavaVersion<span class="token punctuation">.</span>VERSION_1_8</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    kotlinOptions <span class="token punctuation">{</span></span>
<span class="line">        jvmTarget <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;1.8&quot;</span></span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    buildFeatures <span class="token punctuation">{</span></span>
<span class="line">        compose <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    composeOptions <span class="token punctuation">{</span></span>
<span class="line">        kotlinCompilerExtensionVersion <span class="token operator">=</span>  libs<span class="token punctuation">.</span>versions<span class="token punctuation">.</span>composeVersion<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//&quot;1.3.2&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    packagingOptions <span class="token punctuation">{</span></span>
<span class="line">        resources <span class="token punctuation">{</span></span>
<span class="line">            excludes <span class="token operator">+=</span> <span class="token string-literal singleline"><span class="token string">&quot;/META-INF/{AL2.0,LGPL2.1}&quot;</span></span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">dependencies <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.core:core-ktx:1.9.0&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.compose.ui:ui:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">compose_version</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.compose.material:material:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">compose_version</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.compose.ui:ui-tooling-preview:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">compose_version</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.lifecycle:lifecycle-runtime-ktx:2.5.1&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.activity:activity-compose:1.6.0&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">testImplementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;junit:junit:4.13.2&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">androidTestImplementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.test.ext:junit:1.1.3&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">androidTestImplementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.test.espresso:espresso-core:3.4.0&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">androidTestImplementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.compose.ui:ui-test-junit4:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">compose_version</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">debugImplementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.compose.ui:ui-tooling:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">compose_version</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">debugImplementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.compose.ui:ui-test-manifest:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">compose_version</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="gradle引入外部gradle文件" tabindex="-1"><a class="header-anchor" href="#gradle引入外部gradle文件"><span>gradle引入外部gradle文件</span></a></h2><ul><li>compat.gradle文件</li></ul><div class="language-groovy line-numbers-mode" data-highlighter="prismjs" data-ext="groovy" data-title="groovy"><pre><code><span class="line">  </span>
<span class="line"><span class="token keyword">def</span> <span class="token function">compatImp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  </span>
<span class="line">    <span class="token keyword">return</span> dependencies <span class="token punctuation">{</span>  </span>
<span class="line">        <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;androidx.core:core-ktx:1.9.0&quot;</span></span><span class="token punctuation">)</span>  </span>
<span class="line">        <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;androidx.annotation:annotation:1.5.0&quot;</span></span><span class="token punctuation">)</span>  </span>
<span class="line">        <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;androidx.appcompat:appcompat:1.5.1&quot;</span></span><span class="token punctuation">)</span>  </span>
<span class="line">        <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;com.google.android.material:material:1.6.1&quot;</span></span><span class="token punctuation">)</span>  </span>
<span class="line">        <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;androidx.constraintlayout:constraintlayout:2.1.4&quot;</span></span><span class="token punctuation">)</span>  </span>
<span class="line">  </span>
<span class="line">    <span class="token punctuation">}</span>  </span>
<span class="line"><span class="token punctuation">}</span>  </span>
<span class="line"><span class="token keyword">def</span> <span class="token function">roomImp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  </span>
<span class="line">    <span class="token keyword">return</span> dependencies <span class="token punctuation">{</span>  </span>
<span class="line">        <span class="token keyword">def</span> room_version <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">&quot;2.5.2&quot;</span></span>  </span>
<span class="line">        <span class="token comment">// Room libraries  </span></span>
<span class="line">        <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;androidx.room:room-runtime:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">room_version</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  </span>
<span class="line">        <span class="token function">ksp</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;androidx.room:room-compiler:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">room_version</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  </span>
<span class="line">        <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;androidx.room:room-ktx:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">room_version</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  </span>
<span class="line">    <span class="token punctuation">}</span>  </span>
<span class="line"><span class="token punctuation">}</span>  </span>
<span class="line">ext <span class="token punctuation">{</span>  </span>
<span class="line">    compatImpl <span class="token operator">=</span> <span class="token keyword">this</span><span class="token operator">.&amp;</span>compatImp  </span>
<span class="line">    roomImpl<span class="token operator">=</span><span class="token keyword">this</span><span class="token operator">.&amp;</span>roomImp  </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>build.gradle.kts引用后使用</li></ul><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">ext<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;coreDeps&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;y&quot;</span></span><span class="token punctuation">)</span>  </span>
<span class="line">ext<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;otherDeps&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;y&quot;</span></span><span class="token punctuation">)</span>  </span>
<span class="line"><span class="token function">apply</span><span class="token punctuation">(</span>from <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;../compat.gradle&quot;</span></span><span class="token punctuation">)</span>  </span>
<span class="line">  </span>
<span class="line"><span class="token keyword">val</span> roomImpl<span class="token operator">:</span> groovy<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>Closure<span class="token operator">&lt;</span>Any<span class="token operator">&gt;</span> <span class="token keyword">by</span> ext  </span>
<span class="line"><span class="token function">roomImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><ul><li>build.gradle引用使用</li></ul><div class="language-groovy" data-highlighter="prismjs" data-ext="groovy" data-title="groovy"><pre><code><span class="line">ext<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;coreDeps&quot;</span></span><span class="token punctuation">,</span><span class="token interpolation-string"><span class="token string">&quot;y&quot;</span></span><span class="token punctuation">)</span>  </span>
<span class="line">apply from<span class="token punctuation">:</span><span class="token interpolation-string"><span class="token string">&quot;../compat.gradle&quot;</span></span>  </span>
<span class="line">apply from<span class="token punctuation">:</span><span class="token interpolation-string"><span class="token string">&quot;../sign.gradle&quot;</span></span></span>
<span class="line"><span class="token function">compatImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h2 id="关于gradle插件" tabindex="-1"><a class="header-anchor" href="#关于gradle插件"><span>关于gradle插件</span></a></h2><p>agp(android gradle plugin)的定义</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">implementation &quot;com.android.tools.build:gradle:7.3.1&quot;</span>
<span class="line"></span></code></pre></div><p>而为什么我们要在根目录的build.gradle.kts加上<code>com.android.application</code>?</p><p><code>com.android.application</code>的artifactid是</p><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// https://mvnrepository.com/artifact/com.android.application/com.android.application.gradle.plugin</span></span>
<span class="line"><span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.application:com.android.application.gradle.plugin:7.3.1&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>内部含有依赖<code>com.android.tools.build:gradle</code>,所以我们只需要引用<code>com.android.application</code>就可以了 同理<code>com.android.library</code></p><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// https://mvnrepository.com/artifact/com.android.library/com.android.library.gradle.plugin</span></span>
<span class="line"><span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.library:com.android.library.gradle.plugin:7.3.1&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>也包含了<code>com.android.tools.build:gradle</code> 我们最终只需要在根目录的build.gradle.kts加上</p><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">plugins <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">id</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.application&quot;</span></span><span class="token punctuation">)</span> version <span class="token string-literal singleline"><span class="token string">&quot;7.3.1&quot;</span></span> apply <span class="token boolean">false</span></span>
<span class="line">    <span class="token function">id</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.library&quot;</span></span><span class="token punctuation">)</span> version <span class="token string-literal singleline"><span class="token string">&quot;7.3.1&quot;</span></span> apply <span class="token boolean">false</span></span>
<span class="line">    <span class="token function">id</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;org.jetbrains.kotlin.android&quot;</span></span><span class="token punctuation">)</span> version <span class="token string-literal singleline"><span class="token string">&quot;1.7.10&quot;</span></span> apply <span class="token boolean">false</span></span>
<span class="line">    <span class="token function">id</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;org.jetbrains.kotlin.jvm&quot;</span></span><span class="token punctuation">)</span> version <span class="token string-literal singleline"><span class="token string">&quot;1.7.10&quot;</span></span> apply <span class="token boolean">false</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h3 id="修改生成apk名称和buildconfig中添加apk支持的cpu架构" tabindex="-1"><a class="header-anchor" href="#修改生成apk名称和buildconfig中添加apk支持的cpu架构"><span>修改生成apk名称和BuildConfig中添加apk支持的cpu架构</span></a></h3><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">val</span> abiCodes <span class="token operator">=</span> <span class="token function">mapOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;armeabi-v7a&quot;</span></span> <span class="token keyword">to</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;x86&quot;</span></span> <span class="token keyword">to</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;x86_64&quot;</span></span> <span class="token keyword">to</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line">android<span class="token punctuation">.</span>applicationVariants<span class="token punctuation">.</span><span class="token function">all</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> buildType <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>buildType<span class="token punctuation">.</span>name</span>
<span class="line">    <span class="token keyword">val</span> variant <span class="token operator">=</span> <span class="token keyword">this</span></span>
<span class="line">    outputs<span class="token punctuation">.</span><span class="token function">all</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">val</span> name <span class="token operator">=</span></span>
<span class="line">            <span class="token keyword">this</span><span class="token punctuation">.</span>filters<span class="token punctuation">.</span><span class="token function">find</span> <span class="token punctuation">{</span> it<span class="token punctuation">.</span>filterType <span class="token operator">==</span> com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>build<span class="token punctuation">.</span>api<span class="token punctuation">.</span>variant<span class="token punctuation">.</span>FilterConfiguration<span class="token punctuation">.</span>FilterType<span class="token punctuation">.</span>ABI<span class="token punctuation">.</span>name <span class="token punctuation">}</span><span class="token operator">?</span><span class="token punctuation">.</span>identifier</span>
<span class="line">        <span class="token keyword">val</span> baseAbiCode <span class="token operator">=</span> abiCodes<span class="token punctuation">[</span>name<span class="token punctuation">]</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>baseAbiCode <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">           <span class="token comment">//写入cpu架构信息</span></span>
<span class="line">            variant<span class="token punctuation">.</span><span class="token function">buildConfigField</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;String&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;CUP_ABI&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;\\&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">name</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\&quot;&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">is</span> com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>build<span class="token punctuation">.</span>gradle<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>api<span class="token punctuation">.</span>ApkVariantOutputImpl<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">//修改apk名称</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>buildType <span class="token operator">==</span> <span class="token string-literal singleline"><span class="token string">&quot;release&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">this</span><span class="token punctuation">.</span>outputFileName <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;KotlinDSL_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">name</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">buildType</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.apk&quot;</span></span></span>
<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>buildType <span class="token operator">==</span> <span class="token string-literal singleline"><span class="token string">&quot;debug&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">this</span><span class="token punctuation">.</span>outputFileName <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;KotlinDSL_V</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">variant<span class="token punctuation">.</span>versionName</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">name</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">buildType</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.apk&quot;</span></span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用java8的timeapi不生效" tabindex="-1"><a class="header-anchor" href="#使用java8的timeapi不生效"><span>使用java8的timeapi不生效</span></a></h2><p>添加</p><div class="language-KotlinDSL" data-highlighter="prismjs" data-ext="KotlinDSL" data-title="KotlinDSL"><pre><code><span class="line">   compileOptions {</span>
<span class="line">      isCoreLibraryDesugaringEnabled=true</span>
<span class="line">        sourceCompatibility = JavaVersion.VERSION_17</span>
<span class="line">        targetCompatibility = JavaVersion.VERSION_17</span>
<span class="line">    }</span>
<span class="line">dependencies{</span>
<span class="line">     coreLibraryDesugaring(&quot;com.android.tools:desugar_jdk_libs:1.2.2&quot;)</span>
<span class="line">}</span>
<span class="line"></span></code></pre></div><h2 id="gradle依赖引入" tabindex="-1"><a class="header-anchor" href="#gradle依赖引入"><span>Gradle依赖引入</span></a></h2><p>自Android studio版本更新至3.0后，连带着<strong>com.android.tools.build:gradle</strong> 工具也升级到了3.0.0，在3.0.0中使用了最新的<strong>Gralde 4.0</strong> 里程碑版本作为gradle的编译版本，该版本gradle编译速度有所加速；</p><h3 id="gradle新老版本关键字" tabindex="-1"><a class="header-anchor" href="#gradle新老版本关键字"><span>Gradle新老版本关键字</span></a></h3><table><thead><tr><th>4.x+版本配置</th><th>已弃用配置</th></tr></thead><tbody><tr><td>api</td><td>compile</td></tr><tr><td>implement</td><td>compile</td></tr><tr><td>compileOnly</td><td>provided</td></tr><tr><td>runtimeOnly</td><td>apk</td></tr><tr><td>testimplementation</td><td>testCompile</td></tr><tr><td>androidTestimplementation</td><td>androidTestCompile</td></tr><tr><td>debugimplementation</td><td>debugCompile</td></tr><tr><td>releaseimplementation</td><td>releaseCompile</td></tr></tbody></table><ul><li><strong>api</strong></li></ul><blockquote><p>与compile对应，功能完全一样，会添加依赖到编译路径，并且会将依赖打包到输出（aar或apk），与implementation不同，这个依赖可以传递，其他module无论在编译时和运行时都可以访问这个依赖的实现，也就是会泄漏一些不应该不使用的实现。举个例子，A依赖B，B依赖C，如果都是使用api配置的话，A可以直接使用C中的类（编译时和运行时），而如果是使用implementation配置的话，在编译时，A是无法访问C中的类的。</p></blockquote><div class="hint-container tip"><p class="hint-container-title">提示</p><p>详细说明:</p><p>假设你开发了一个工具包，你想将这个工具包打包成 <code>jar</code> 文件使得其他人可以使用，一般可以这样做：</p><div class="language-groovy" data-highlighter="prismjs" data-ext="groovy" data-title="groovy"><pre><code><span class="line">plugins <span class="token punctuation">{</span></span>
<span class="line"> id <span class="token string">&#39;java-library&#39;</span></span>
<span class="line"> id <span class="token string">&#39;maven-publish&#39;</span> <span class="token comment">// 使用这个插件打包</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">// ... 其他配置省略</span></span>
<span class="line">dependencies <span class="token punctuation">{</span></span>
<span class="line"> <span class="token comment">// 这个引入是为了说明 api 和其他方式的区别</span></span>
<span class="line"> <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;org.apache.commons:commons-lang3:3.8.1&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>执行以下命令即可在项目目录下的 <code>build/libs</code> 下发现打好的 <code>jar</code> 文件。</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">gradle clean build</span>
<span class="line">或者</span>
<span class="line">gradle clean publishToMavenLocal</span>
<span class="line">这个如果是从远端引用依赖,而不是下载jar包就没问题,远端引用依赖会自动下载pom里面的依赖</span>
<span class="line"></span></code></pre></div><p>此时将 <code>jar</code> 包拷贝给别人的 <code>lib</code> 目录下使用，发现对方无法使用 <code>org.apache.commons:commons-lang3</code> 包下的工具类，需要手动引入一下才行。因为用 <code>implementation</code> 方式引入的依赖在打包后只作用于 <code>runtime</code> ，只有使用 <code>api</code> 的方式才会同时作用于 <code>compile</code> 和 <code>runtime</code> ，同理， <code>compileOnlyApi</code> 就是只作用于 <code>compile</code> 。</p><div class="language-groovy" data-highlighter="prismjs" data-ext="groovy" data-title="groovy"><pre><code><span class="line">plugins <span class="token punctuation">{</span></span>
<span class="line"> id <span class="token string">&#39;java-library&#39;</span></span>
<span class="line"> id <span class="token string">&#39;maven-publish&#39;</span> <span class="token comment">// 使用这个插件打包</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">// ... 其他配置省略</span></span>
<span class="line">dependencies <span class="token punctuation">{</span></span>
<span class="line"> <span class="token comment">// 这个引入是为了说明 api 和其他方式的区别</span></span>
<span class="line"> <span class="token function">api</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;org.apache.commons:commons-lang3:3.8.1&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>上面代码打包为jar,给别人引用就可以使用commons-lang3里面的方法了,</p><p>注意,只能是<code>api(project(&quot;:util&quot;))</code>这种,如果是使用打包的jar包,就不行,需要你的jar把依赖的文件打包进去</p><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">dependencies<span class="token punctuation">{</span></span>
<span class="line"><span class="token function">api</span><span class="token punctuation">(</span><span class="token function">fileTree</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;libs&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>  </span>
<span class="line">  <span class="token function">include</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;*.jar&quot;</span></span><span class="token punctuation">)</span>  </span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>java-library打包依赖到jar包的方法,注意这时候,api和implementation就不起作用了,因为已经打包进jar里面了</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">tasks<span class="token punctuation">.</span><span class="token function">jar</span> <span class="token punctuation">{</span>  </span>
<span class="line">   </span>
<span class="line">  <span class="token function">from</span><span class="token punctuation">(</span>configurations<span class="token punctuation">.</span>runtimeClasspath<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span> <span class="token punctuation">{</span>  </span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>it<span class="token punctuation">.</span>isDirectory<span class="token punctuation">)</span> it <span class="token keyword">else</span> <span class="token function">zipTree</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span>  </span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span>  </span>
<span class="line">  <span class="token keyword">val</span> sourcesMain <span class="token operator">=</span> sourceSets<span class="token punctuation">.</span>main<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  </span>
<span class="line">  sourcesMain<span class="token punctuation">.</span>allSource<span class="token punctuation">.</span><span class="token function">forEach</span> <span class="token punctuation">{</span> <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;add from sources: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">it<span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">}</span>  </span>
<span class="line">  <span class="token function">from</span><span class="token punctuation">(</span>sourcesMain<span class="token punctuation">.</span>output<span class="token punctuation">)</span>  </span>
<span class="line">  manifest <span class="token punctuation">{</span>  </span>
<span class="line">    attributes<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;Manifest-Version&quot;</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;1.0&quot;</span></span>  </span>
<span class="line">    attributes<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;Multi-Release&quot;</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;true&quot;</span></span>  </span>
<span class="line">  </span>
<span class="line">  <span class="token punctuation">}</span>  </span>
<span class="line">  </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>别人使用gradle引用的方法大概是这样</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">dependencies {</span>
<span class="line"> // 这个引入是为了说明 api 和其他方式的区别</span>
<span class="line"> api(&quot;org.apache.commons:commons-lang3:3.8.1&quot;)</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line"></span></code></pre></div></div><ul><li><strong>implementation</strong></li></ul><blockquote><p>与compile对应，会添加依赖到编译路径，并且会将依赖打包到输出（aar或apk），但是<strong>在编译时不会将依赖的实现暴露给其他module</strong>，也就是只有在运行时其他module才能访问这个依赖中的实现;((打包出来不包含他依赖的库,需要自行添加))</p></blockquote><blockquote><p>简单的说，就是使用implementation指令的依赖不会传递;</p></blockquote><blockquote><p>使用这个配置，可以显著提升构建时间，因为它可以减少重新编译的module的数量。Google建议尽量使用这个依赖配置;</p></blockquote><ul><li><strong>compileOnly</strong></li></ul><blockquote><p>与provided对应，Gradle把依赖加到编译路径，编译时使用，不会打包到输出（aar或apk）。这可以减少输出的体积，在只在编译时需要，在运行时可选的情况，很有用,比如lombok</p></blockquote><ul><li><strong>runtimeOnly</strong></li></ul><blockquote><p>表示引入的依赖不参与编译，只在运行时才用得到。比如： <code>数据库驱动</code>。</p></blockquote><ul><li><strong>testImplementation</strong></li></ul><blockquote><p>只在单元测试代码的编译以及最终打包测试apk时有效。</p></blockquote><ul><li><strong>androidTestImplementation</strong></li></ul><blockquote><p>只在Android相关单元测试代码的编译以及最终打包测试apk时有效。</p></blockquote><ul><li><strong>debugImplementation</strong></li></ul><blockquote><p>只在 debug 模式的编译和最终的 debug apk 打包时有效</p></blockquote><ul><li><strong>releaseImplementation</strong></li></ul><blockquote><p>仅仅针对 Release 模式的编译和最终的 Release apk 打包。</p></blockquote><hr><h3 id="引入依赖基本方式" tabindex="-1"><a class="header-anchor" href="#引入依赖基本方式"><span>引入依赖基本方式</span></a></h3><p>理论上gradle支持三种类型的引用，方式如下：</p><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">dependencies <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token function">project</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;:projectABC&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token function">fileTree</span><span class="token punctuation">(</span>dir<span class="token operator">:</span> <span class="token string-literal singleline"><span class="token string">&quot;libs&quot;</span></span><span class="token punctuation">,</span> include<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;*.jar&quot;</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.appcompat:appcompat:1.0.2&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h4 id="_1-本地项目依赖-module依赖" tabindex="-1"><a class="header-anchor" href="#_1-本地项目依赖-module依赖"><span>1. 本地项目依赖 --&gt; module依赖</span></a></h4><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">dependencies <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token function">project</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;:projectABC&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>这种依赖方式是直接依赖本地工程代码，比如这个 <strong>:projectABC</strong> 就是在整个工程项目配置的 <strong>settings.gradle</strong> 中进行include操作; 例如：</p><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">dependencies <span class="token punctuation">{</span></span>
<span class="line">   <span class="token function">include</span> <span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;:projectABC&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h4 id="_2-本地二进制依赖-jar和so等文件" tabindex="-1"><a class="header-anchor" href="#_2-本地二进制依赖-jar和so等文件"><span>2. 本地二进制依赖 --&gt; jar和so等文件</span></a></h4><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">dependencies <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token function">fileTree</span><span class="token punctuation">(</span>dir<span class="token operator">:</span> <span class="token string-literal singleline"><span class="token string">&quot;libs&quot;</span></span><span class="token punctuation">,</span> include<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;*.jar&quot;</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>这种依赖方式是依赖工程中 <strong>libs</strong> 目录下的Jar等文件；</p><p>如果还想进行单独某个文件的引用</p><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">dependencies <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token function">files</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;libs/aaa.jar&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;libs/bbb.jar&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token function">files</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;x/y/z/ccc.jar&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><blockquote><p>注意：Gradle的路径是相对于build.gradle文件来读取的，所以上面是这样的相对路径</p></blockquote><h4 id="_3-远端二进制依赖" tabindex="-1"><a class="header-anchor" href="#_3-远端二进制依赖"><span>3.远端二进制依赖</span></a></h4><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">dependencies <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.appcompat:appcompat:1.0.2&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>这是简洁写法，也可以进行完整写法，如：</p><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">dependencies <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span>group<span class="token operator">:</span> <span class="token string-literal singleline"><span class="token string">&quot;androidx.appcompat&quot;</span></span><span class="token punctuation">,</span> name<span class="token operator">:</span><span class="token string-literal singleline"><span class="token string">&quot;appcompat&quot;</span></span><span class="token punctuation">,</span> version<span class="token operator">:</span><span class="token string-literal singleline"><span class="token string">&quot;1.0.2&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><hr><h3 id="引入依赖复杂方式" tabindex="-1"><a class="header-anchor" href="#引入依赖复杂方式"><span>引入依赖复杂方式</span></a></h3><h4 id="根据task类型引入" tabindex="-1"><a class="header-anchor" href="#根据task类型引入"><span>根据Task类型引入</span></a></h4><p>有时候我们在引入的时候还需要考虑debug，release，test包的情况如</p><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">dependencies <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">testimplementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;junit:junit:4.12&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token function">androidTestimplementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.support.test:runner:1.0.1&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">androidTestimplementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.support.test.espresso:espresso-core:3.0.1&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token function">debugimplementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.squareup.leakcanary:leakcanary-android:2.0-beta-2&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">releaseimplementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.squareup.leakcanary:leakcanary-android-no-op:2.0-beta-2&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h4 id="排除引用" tabindex="-1"><a class="header-anchor" href="#排除引用"><span>排除引用</span></a></h4><p>有时候为了解决引入的冲突，需要在引入远端包的同时排除这些包的某几个依赖</p><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">dependencies <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.github.bumptech.glide:glide:4.9.0&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">exclude</span> <span class="token punctuation">(</span>group<span class="token operator">:</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.support&quot;</span></span><span class="token punctuation">,</span> module<span class="token operator">:</span> <span class="token string-literal singleline"><span class="token string">&quot;support-fragment&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">exclude</span> <span class="token punctuation">(</span>group<span class="token operator">:</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.support&quot;</span></span><span class="token punctuation">,</span> module<span class="token operator">:</span> <span class="token string-literal singleline"><span class="token string">&quot;support-core-ui&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">exclude</span> <span class="token punctuation">(</span>group<span class="token operator">:</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.support&quot;</span></span><span class="token punctuation">,</span> module<span class="token operator">:</span> <span class="token string-literal singleline"><span class="token string">&quot;support-compat&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">exclude</span> <span class="token punctuation">(</span>group<span class="token operator">:</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.support&quot;</span></span><span class="token punctuation">,</span> module<span class="token operator">:</span> <span class="token string-literal singleline"><span class="token string">&quot;support-annotations&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h2 id="让debug和release不冲突" tabindex="-1"><a class="header-anchor" href="#让debug和release不冲突"><span>让debug和release不冲突</span></a></h2><p>添加下面的,包名会改变</p><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">//kotlin kts</span></span>
<span class="line">buildTypes<span class="token punctuation">{</span></span>
<span class="line">     <span class="token function">named</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;debug&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            applicationIdSuffix<span class="token operator">=</span><span class="token string-literal singleline"><span class="token string">&quot;.debug&quot;</span></span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><div class="language-groovy" data-highlighter="prismjs" data-ext="groovy" data-title="groovy"><pre><code><span class="line"><span class="token comment">// groovy</span></span>
<span class="line">buildTypes<span class="token punctuation">{</span></span>
<span class="line">     debug<span class="token punctuation">{</span></span>
<span class="line">            applicationIdSuffix<span class="token operator">=</span><span class="token interpolation-string"><span class="token string">&quot;.debug&quot;</span></span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>或者</p><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">productFlavors <span class="token punctuation">{</span></span>
<span class="line">    free <span class="token punctuation">{</span></span>
<span class="line">        applicationId <span class="token string-literal singleline"><span class="token string">&quot;net.company.appname.free&quot;</span></span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    paid <span class="token punctuation">{</span></span>
<span class="line">        applicationId <span class="token string-literal singleline"><span class="token string">&quot;net.company.appname.paid&quot;</span></span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h2 id="split-api" tabindex="-1"><a class="header-anchor" href="#split-api"><span>split api</span></a></h2><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">//kotlin kts </span></span>
<span class="line">  splits <span class="token punctuation">{</span></span>
<span class="line">            abi <span class="token punctuation">{</span></span>
<span class="line">                isEnable<span class="token operator">=</span><span class="token boolean">true</span></span>
<span class="line">                <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token comment">// 设置包含，调用前需要先用 reset 将默认清除</span></span>
<span class="line">                <span class="token function">include</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;arm64-v8a&quot;</span></span><span class="token punctuation">,</span><span class="token string-literal singleline"><span class="token string">&quot;armeabi-v7a&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                isUniversalApk <span class="token operator">=</span><span class="token boolean">true</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><div class="language-groovy" data-highlighter="prismjs" data-ext="groovy" data-title="groovy"><pre><code><span class="line">defaultConfig<span class="token punctuation">{</span></span>
<span class="line">     splits <span class="token punctuation">{</span></span>
<span class="line">            abi <span class="token punctuation">{</span></span>
<span class="line">                enable <span class="token boolean">true</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h2 id="gradle-设置builddir" tabindex="-1"><a class="header-anchor" href="#gradle-设置builddir"><span>gradle 设置buildDir</span></a></h2><p><code>Project.getBuildDir()</code> returns a non-lazy <code>File</code> which risks ordering issues between plugins and build file that read this before the value is changed.</p><p><code>ProjectLayout. getBuildDirectory()</code> was introduced in Gradle 4.1, so I think it&#39;s time to retire the old API by deprecating it in 8.0 and removing it in 9.0.</p><p>I am less concerned about <code>Project.setBuildDir()</code> has it&#39;s really the same as calling <code>ProjectLayout. getBuildDirectory().set()</code> but obviously deprecating/removing it would keep things consistent.</p><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">allprojects<span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 将构建文件统一输出到项目根目录下的 build 文件夹</span></span>
<span class="line">    layout<span class="token punctuation">.</span>buildDirectory <span class="token operator">=</span> <span class="token function">File</span><span class="token punctuation">(</span>rootDir<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;build/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token char">&#39;:&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;/&#39;</span><span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h2 id="使用includebuild" tabindex="-1"><a class="header-anchor" href="#使用includebuild"><span>使用includeBuild</span></a></h2><p>添加插件</p><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">pluginManagement <span class="token punctuation">{</span></span>
<span class="line">    repositories <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">maven</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;https://jitpack.io&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">gradlePluginPortal</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">google</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">mavenCentral</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token function">includeBuild</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span><span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;gradle_plugin_bom&quot;</span></span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string-literal singleline"><span class="token string">&quot;\\\\deps&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>然后就可以在子项目使用插件了</p><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">plugins <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">id</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.github.your-repo-name.your-plugin-name&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h3 id="添加外部library" tabindex="-1"><a class="header-anchor" href="#添加外部library"><span>添加外部library</span></a></h3><ul><li>第一种方法</li></ul><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">//\`settings.gradle.kts\`</span></span>
<span class="line"><span class="token function">include</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;:compLib&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">project</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;:compLib&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>projectDir<span class="token operator">=</span><span class="token function">file</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span><span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;gradle_plugin_bom&quot;</span></span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string-literal singleline"><span class="token string">&quot;\\\\compLib&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">//子项目中使用</span></span>
<span class="line">dependencies <span class="token punctuation">{</span></span>
<span class="line"> <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token function">project</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;:compLib&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><ul><li>第二中方法</li></ul><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">//</span></span>
<span class="line"><span class="token function">includeBuild</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span><span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;gradle_plugin_bom&quot;</span></span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string-literal singleline"><span class="token string">&quot;\\\\klee&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">//子项目中使用</span></span>
<span class="line"></span>
<span class="line"><span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;ab.yzq.klee:klee:1.0.0&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div>`,113)]))}const c=s(e,[["render",l]]),u=JSON.parse('{"path":"/kotlin-tutor/gradle/gradle-tips.html","title":"gradle技巧","lang":"zh-CN","frontmatter":{"description":"gradle技巧 gradle添加ext 使用extra 注意 https://juejin.cn/post/6979872825561579533 https://developer.android.google.cn/studio/build/migrate-to-kts?hl=zh-cn Google 官方推荐的一个 Gradle 配置最佳实践是...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/kotlin-tutor/gradle/gradle-tips.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"gradle技巧"}],["meta",{"property":"og:description","content":"gradle技巧 gradle添加ext 使用extra 注意 https://juejin.cn/post/6979872825561579533 https://developer.android.google.cn/studio/build/migrate-to-kts?hl=zh-cn Google 官方推荐的一个 Gradle 配置最佳实践是..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-05T15:16:51.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-05T15:16:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"gradle技巧\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-05T15:16:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"gradle添加ext","slug":"gradle添加ext","link":"#gradle添加ext","children":[]},{"level":2,"title":"使用extra","slug":"使用extra","link":"#使用extra","children":[]},{"level":2,"title":"使用gradle.properties","slug":"使用gradle-properties","link":"#使用gradle-properties","children":[]},{"level":2,"title":"gradle引入外部gradle文件","slug":"gradle引入外部gradle文件","link":"#gradle引入外部gradle文件","children":[]},{"level":2,"title":"关于gradle插件","slug":"关于gradle插件","link":"#关于gradle插件","children":[{"level":3,"title":"修改生成apk名称和BuildConfig中添加apk支持的cpu架构","slug":"修改生成apk名称和buildconfig中添加apk支持的cpu架构","link":"#修改生成apk名称和buildconfig中添加apk支持的cpu架构","children":[]}]},{"level":2,"title":"使用java8的timeapi不生效","slug":"使用java8的timeapi不生效","link":"#使用java8的timeapi不生效","children":[]},{"level":2,"title":"Gradle依赖引入","slug":"gradle依赖引入","link":"#gradle依赖引入","children":[{"level":3,"title":"Gradle新老版本关键字","slug":"gradle新老版本关键字","link":"#gradle新老版本关键字","children":[]},{"level":3,"title":"引入依赖基本方式","slug":"引入依赖基本方式","link":"#引入依赖基本方式","children":[{"level":4,"title":"1. 本地项目依赖 --> module依赖","slug":"_1-本地项目依赖-module依赖","link":"#_1-本地项目依赖-module依赖","children":[]},{"level":4,"title":"2. 本地二进制依赖 --> jar和so等文件","slug":"_2-本地二进制依赖-jar和so等文件","link":"#_2-本地二进制依赖-jar和so等文件","children":[]},{"level":4,"title":"3.远端二进制依赖","slug":"_3-远端二进制依赖","link":"#_3-远端二进制依赖","children":[]}]},{"level":3,"title":"引入依赖复杂方式","slug":"引入依赖复杂方式","link":"#引入依赖复杂方式","children":[{"level":4,"title":"根据Task类型引入","slug":"根据task类型引入","link":"#根据task类型引入","children":[]},{"level":4,"title":"排除引用","slug":"排除引用","link":"#排除引用","children":[]}]}]},{"level":2,"title":"让debug和release不冲突","slug":"让debug和release不冲突","link":"#让debug和release不冲突","children":[]},{"level":2,"title":"split api","slug":"split-api","link":"#split-api","children":[]},{"level":2,"title":"gradle 设置buildDir","slug":"gradle-设置builddir","link":"#gradle-设置builddir","children":[]},{"level":2,"title":"使用includeBuild","slug":"使用includebuild","link":"#使用includebuild","children":[{"level":3,"title":"添加外部library","slug":"添加外部library","link":"#添加外部library","children":[]}]}],"git":{"createdTime":1684738995000,"updatedTime":1704467811000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":4,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":8.57,"words":2572},"filePathRelative":"kotlin-tutor/gradle/gradle-tips.md","localizedDate":"2023年5月22日","autoDesc":true}');export{c as comp,u as data};
