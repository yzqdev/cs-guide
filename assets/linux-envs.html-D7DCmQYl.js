import{_ as s,c as e,a as n,o as l}from"./app-C8DxhDIZ.js";const p={};function t(i,a){return l(),e("div",null,a[0]||(a[0]=[n(`<h1 id="linux环境变量" tabindex="-1"><a class="header-anchor" href="#linux环境变量"><span>linux环境变量</span></a></h1><blockquote><p>来自<a href="https://www.cnblogs.com/lmh001/p/9999859.html" target="_blank" rel="noopener noreferrer">lvmenghui001</a>  ,  侵删</p></blockquote><p>Shell变量有局部变量、环境变量之分。局部变量就是指在某个Shell中生效的变量，只在此次登录中有效。环境变量通常又称“全局变量”，虽然在Shell中变量默认就是全局的，但是为了让子Shall继承当前Shell的变量，需要使用export内建命令将其导出为环境变量。</p><h2 id="一、linux系统变量的类型" tabindex="-1"><a class="header-anchor" href="#一、linux系统变量的类型"><span>一、linux系统变量的类型</span></a></h2><p>按变量的生存周期划分：</p><p>永久的：需要修改配置文件，变量永久生效。 临时的：使用export命令声明即可，变量在关闭shell时失效。</p><p>在配置永久的环境变量时，又可以按照作用范围分为：</p><p>用户环境变量 系统环境变量。 系统环境变量对所有系统用户都有效，用户环境变量仅仅对当前的用户有效。</p><h2 id="二、设置环境变量" tabindex="-1"><a class="header-anchor" href="#二、设置环境变量"><span>二、设置环境变量</span></a></h2><ol><li>直接运行export命令定义变量 在shell的命令行下直接使用[export 变量名=变量值] 定义变量。该变量只在当前的shell（BASH）或其子shell（BASH）下是有效的，shell关闭了，变量也就失效了，再打开新shell时就没有这个变量，需要使用的话还需要重新定义。</li><li>修改系统环境变量 系统环境变量一般保存在下面的文件中</li></ol><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">/etc/profile</span>
<span class="line"></span></code></pre></div><p>全局（公有）配置，不管是哪个用户，登录时都会读取该文件。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">/etc/bash.bashrc</span>
<span class="line"></span></code></pre></div><p>它也是全局（公有）的 bash执行时，不管是何种方式，都会读取此文件。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">/etc/environment</span>
<span class="line"></span></code></pre></div><p>不要轻易修改此文件</p><h2 id="_3-修改用户环境变量" tabindex="-1"><a class="header-anchor" href="#_3-修改用户环境变量"><span>3. 修改用户环境变量</span></a></h2><p>用户环境变量通常被存储在下面的文件中：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">~/.profile</span>
<span class="line"></span></code></pre></div><p>若bash是以login方式执行时，读取<code>~/.bash_profile</code>，若它不存在，则读取<code>~/.bash_login</code>，若前两者不存在，读取<code>~/.profile</code>。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">~/.bash_profile 或者~./bash_login</span>
<span class="line"></span></code></pre></div><p>若bash是以login方式执行时，读取<code>~/.bash_profile</code>，若它不存,则读取<code>~/.bash_login</code>，若前两者不存在，读取 <code>~/.profile</code>。 只有bash是以login形式执行时，才会读取.bash_profile，Unbutu默认没有此文件，可新建。 通常该配置文件还会配置成去读取<code>~/.bashrc</code>。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">~/.bashrc</span>
<span class="line"></span></code></pre></div><p>当bash是以non-login形式执行时，读取此文件。若是以login形式执行，则不会读取此文件。</p><p><code>~/.bash_profile</code>是交互式、login 方式进入 bash 运行的 <code>~/.bashrc</code>是交互式 non-login 方式进入 bash 运行的通常二者设置大致相同，所以通常前者会调用后者。</p><h2 id="_4-修改环境变量配置文件" tabindex="-1"><a class="header-anchor" href="#_4-修改环境变量配置文件"><span>4. 修改环境变量配置文件</span></a></h2><p>如想将一个路径加入到环境变量（例如$PATH）中，可以像下面这样做（修改/etc/profile）：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">vi</span> /etc/profile</span>
<span class="line"></span></code></pre></div><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:PATH_1:PATH_2:PATH_3:------:PATH_N </span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token environment constant">PATH</span></span>
<span class="line"></span></code></pre></div><p>你可以自己加上指定的路径，中间用冒号隔开。环境变量更改后，在用户下次登陆时生效，如果想立刻生效，则可执行下面的语句：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">source</span> /etc/profile</span>
<span class="line"></span></code></pre></div><h2 id="三、环境配置文件的区别" tabindex="-1"><a class="header-anchor" href="#三、环境配置文件的区别"><span>三、环境配置文件的区别</span></a></h2><h2 id="_1-profile、-bashrc、-bash-profile、-bashrc介绍" tabindex="-1"><a class="header-anchor" href="#_1-profile、-bashrc、-bash-profile、-bashrc介绍"><span>1. profile、 bashrc、.bash_profile、 .bashrc介绍</span></a></h2><p>bash会在用户登录时，读取下列四个环境配置文件：</p><p>全局环境变量设置文件：<code>/etc/profile</code>、<code>/etc/bashrc</code>。 用户环境变量设置文件：<code>~/.bash_profile</code>、<code>~/.bashrc</code>。</p><p>读取顺序：① <code>/etc/profile</code>、② <code>~/.bash_profile</code>、③ <code>~/.bashrc</code>、④ <code>/etc/bashrc</code>。</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">①\` /etc/profile\`：此文件为系统的每个用户设置环境信息，系统中每个用户登录时都要执行这个脚本，如果系统管理员希望某个设置对所有用户都生效，可以写在这个脚本里，该文件也会从\`/etc/profile.d\`目录中的配置文件中搜集shell的设置。 </span>
<span class="line">②\` ~/.bash_profile\`：每个用户都可使用该文件设置专用于自己的shell信息，当用户登录时，该文件仅执行一次。默认情况下，他设置一些环境变量，执行用户的\`.bashrc\`文件。 </span>
<span class="line">③\` ~/.bashrc\`：该文件包含专用于自己的shell信息，当登录时以及每次打开新shell时，该文件被读取。 </span>
<span class="line">④\` /etc/bashrc\`：为每一个运行bash shell的用户执行此文件，当bash shell被打开时，该文件被读取。</span>
<span class="line"></span></code></pre></div><p>2 <code>.bashrc</code>和<code>.bash_profile</code>的区别</p><p><code>.bash_profile</code>会用在登陆shell， <code>.bashrc</code>使用在交互式非登陆 shell 。简单说来，它们的区别主要是<code>.bash_profile</code>是在你每次登录的时候执行的；<code>.bashrc</code>是在你新开了一个命令行窗口时执行的。 当通过控制台进行登录（输入用户名和密码）：在初始化命令行提示符的时候会执行.bash_profile 来配置你的shell环境。但是如果已经登录到机器，在Gnome或者是KDE也开了一个新的终端窗口（xterm），这时，.bashrc会在窗口命令行提示符出现前被执行。当你在终端敲入/bin/bash时.bashrc也会在这个新的bash实例启动的时候执行。</p><ol start="3"><li>建议 大多数的时候你不想维护两个独立的配置文件，一个登录的一个非登录的shell。当你设置PATH时，你想在两个文件都适用。可以在.bash_profile中调用.bashrc，然后将PATH和其他通用的设置放到.bashrc中。 要做到这几点，添加以下几行到.bash_profile中：</li></ol><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> ~/.bashrc <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">.</span> ~/.bashrc</span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre></div><p>所以对于我自己,我写了一个<code>.pathrc</code>文件 然后在<code>.bashrc</code>,<code>.zshrc</code>,<code>.bash_profile</code>,<code>/etc/profile</code>中都加了</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> ~/.pathrc <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">.</span> ~/.pathrc</span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre></div><p>下面是<code>.pathrc</code>文件</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">DENO_INSTALL</span><span class="token operator">=</span><span class="token string">&quot;/home/yzqdev/.deno&quot;</span></span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/home/yzqdev/.jdks/jdk-17.0.2+8</span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">NODEPATH</span><span class="token operator">=</span>/opt/nodejs</span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">GOMODPATH</span><span class="token operator">=</span>/opt/go</span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">OPENPATH</span><span class="token operator">=</span>/usr/local/openresty/nginx</span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">$GOMODPATH</span>/bin:<span class="token variable">$GOMODPATH</span>/golangmod/bin:<span class="token variable">$OPENPATH</span>/sbin:<span class="token variable">$NODEPATH</span>/bin:<span class="token variable">$JAVA_HOME</span>/bin:<span class="token variable">$DENO_INSTALL</span>/bin:<span class="token environment constant">$PATH</span>&quot;</span></span>
<span class="line"></span></code></pre></div><p>现在，当你从控制台登录机器的时候，.bashrc就会被执行。</p><p>四、常用的环境变量</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">BASH Bash Shell的全路径</span>
<span class="line">CDPATH       用于快速进入某个目录。</span>
<span class="line">PATH       决定了shell将到哪些目录中寻找命令或程序</span>
<span class="line">HOME       当前用户主目录</span>
<span class="line">HISTSIZE       历史记录数</span>
<span class="line">LOGNAME       当前用户的登录名</span>
<span class="line">HOSTNAME       指主机的名称</span>
<span class="line">SHELL       当前用户Shell类型</span>
<span class="line">LANGUGE       语言相关的环境变量，多语言可以修改此环境变量</span>
<span class="line">MAIL       当前用户的邮件存放目录</span>
<span class="line">PS1       基本提示符，对于root用户是#，对于普通用户是$</span>
<span class="line"></span></code></pre></div><p>Reference [1] /etc/profile、/etc/bashrc、<s>/.bash_profile、</s>/.bashrc <a href="http://blog.chinaunix.net/uid-26435987-id-3400127.html" target="_blank" rel="noopener noreferrer">http://blog.chinaunix.net/uid-26435987-id-3400127.html</a> [2] Linux如何修改env看到的环境变量？ .bashrc和.bash_profile区别 <a href="http://blog.csdn.net/xifeijian/article/details/13355031" target="_blank" rel="noopener noreferrer">http://blog.csdn.net/xifeijian/article/details/13355031</a> [3] linux环境变量，bashrc与bashprofile <a href="http://blog.sina.com.cn/s/blog_43e5ad4e0101ei43.html" target="_blank" rel="noopener noreferrer">http://blog.sina.com.cn/s/blog_43e5ad4e0101ei43.html</a></p>`,49)]))}const c=s(p,[["render",t]]),r=JSON.parse('{"path":"/linux-tutor/linux-tips/linux-envs.html","title":"linux环境变量","lang":"zh-CN","frontmatter":{"description":"linux环境变量 来自lvmenghui001 , 侵删 Shell变量有局部变量、环境变量之分。局部变量就是指在某个Shell中生效的变量，只在此次登录中有效。环境变量通常又称“全局变量”，虽然在Shell中变量默认就是全局的，但是为了让子Shall继承当前Shell的变量，需要使用export内建命令将其导出为环境变量。 一、linux系统变量的...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/linux-tutor/linux-tips/linux-envs.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"linux环境变量"}],["meta",{"property":"og:description","content":"linux环境变量 来自lvmenghui001 , 侵删 Shell变量有局部变量、环境变量之分。局部变量就是指在某个Shell中生效的变量，只在此次登录中有效。环境变量通常又称“全局变量”，虽然在Shell中变量默认就是全局的，但是为了让子Shall继承当前Shell的变量，需要使用export内建命令将其导出为环境变量。 一、linux系统变量的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-26T13:49:46.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-26T13:49:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"linux环境变量\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-26T13:49:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"一、linux系统变量的类型","slug":"一、linux系统变量的类型","link":"#一、linux系统变量的类型","children":[]},{"level":2,"title":"二、设置环境变量","slug":"二、设置环境变量","link":"#二、设置环境变量","children":[]},{"level":2,"title":"3. 修改用户环境变量","slug":"_3-修改用户环境变量","link":"#_3-修改用户环境变量","children":[]},{"level":2,"title":"4. 修改环境变量配置文件","slug":"_4-修改环境变量配置文件","link":"#_4-修改环境变量配置文件","children":[]},{"level":2,"title":"三、环境配置文件的区别","slug":"三、环境配置文件的区别","link":"#三、环境配置文件的区别","children":[]},{"level":2,"title":"1. profile、 bashrc、.bash_profile、 .bashrc介绍","slug":"_1-profile、-bashrc、-bash-profile、-bashrc介绍","link":"#_1-profile、-bashrc、-bash-profile、-bashrc介绍","children":[]}],"git":{"createdTime":1647861419000,"updatedTime":1701006586000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":3,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":5.32,"words":1596},"filePathRelative":"linux-tutor/linux-tips/linux-envs.md","localizedDate":"2022年3月21日","autoDesc":true}');export{c as comp,r as data};
