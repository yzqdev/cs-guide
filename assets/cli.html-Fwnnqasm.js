import{_ as t,c as d,a as o,o as r}from"./app-C8DxhDIZ.js";const a={};function c(n,e){return r(),d("div",null,e[0]||(e[0]=[o(`<h1 id="命令行工具" tabindex="-1"><a class="header-anchor" href="#命令行工具"><span>命令行工具</span></a></h1><h2 id="安装全局工具" tabindex="-1"><a class="header-anchor" href="#安装全局工具"><span>安装全局工具</span></a></h2><div class="language-powershell" data-highlighter="prismjs" data-ext="powershell" data-title="powershell"><pre><code><span class="line">npm i <span class="token operator">-</span>g @nestjs/<span class="token function">cli</span></span>
<span class="line"><span class="token comment"># 帮助</span></span>
<span class="line"> nest generate <span class="token operator">--</span>help</span>
<span class="line"></span></code></pre></div><h2 id="一些命令" tabindex="-1"><a class="header-anchor" href="#一些命令"><span>一些命令</span></a></h2><p>推荐用<code>nest g resource [name]</code>直接创建一个curd类</p><table><thead><tr><th>Name</th><th>Alias</th><th>Description</th></tr></thead><tbody><tr><td><code>app</code></td><td></td><td>Generate a new application within a monorepo (converting to monorepo if it&#39;s a standard structure).</td></tr><tr><td><code>library</code></td><td><code>lib</code></td><td>Generate a new library within a monorepo (converting to monorepo if it&#39;s a standard structure).</td></tr><tr><td><code>class</code></td><td><code>cl</code></td><td>Generate a new class.</td></tr><tr><td><code>controller</code></td><td><code>co</code></td><td>Generate a controller declaration.</td></tr><tr><td><code>decorator</code></td><td><code>d</code></td><td>Generate a custom decorator.</td></tr><tr><td><code>filter</code></td><td><code>f</code></td><td>Generate a filter declaration.</td></tr><tr><td><code>gateway</code></td><td><code>ga</code></td><td>Generate a gateway declaration.</td></tr><tr><td><code>guard</code></td><td><code>gu</code></td><td>Generate a guard declaration.</td></tr><tr><td><code>interface</code></td><td><code>itf</code></td><td>Generate an interface.</td></tr><tr><td><code>interceptor</code></td><td><code>itc</code></td><td>Generate an interceptor declaration.</td></tr><tr><td><code>middleware</code></td><td><code>mi</code></td><td>Generate a middleware declaration.</td></tr><tr><td><code>module</code></td><td><code>mo</code></td><td>Generate a module declaration.</td></tr><tr><td><code>pipe</code></td><td><code>pi</code></td><td>Generate a pipe declaration.</td></tr><tr><td><code>provider</code></td><td><code>pr</code></td><td>Generate a provider declaration.</td></tr><tr><td><code>resolver</code></td><td><code>r</code></td><td>Generate a resolver declaration.</td></tr><tr><td><code>resource</code></td><td><code>res</code></td><td>Generate a new CRUD resource. See the <a href="https://docs.nestjs.com/recipes/crud-generator" target="_blank" rel="noopener noreferrer">CRUD (resource) generator</a> for more details.</td></tr><tr><td><code>service</code></td><td><code>s</code></td><td>Generate a service declaration.</td></tr></tbody></table><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h2><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><code>--dry-run</code></td><td>Reports changes that would be made, but does not change the filesystem. Alias: <code>-d</code></td></tr><tr><td><code>--project [project]</code></td><td>Project that element should be added to. Alias: <code>-p</code></td></tr><tr><td><code>--flat</code></td><td>Do not generate a folder for the element.</td></tr><tr><td><code>--collection [collectionName]</code></td><td>Specify schematics collection. Use package name of installed npm package containing schematic. Alias: <code>-c</code></td></tr><tr><td><code>--spec</code></td><td>Enforce spec files generation (default)</td></tr><tr><td><code>--no-spec</code></td><td>Disable spec files generation</td></tr></tbody></table>`,8)]))}const i=t(a,[["render",c]]),l=JSON.parse('{"path":"/node-tutor/nestjs/cli.html","title":"命令行工具","lang":"zh-CN","frontmatter":{"description":"命令行工具 安装全局工具 一些命令 推荐用nest g resource [name]直接创建一个curd类 options","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/node-tutor/nestjs/cli.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"命令行工具"}],["meta",{"property":"og:description","content":"命令行工具 安装全局工具 一些命令 推荐用nest g resource [name]直接创建一个curd类 options"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-25T05:00:38.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-25T05:00:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"命令行工具\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-25T05:00:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"安装全局工具","slug":"安装全局工具","link":"#安装全局工具","children":[]},{"level":2,"title":"一些命令","slug":"一些命令","link":"#一些命令","children":[]},{"level":2,"title":"options","slug":"options","link":"#options","children":[]}],"git":{"createdTime":1687669238000,"updatedTime":1687669238000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":1,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":0.83,"words":248},"filePathRelative":"node-tutor/nestjs/cli.md","localizedDate":"2023年6月25日","autoDesc":true}');export{i as comp,l as data};
