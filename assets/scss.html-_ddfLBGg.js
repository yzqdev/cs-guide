import{_ as n,c as a,a as e,o as p}from"./app-C8DxhDIZ.js";const t={};function l(c,s){return p(),a("div",null,s[0]||(s[0]=[e(`<h2 id="scss技巧" tabindex="-1"><a class="header-anchor" href="#scss技巧"><span>scss技巧</span></a></h2><h2 id="嵌套-复用" tabindex="-1"><a class="header-anchor" href="#嵌套-复用"><span>嵌套,复用</span></a></h2><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token comment">//推荐使用 @extend</span></span>
<span class="line"><span class="token selector">.button </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">padding</span><span class="token punctuation">:</span> 10px 20px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.button-green </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">@extend</span> .button<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">background</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.button-red </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">@extend</span> .button<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用@extend产生 DRY CSS风格的代码。但是@mixin就不能产生DRY式的代码。</p><p>@extend会增加选择器之间的联系，然后把他们堆在一起。你正在为一些相关的元素设置样式，就拿一组按钮来说，使用@extend让他们共享样式看起来合情合理。但是如果这些被复用的样式片段并不仅仅局限于相关的元素，那么使用@mixin或许更好。</p><p>@mixin主要的优势就是它能够接受参数。如果想传递参数，你会很自然地选择@mixin而不是@extend</p><h2 id="少用-import-而是用-use替换" tabindex="-1"><a class="header-anchor" href="#少用-import-而是用-use替换"><span>少用@import, 而是用@use替换</span></a></h2><div class="language-scss" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@import</span> <span class="token string">&quot;./mixin.scss&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">@import</span> <span class="token string">&quot;./variables.scss&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>等价于</p><div class="language-scss" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token keyword">@use</span> <span class="token string">&quot;./mixin.scss&quot;</span> <span class="token module-modifier keyword">as</span> *<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">@use</span> <span class="token string">&quot;./variables.scss&quot;</span> <span class="token module-modifier keyword">as</span> *<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>@forward 指令允许你从另一个样式表中导入变量、混合器和函数，但不导入样式。类似于</p><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">&#39;./util.ts&#39;</span></span>
<span class="line"></span></code></pre></div><h2 id="导出scss变量给js使用" tabindex="-1"><a class="header-anchor" href="#导出scss变量给js使用"><span>导出scss变量给js使用</span></a></h2><p><strong>必须是.module.scss文件</strong></p><p>vars.module.scss</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre><code><span class="line"><span class="token property"><span class="token variable">$font-sm</span></span><span class="token punctuation">:</span>16px<span class="token punctuation">;</span></span>
<span class="line"><span class="token property"><span class="token variable">$red-color</span></span><span class="token punctuation">:</span>#ff0000<span class="token punctuation">;</span></span>
<span class="line"><span class="token selector">.home</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span>cyan<span class="token punctuation">;</span></span>
<span class="line">  <span class="token selector">.wrap</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">background-color</span><span class="token punctuation">:</span> #ff0000<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token property"><span class="token variable">$white</span></span><span class="token punctuation">:</span>    #fff<span class="token punctuation">;</span></span>
<span class="line"><span class="token property"><span class="token variable">$black</span></span><span class="token punctuation">:</span>    #000<span class="token punctuation">;</span></span>
<span class="line"><span class="token property"><span class="token variable">$grey</span></span><span class="token punctuation">:</span>     #ccc<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// etc...</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Export the color palette to make it accessible to JS</span></span>
<span class="line"><span class="token selector">:export </span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">white</span><span class="token punctuation">:</span> <span class="token variable">$white</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">black</span><span class="token punctuation">:</span> <span class="token variable">$black</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">grey</span><span class="token punctuation">:</span> <span class="token variable">$grey</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// etc...</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>CssFeat.vue</p><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre><code><span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"><span class="token keyword">import</span> vars <span class="token keyword">from</span> <span class="token string">&#39;./vars.module.scss&#39;</span></span>
<span class="line"><span class="token function">onBeforeMount</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>vars <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    css feat</span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>{{ vars[&#39;white&#39;] }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span>
<span class="line"></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18)]))}const o=n(t,[["render",l]]),u=JSON.parse('{"path":"/cs-tips/frontend/css/scss.html","title":"","lang":"zh-CN","frontmatter":{"description":"scss技巧 嵌套,复用 使用@extend产生 DRY CSS风格的代码。但是@mixin就不能产生DRY式的代码。 @extend会增加选择器之间的联系，然后把他们堆在一起。你正在为一些相关的元素设置样式，就拿一组按钮来说，使用@extend让他们共享样式看起来合情合理。但是如果这些被复用的样式片段并不仅仅局限于相关的元素，那么使用@mixin或许...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/cs-tips/frontend/css/scss.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:description","content":"scss技巧 嵌套,复用 使用@extend产生 DRY CSS风格的代码。但是@mixin就不能产生DRY式的代码。 @extend会增加选择器之间的联系，然后把他们堆在一起。你正在为一些相关的元素设置样式，就拿一组按钮来说，使用@extend让他们共享样式看起来合情合理。但是如果这些被复用的样式片段并不仅仅局限于相关的元素，那么使用@mixin或许..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-10T18:06:56.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-10T18:06:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-10T18:06:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"scss技巧","slug":"scss技巧","link":"#scss技巧","children":[]},{"level":2,"title":"嵌套,复用","slug":"嵌套-复用","link":"#嵌套-复用","children":[]},{"level":2,"title":"少用@import, 而是用@use替换","slug":"少用-import-而是用-use替换","link":"#少用-import-而是用-use替换","children":[]},{"level":2,"title":"导出scss变量给js使用","slug":"导出scss变量给js使用","link":"#导出scss变量给js使用","children":[]}],"git":{"createdTime":1699639616000,"updatedTime":1699639616000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":1,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":1.14,"words":343},"filePathRelative":"cs-tips/frontend/css/scss.md","localizedDate":"2023年11月10日","autoDesc":true}');export{o as comp,u as data};
