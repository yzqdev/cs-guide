import{_ as n,c as s,a as e,o as t}from"./app-C8DxhDIZ.js";const p={};function o(c,a){return t(),s("div",null,a[0]||(a[0]=[e(`<h1 id="mc的区块原理" tabindex="-1"><a class="header-anchor" href="#mc的区块原理"><span>mc的区块原理</span></a></h1><p>区块宽16格，长16格，高256格。<a href="https://minecraft.fandom.com/zh/wiki/%E5%87%BA%E7%94%9F%E7%82%B9%E5%8C%BA%E5%9D%97" target="_blank" rel="noopener noreferrer">当玩家第一次出现在世界时</a>会在其周围生成区块，在<a href="https://minecraft.fandom.com/zh/wiki/Java%E7%89%88" target="_blank" rel="noopener noreferrer">Java版</a>中，世界中最初会生成43×43个区块，其过程显示在<a href="https://minecraft.fandom.com/zh/wiki/%E4%B8%96%E7%95%8C%E5%8A%A0%E8%BD%BD%E7%95%8C%E9%9D%A2" target="_blank" rel="noopener noreferrer">世界加载界面</a>。而随着玩家对世界的探索，相邻的区块也会被生成。</p><p>一个mca文件包含32个区块,就是说坐标(511,60,511)在r.1.1.mca中</p><h2 id="minecraft中坐标-区块坐标-mca文件名之间的转换" tabindex="-1"><a class="header-anchor" href="#minecraft中坐标-区块坐标-mca文件名之间的转换"><span>Minecraft中坐标 | 区块坐标 | .mca文件名之间的转换</span></a></h2><p>x坐标: 1024 y坐标: 1024 则x区块坐标: 64 z区块坐标: 64 ​</p><p>Region文件名称(mca): r.2.2.mca</p><h2 id="关系" tabindex="-1"><a class="header-anchor" href="#关系"><span>关系</span></a></h2><p>Y轴用不到，所以这里省略 下文中Px,Pz,Cx,Cz,Rx,Rz均为变量</p><p>设玩家的坐标X,Z分(Px , Pz), 区块坐标为(Cx , Cz), .mca文件名为 r.<code>Rx</code>.<code>Rz</code>.mca Px, Pz的类型均为浮点型(float), Cx, Cz, Rx, Rz均为整数型(int)</p><p>坐标 | 区块坐标 | .mca文件名 之间关系如下</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p><a href="https://minecraft-zh.gamepedia.com/%E5%9D%90%E6%A0%87" target="_blank" rel="noopener noreferrer">坐标</a>: 坐标（coordinates）在数字上反映了玩家在主世界中的位置。坐标基于一个由三条交于一点（即原点）的坐标轴而形成的网格 <a href="https://minecraft-zh.gamepedia.com/%E5%8C%BA%E5%9D%97" target="_blank" rel="noopener noreferrer">区块</a>: 区块（Chunk）是Minecraft世界里一个大小为16×256×16的部分 <a href="https://minecraft-zh.gamepedia.com/%E5%8C%BA%E5%9F%9F%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F" target="_blank" rel="noopener noreferrer">.mca文件</a>: 存档文件, 一个mca文件包含32个区块, 既 512×256×512 大小范围, 保存在 <code>world(地图目录)\\region</code> 中</p></div><p><strong>注意: 区块坐标 与 .mca文件名 的变量 Cx,Cz,Rx,Rz 均向下取整!</strong><strong>下文不再提示</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token class-name">Cx</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token class-name">Px</span> <span class="token operator">/</span> <span class="token number">16</span></span>
<span class="line"><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token class-name">Cz</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token class-name">Pz</span> <span class="token operator">/</span> <span class="token number">16</span></span>
<span class="line"><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token class-name">Rx</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token class-name">Cx</span> <span class="token operator">/</span> <span class="token number">32</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token class-name">Px</span> <span class="token operator">/</span> <span class="token number">16</span> <span class="token operator">/</span> <span class="token number">32</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token class-name">Px</span> <span class="token operator">/</span> <span class="token number">512</span></span>
<span class="line"><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token class-name">Rz</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token class-name">Cx</span> <span class="token operator">/</span> <span class="token number">32</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token class-name">Pz</span> <span class="token operator">/</span> <span class="token number">16</span> <span class="token operator">/</span> <span class="token number">32</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token class-name">Pz</span> <span class="token operator">/</span> <span class="token number">512</span></span>
<span class="line"></span></code></pre></div><p>也就是说只要知道玩家坐标 (Px , Pz) 便可获知区块坐标 (Px / 16 , Pz / 16) 和 .mca文件名 r.<code>Px/512</code>.<code>Pz/512</code>.mca</p><h2 id="关于seed" tabindex="-1"><a class="header-anchor" href="#关于seed"><span>关于seed</span></a></h2><p>在level.dat里面把seed由1改为2,那么删掉poi和region文件夹之后,重新进入世界就是seed为2的地图了</p>`,16)]))}const l=n(p,[["render",o]]),i=JSON.parse('{"path":"/mc-tutor/minecraft-chunks.html","title":"mc的区块原理","lang":"zh-CN","frontmatter":{"order":5,"description":"mc的区块原理 区块宽16格，长16格，高256格。当玩家第一次出现在世界时会在其周围生成区块，在Java版中，世界中最初会生成43×43个区块，其过程显示在世界加载界面。而随着玩家对世界的探索，相邻的区块也会被生成。 一个mca文件包含32个区块,就是说坐标(511,60,511)在r.1.1.mca中 Minecraft中坐标 | 区块坐标 | ....","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/mc-tutor/minecraft-chunks.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"mc的区块原理"}],["meta",{"property":"og:description","content":"mc的区块原理 区块宽16格，长16格，高256格。当玩家第一次出现在世界时会在其周围生成区块，在Java版中，世界中最初会生成43×43个区块，其过程显示在世界加载界面。而随着玩家对世界的探索，相邻的区块也会被生成。 一个mca文件包含32个区块,就是说坐标(511,60,511)在r.1.1.mca中 Minecraft中坐标 | 区块坐标 | ...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-27T15:49:40.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-27T15:49:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"mc的区块原理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-27T15:49:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"Minecraft中坐标 | 区块坐标 | .mca文件名之间的转换","slug":"minecraft中坐标-区块坐标-mca文件名之间的转换","link":"#minecraft中坐标-区块坐标-mca文件名之间的转换","children":[]},{"level":2,"title":"关系","slug":"关系","link":"#关系","children":[]},{"level":2,"title":"关于seed","slug":"关于seed","link":"#关于seed","children":[]}],"git":{"createdTime":1647861419000,"updatedTime":1727452180000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":6,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":1.94,"words":583},"filePathRelative":"mc-tutor/minecraft-chunks.md","localizedDate":"2022年3月21日","autoDesc":true}');export{l as comp,i as data};
