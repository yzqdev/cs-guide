import{_ as t,c as i,a as l,o as r}from"./app-C8DxhDIZ.js";const n={};function a(p,e){return r(),i("div",null,e[0]||(e[0]=[l(`<h1 id="wget文件下载" tabindex="-1"><a class="header-anchor" href="#wget文件下载"><span>wget文件下载</span></a></h1><p>Linux系统中的wget是一个下载文件的工具，它用在命令行下。对于Linux用户是必不可少的工具，我们经常要下载一些软件或从远程服务器恢复备份到本地服务器。wget支持HTTP，HTTPS和FTP协议，可以使用HTTP代理。</p><p>wget 可以跟踪HTML页面上的链接依次下载来创建远程服务器的本地版本，完全重建原始站点的目录结构。这又常被称作&quot;递归下载&quot;。在递归下载的时候，wget 遵循Robot Exclusion标准(/robots.txt). wget可以在下载的同时，将链接转换成指向本地文件，以方便离线浏览。</p><p>wget 非常稳定，它在带宽很窄的情况下和不稳定网络中有很强的适应性.如果是由于网络的原因下载失败，wget会不断的尝试，直到整个文件下载完毕。如果是服务器打断下载过程，它会再次联到服务器上从停止的地方继续下载。这对从那些限定了链接时间的服务器上下载大文件非常有用。</p><h2 id="命令格式" tabindex="-1"><a class="header-anchor" href="#命令格式"><span>命令格式</span></a></h2><p>wget [参数] [URL地址]</p><h2 id="命令参数" tabindex="-1"><a class="header-anchor" href="#命令参数"><span>命令参数</span></a></h2><h3 id="启动参数" tabindex="-1"><a class="header-anchor" href="#启动参数"><span>启动参数</span></a></h3><ul><li>-V, --version 显示wget的版本后退出</li><li>-h, --help 打印语法帮助</li><li>-b, --background 启动后转入后台执行</li><li>-e, --execute=COMMAND 执行&#39;.wgetrc&#39;格式的命令，wgetrc格式参见/etc/wgetrc或~/.wgetrc</li></ul><h3 id="记录和输入文件参数" tabindex="-1"><a class="header-anchor" href="#记录和输入文件参数"><span>记录和输入文件参数</span></a></h3><ul><li>-o, --output-file=FILE 把记录写到FILE文件中</li><li>-a, --append-output=FILE 把记录追加到FILE文件中</li><li>-d, --debug 打印调试输出</li><li>-q, --quiet 安静模式(没有输出)</li><li>-v, --verbose 冗长模式(这是缺省设置)</li><li>-nv, --non-verbose 关掉冗长模式，但不是安静模式</li><li>-i, --input-file=FILE 下载在FILE文件中出现的URLs</li><li>-F, --force-html 把输入文件当作HTML格式文件对待</li></ul><p>- -B, --base=URL 将URL作为在-F -i参数指定的文件中出现的相对链接的前缀 --sslcertfile=FILE 可选客户端证书 --sslcertkey=KEYFILE 可选客户端证书的KEYFILE --egd-file=FILE 指定EGD socket的文件名</p><h3 id="下载参数" tabindex="-1"><a class="header-anchor" href="#下载参数"><span>下载参数</span></a></h3><ul><li>-bind-address=ADDRESS 指定本地使用地址(主机名或IP，当本地有多个IP或名字时使用)</li><li>-t, --tries=NUMBER 设定最大尝试链接次数(0 表示无限制).</li><li>-O --output-document=FILE 把文档写到FILE文件中</li><li>-nc, --no-clobber 不要覆盖存在的文件或使用.#前缀</li><li>-c, --continue 接着下载没下载完的文件</li><li>-progress=TYPE 设定进程条标记</li><li>-N, --timestamping 不要重新下载文件除非比本地文件新</li><li>-S, --server-response 打印服务器的回应</li><li>-T, --timeout=SECONDS 设定响应超时的秒数</li><li>-w, --wait=SECONDS 两次尝试之间间隔SECONDS秒</li><li>-waitretry=SECONDS 在重新链接之间等待1...SECONDS秒</li><li>-random-wait 在下载之间等待0...2*WAIT秒</li><li>-Y, -proxy=on/off 打开或关闭代理</li><li>-Q, -quota=NUMBER 设置下载的容量限制</li><li>-limit-rate=RATE 限定下载输率</li></ul><h3 id="目录参数" tabindex="-1"><a class="header-anchor" href="#目录参数"><span>目录参数</span></a></h3><ul><li>-nd --no-directories 不创建目录</li><li>-x, --force-directories 强制创建目录</li><li>-nH, --no-host-directories 不创建主机目录</li><li>-P, --directory-prefix=PREFIX 将文件保存到目录 PREFIX/...</li><li>-cut-dirs=NUMBER 忽略 NUMBER层远程目录</li></ul><h3 id="http-选项参数" tabindex="-1"><a class="header-anchor" href="#http-选项参数"><span>HTTP 选项参数</span></a></h3><ul><li>-http-user=USER 设定HTTP用户名为 USER.</li><li>-http-passwd=PASS 设定http密码为 PASS</li><li>-C, --cache=on/off 允许/不允许服务器端的数据缓存 (一般情况下允许)</li><li>-E, --html-extension 将所有text/html文档以.html扩展名保存</li><li>-ignore-length 忽略 &#39;Content-Length&#39;头域</li><li>-header=STRING 在headers中插入字符串 STRING</li><li>-proxy-user=USER 设定代理的用户名为 USER</li><li>proxy-passwd=PASS 设定代理的密码为 PASS</li><li>referer=URL 在HTTP请求中包含 &#39;Referer: URL&#39;头</li><li>-s, --save-headers 保存HTTP头到文件</li><li>-U, --user-agent=AGENT 设定代理的名称为 AGENT而不是 Wget/VERSION</li><li>no-http-keep-alive 关闭 HTTP活动链接 (永远链接)</li><li>cookies=off 不使用 cookies</li><li>load-cookies=FILE 在开始会话前从文件 FILE中加载cookie</li><li>save-cookies=FILE 在会话结束后将 cookies保存到 FILE文件中</li></ul><h3 id="ftp-选项参数" tabindex="-1"><a class="header-anchor" href="#ftp-选项参数"><span>FTP 选项参数</span></a></h3><ul><li>-nr, --dont-remove-listing 不移走 &#39;.listing&#39;文件</li><li>-g, --glob=on/off 打开或关闭文件名的 globbing机制</li><li>passive-ftp 使用被动传输模式 (缺省值).</li><li>active-ftp 使用主动传输模式</li><li>retr-symlinks 在递归的时候，将链接指向文件(而不是目录)</li></ul><h3 id="递归下载参数" tabindex="-1"><a class="header-anchor" href="#递归下载参数"><span>递归下载参数</span></a></h3><ul><li><p>-r, --recursive 递归下载－－慎用!</p></li><li><p>-l, --level=NUMBER 最大递归深度 (inf 或 0 代表无穷)</p></li><li><p>-delete-after 在现在完毕后局部删除文件</p></li><li><p>-k, --convert-links 转换非相对链接为相对链接</p></li><li><p>-K, --backup-converted 在转换文件X之前，将之备份为 X.orig</p></li><li><p>-m, --mirror 等价于 -r -N -l inf -nr</p></li><li></li></ul><pre><code>-p, --page-requisites 下载显示HTML文件的所有图片

:   递归下载中的包含和不包含(accept/reject)：
</code></pre><ul><li><p>-A, --accept=LIST 分号分隔的被接受扩展名的列表</p></li><li><p>-R, --reject=LIST 分号分隔的不被接受的扩展名的列表</p></li><li><p>-D, --domains=LIST 分号分隔的被接受域的列表</p></li><li><p>-exclude-domains=LIST 分号分隔的不被接受的域的列表</p></li><li><p>-follow-ftp 跟踪HTML文档中的FTP链接</p></li><li><p>-follow-tags=LIST 分号分隔的被跟踪的HTML标签的列表</p></li><li><p>-G, --ignore-tags=LIST 分号分隔的被忽略的HTML标签的列表</p></li><li><p>-H, --span-hosts 当递归时转到外部主机</p></li><li><p>-L, --relative 仅仅跟踪相对链接</p></li><li><p>-I, --include-directories=LIST 允许目录的列表</p></li><li><p>-X, --exclude-directories=LIST 不被包含目录的列表</p></li></ul><p>- -np, --no-parent 不要追溯到父目录 wget -S --spider url 不下载只显示过程</p><h2 id="使用实例" tabindex="-1"><a class="header-anchor" href="#使用实例"><span>使用实例</span></a></h2><h3 id="实例1-使用wget下载单个文件" tabindex="-1"><a class="header-anchor" href="#实例1-使用wget下载单个文件"><span>实例1：使用wget下载单个文件</span></a></h3><pre><code>$wget http://www.minjieren.com/wordpress-3.1-zh_CN.zip
</code></pre><p>说明：以上例子从网络下载一个文件并保存在当前目录，在下载的过程中会显示进度条，包含（下载完成百分比，已经下载的字节，当前下载速度，剩余下载时间）。</p><h3 id="实例2-使用wget-o下载并以不同的文件名保存" tabindex="-1"><a class="header-anchor" href="#实例2-使用wget-o下载并以不同的文件名保存"><span>实例2：使用wget -O下载并以不同的文件名保存</span></a></h3><pre><code>$wget -O wordpress.zip http://www.minjieren.com/download.aspx?id=1080
</code></pre><p>wget默认会以最后一个符合&quot;/&quot;的后面的字符来命令，对于动态链接的下载通常文件名会不正确。</p><h3 id="实例3-使用wget-limit-rate限速下载" tabindex="-1"><a class="header-anchor" href="#实例3-使用wget-limit-rate限速下载"><span>实例3：使用wget --limit -rate限速下载</span></a></h3><pre><code>$wget --limit-rate=300k http://www.minjieren.com/wordpress-3.1-zh_CN.zip
</code></pre><p>当你执行wget的时候，它默认会占用全部可能的宽带下载。但是当你准备下载一个大文件，而你还需要下载其它文件时就有必要限速了。</p><h3 id="实例4-使用wget-c断点续传" tabindex="-1"><a class="header-anchor" href="#实例4-使用wget-c断点续传"><span>实例4：使用wget -c断点续传</span></a></h3><pre><code>$wget -c http://www.minjieren.com/wordpress-3.1-zh_CN.zip
</code></pre><p>使用wget -c重新启动下载中断的文件，对于我们下载大文件时突然由于网络等原因中断非常有帮助，我们可以继续接着下载而不是重新下载一个文件。需要继续中断的下载时可以使用-c参数。</p><h3 id="实例5-使用wget-b后台下载" tabindex="-1"><a class="header-anchor" href="#实例5-使用wget-b后台下载"><span>实例5：使用wget -b后台下载</span></a></h3><pre><code>$wget -b http://www.minjieren.com/wordpress-3.1-zh_CN.zip
Continuing in background, pid 1840.
Output will be written to &#39;wget-log&#39;.
</code></pre><p>对于下载非常大的文件的时候，我们可以使用参数-b进行后台下载。</p><p>你可以使用以下命令来察看下载进度:</p><pre><code>$tail -f wget-log
</code></pre><h3 id="实例6-伪装代理名称下载" tabindex="-1"><a class="header-anchor" href="#实例6-伪装代理名称下载"><span>实例6：伪装代理名称下载</span></a></h3><pre><code>wget --user-agent=&quot;Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.204 Safari/534.16&quot; http://www.minjieren.com/wordpress-3.1-zh_CN.zip
</code></pre><p>有些网站能通过根据判断代理名称不是浏览器而拒绝你的下载请求。不过你可以通过--user-agent参数伪装。</p><h3 id="实例7-使用wget-i下载多个文件" tabindex="-1"><a class="header-anchor" href="#实例7-使用wget-i下载多个文件"><span>实例7：使用wget -i下载多个文件</span></a></h3><p>首先，保存一份下载链接文件,接着使用这个文件和参数-i下载:</p><pre><code>$cat &gt; filelist.txt
url1
url2
url3
url4

$wget -i filelist.txt
</code></pre><h3 id="实例8-使用wget-mirror镜像网站" tabindex="-1"><a class="header-anchor" href="#实例8-使用wget-mirror镜像网站"><span>实例8：使用wget --mirror镜像网站</span></a></h3><pre><code>$wget --mirror -p --convert-links -P ./LOCAL URL
</code></pre><p>下载整个网站到本地</p><p>: - -miror:开户镜像下载 - -p:下载所有为了html页面显示正常的文件 - -convert-links:下载后，转换成本地的链接 - -P ./LOCAL：保存所有文件和目录到本地指定目录</p><h3 id="实例9-使用wget-r-a下载指定格式文件" tabindex="-1"><a class="header-anchor" href="#实例9-使用wget-r-a下载指定格式文件"><span>实例9: 使用wget -r -A下载指定格式文件</span></a></h3><pre><code>$wget -r -A.pdf url
</code></pre><p>可以在以下情况使用该功能：</p><p>: - 下载一个网站的所有图片 - 下载一个网站的所有视频 - 下载一个网站的所有PDF文件</p><h3 id="实例10-使用wget-ftp下载" tabindex="-1"><a class="header-anchor" href="#实例10-使用wget-ftp下载"><span>实例10：使用wget FTP下载</span></a></h3><pre><code>$wget ftp-url
$wget --ftp-user=USERNAME --ftp-password=PASSWORD url
</code></pre><p>可以使用wget来完成ftp链接的下载</p><p>: - 使用wget匿名ftp下载：wget ftp-url - 使用wget用户名和密码认证的ftp下载:wget --ftp-user=USERNAME --ftp-password=PASSWORD url</p><h2 id="编译安装" tabindex="-1"><a class="header-anchor" href="#编译安装"><span>编译安装</span></a></h2><p>使用如下命令编译安装:</p><pre><code>tar zxvf wget-1.9.1.tar.gz
cd wget-1.9.1
./configure
make
make install
</code></pre>`,64)]))}const s=t(n,[["render",a]]),c=JSON.parse('{"path":"/linux-tutor/tool/wget.html","title":"wget文件下载","lang":"zh-CN","frontmatter":{"description":"wget文件下载 Linux系统中的wget是一个下载文件的工具，它用在命令行下。对于Linux用户是必不可少的工具，我们经常要下载一些软件或从远程服务器恢复备份到本地服务器。wget支持HTTP，HTTPS和FTP协议，可以使用HTTP代理。 wget 可以跟踪HTML页面上的链接依次下载来创建远程服务器的本地版本，完全重建原始站点的目录结构。这又常...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/linux-tutor/tool/wget.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"wget文件下载"}],["meta",{"property":"og:description","content":"wget文件下载 Linux系统中的wget是一个下载文件的工具，它用在命令行下。对于Linux用户是必不可少的工具，我们经常要下载一些软件或从远程服务器恢复备份到本地服务器。wget支持HTTP，HTTPS和FTP协议，可以使用HTTP代理。 wget 可以跟踪HTML页面上的链接依次下载来创建远程服务器的本地版本，完全重建原始站点的目录结构。这又常..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-05-27T01:37:35.000Z"}],["meta",{"property":"article:modified_time","content":"2022-05-27T01:37:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"wget文件下载\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-05-27T01:37:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"命令格式","slug":"命令格式","link":"#命令格式","children":[]},{"level":2,"title":"命令参数","slug":"命令参数","link":"#命令参数","children":[{"level":3,"title":"启动参数","slug":"启动参数","link":"#启动参数","children":[]},{"level":3,"title":"记录和输入文件参数","slug":"记录和输入文件参数","link":"#记录和输入文件参数","children":[]},{"level":3,"title":"下载参数","slug":"下载参数","link":"#下载参数","children":[]},{"level":3,"title":"目录参数","slug":"目录参数","link":"#目录参数","children":[]},{"level":3,"title":"HTTP 选项参数","slug":"http-选项参数","link":"#http-选项参数","children":[]},{"level":3,"title":"FTP 选项参数","slug":"ftp-选项参数","link":"#ftp-选项参数","children":[]},{"level":3,"title":"递归下载参数","slug":"递归下载参数","link":"#递归下载参数","children":[]}]},{"level":2,"title":"使用实例","slug":"使用实例","link":"#使用实例","children":[{"level":3,"title":"实例1：使用wget下载单个文件","slug":"实例1-使用wget下载单个文件","link":"#实例1-使用wget下载单个文件","children":[]},{"level":3,"title":"实例2：使用wget -O下载并以不同的文件名保存","slug":"实例2-使用wget-o下载并以不同的文件名保存","link":"#实例2-使用wget-o下载并以不同的文件名保存","children":[]},{"level":3,"title":"实例3：使用wget --limit -rate限速下载","slug":"实例3-使用wget-limit-rate限速下载","link":"#实例3-使用wget-limit-rate限速下载","children":[]},{"level":3,"title":"实例4：使用wget -c断点续传","slug":"实例4-使用wget-c断点续传","link":"#实例4-使用wget-c断点续传","children":[]},{"level":3,"title":"实例5：使用wget -b后台下载","slug":"实例5-使用wget-b后台下载","link":"#实例5-使用wget-b后台下载","children":[]},{"level":3,"title":"实例6：伪装代理名称下载","slug":"实例6-伪装代理名称下载","link":"#实例6-伪装代理名称下载","children":[]},{"level":3,"title":"实例7：使用wget -i下载多个文件","slug":"实例7-使用wget-i下载多个文件","link":"#实例7-使用wget-i下载多个文件","children":[]},{"level":3,"title":"实例8：使用wget --mirror镜像网站","slug":"实例8-使用wget-mirror镜像网站","link":"#实例8-使用wget-mirror镜像网站","children":[]},{"level":3,"title":"实例9: 使用wget -r -A下载指定格式文件","slug":"实例9-使用wget-r-a下载指定格式文件","link":"#实例9-使用wget-r-a下载指定格式文件","children":[]},{"level":3,"title":"实例10：使用wget FTP下载","slug":"实例10-使用wget-ftp下载","link":"#实例10-使用wget-ftp下载","children":[]}]},{"level":2,"title":"编译安装","slug":"编译安装","link":"#编译安装","children":[]}],"git":{"createdTime":1653565176000,"updatedTime":1653615455000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":2,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":7.19,"words":2157},"filePathRelative":"linux-tutor/tool/wget.md","localizedDate":"2022年5月26日","autoDesc":true}');export{s as comp,c as data};
