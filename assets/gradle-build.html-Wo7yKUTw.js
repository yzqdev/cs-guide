import{_ as s,c as a,a as t,o as e}from"./app-C8DxhDIZ.js";const p={};function i(l,n){return e(),a("div",null,n[0]||(n[0]=[t(`<h1 id="gradle插件相关" tabindex="-1"><a class="header-anchor" href="#gradle插件相关"><span>gradle插件相关</span></a></h1><h2 id="用gradle构建lib分离的jar包" tabindex="-1"><a class="header-anchor" href="#用gradle构建lib分离的jar包"><span>用Gradle构建lib分离的jar包</span></a></h2><p>首先Jar包内是有一个<code>META-INF/MANIFEST.MF</code>这样的文件，里面我只挑能够达成jar包跟lib分离目的的参数：</p><ul><li>Main-Class<br> 这是指定程序入口的参数，一般就是main方法所在的class，Kotlin的class需要加上Kt的后缀才正确。<br> 这个一般打成jar运行是基础配置，不然无法运行。</li><li>Class-Path<br> 这个就是需要加载的lib的配置了，需要对每个lib包都做声明，空格分割。</li></ul><p>下一步是对Gradle的jar任务做修改，让其排除所有的*.jar文件，并自定义一个删除以及拷贝lib的任务让其依赖。这需要了解一下Gradle如何自定义一个task以及jar任务如何修改。</p><p>然后直接修改jar这个task</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">tasks<span class="token punctuation">.</span>register<span class="token operator">&lt;</span>Delete<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;clearLib&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//清除lib  </span></span>
<span class="line">  </span>
<span class="line">  <span class="token function">delete</span><span class="token punctuation">(</span>layout<span class="token punctuation">.</span>buildDirectory<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;libs/lib&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  </span>
<span class="line"><span class="token punctuation">}</span>  </span>
<span class="line">  </span>
<span class="line">tasks<span class="token punctuation">.</span>register<span class="token operator">&lt;</span>Copy<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;copyLib&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//拷贝lib  </span></span>
<span class="line">  <span class="token function">from</span><span class="token punctuation">(</span>configurations<span class="token punctuation">.</span>runtimeClasspath<span class="token punctuation">)</span> <span class="token comment">//从运行时目录  </span></span>
<span class="line">  <span class="token function">into</span><span class="token punctuation">(</span>layout<span class="token punctuation">.</span>buildDirectory<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;libs/lib&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">//到打包目录  </span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">tasks<span class="token punctuation">.</span><span class="token function">jar</span> <span class="token punctuation">{</span>  </span>
<span class="line">  <span class="token function">dependsOn</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;clearLib&quot;</span></span><span class="token punctuation">)</span> <span class="token comment">//依赖清除和拷贝lib任务  </span></span>
<span class="line">  <span class="token function">dependsOn</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;copyLib&quot;</span></span><span class="token punctuation">)</span>  </span>
<span class="line">  <span class="token function">exclude</span><span class="token punctuation">(</span>&quot;<span class="token operator">*</span><span class="token operator">*</span><span class="token comment">/*.jar&quot;) //打包时排除jar文件（不打包成fat jar）  </span>
<span class="line">  manifest {  </span>
<span class="line">    attributes[&quot;Manifest-Version&quot;] = &quot;1.0&quot;  </span>
<span class="line">    attributes[&quot;Multi-Release&quot;] = &quot;true&quot;  </span>
<span class="line">    attributes[&quot;Main-Class&quot;] = &quot;ab.yzq.javalindemo.Main&quot; //main方法所在的class，我这个例子是用的Kotlin所以带有Kt后缀  </span>
<span class="line">    attributes[&quot;Class-Path&quot;] =  </span>
<span class="line">      configurations.runtimeClasspath.get().files.joinToString(&quot; &quot;) { &quot;lib/\${it.name}&quot; }  //构建出 lib/包名 的字符串并用空格分隔  </span>
<span class="line">  }  </span>
<span class="line">}</span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打包出来就是一个main.jar和一个lib文件夹</p><p>对于springboot项目,也可以打包分离依赖</p><div class="language-groovy line-numbers-mode" data-highlighter="prismjs" data-ext="groovy" data-title="groovy"><pre><code><span class="line"><span class="token comment">// 将依赖包复制到lib目录</span></span>
<span class="line">task <span class="token function">copyJar</span><span class="token punctuation">(</span>type<span class="token punctuation">:</span> Copy<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 清除现有的lib目录</span></span>
<span class="line">    delete <span class="token interpolation-string"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">buildDir</span></span><span class="token string">/libs/lib&quot;</span></span></span>
<span class="line">    from configurations<span class="token punctuation">.</span>runtimeClasspath</span>
<span class="line">    into <span class="token interpolation-string"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">buildDir</span></span><span class="token string">/libs/lib&quot;</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 拷贝配置文件</span></span>
<span class="line">task <span class="token function">copyResources</span><span class="token punctuation">(</span>type<span class="token punctuation">:</span> Copy<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 清除现有的配置目录</span></span>
<span class="line">    delete <span class="token interpolation-string"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">buildDir</span></span><span class="token string">/libs/config&quot;</span></span></span>
<span class="line">    from <span class="token interpolation-string"><span class="token string">&quot;src/main/resources&quot;</span></span></span>
<span class="line">    into <span class="token interpolation-string"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">buildDir</span></span><span class="token string">/libs/config&quot;</span></span></span>
<span class="line">    <span class="token comment">// 只复制yml配置文件</span></span>
<span class="line">    include <span class="token interpolation-string"><span class="token string">&quot;*.yml&quot;</span></span></span>
<span class="line">    <span class="token comment">// 排除指定文件</span></span>
<span class="line">    <span class="token comment">// exclude &quot;application.yml&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 配置bootJar进行打包</span></span>
<span class="line">bootJar <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 排除lib目录及yml配置文件</span></span>
<span class="line">    excludes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token interpolation-string"><span class="token string">&quot;*.jar&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;*.yml&quot;</span></span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token comment">// 引入需要的文件(多模块项目下可引入指定jar包)</span></span>
<span class="line">    <span class="token comment">// includes = [&#39;common-\${project.version}.jar&#39;]</span></span>
<span class="line">    <span class="token comment">// lib目录的清除和复制任务</span></span>
<span class="line">    dependsOn copyJar</span>
<span class="line">    <span class="token comment">// 配置目录的清除和复制任务</span></span>
<span class="line">    dependsOn copyResources</span>
<span class="line">    <span class="token comment">// 指定依赖包的路径</span></span>
<span class="line">    manifest <span class="token punctuation">{</span></span>
<span class="line">        attributes <span class="token interpolation-string"><span class="token string">&quot;Manifest-Version&quot;</span></span><span class="token punctuation">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token string">&#39;Class-Path&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;config/ &#39;</span> <span class="token operator">+</span> configurations<span class="token punctuation">.</span>runtimeClasspath<span class="token punctuation">.</span>files<span class="token punctuation">.</span>collect <span class="token punctuation">{</span> <span class="token interpolation-string"><span class="token string">&quot;lib/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">it</span></span><span class="token string">.name&quot;</span></span> <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="打包java-library然后把依赖也打包进去" tabindex="-1"><a class="header-anchor" href="#打包java-library然后把依赖也打包进去"><span>打包java-library然后把依赖也打包进去</span></a></h2><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"></span>
<span class="line">tasks<span class="token punctuation">.</span><span class="token function">jar</span> <span class="token punctuation">{</span>  </span>
<span class="line">   </span>
<span class="line">  <span class="token function">from</span><span class="token punctuation">(</span>configurations<span class="token punctuation">.</span>runtimeClasspath<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span> <span class="token punctuation">{</span>  </span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>it<span class="token punctuation">.</span>isDirectory<span class="token punctuation">)</span> it <span class="token keyword">else</span> <span class="token function">zipTree</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span>  </span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span>  </span>
<span class="line">  <span class="token keyword">val</span> sourcesMain <span class="token operator">=</span> sourceSets<span class="token punctuation">.</span>main<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  </span>
<span class="line">  sourcesMain<span class="token punctuation">.</span>allSource<span class="token punctuation">.</span><span class="token function">forEach</span> <span class="token punctuation">{</span> <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;add from sources: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">it<span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">}</span>  </span>
<span class="line">  <span class="token function">from</span><span class="token punctuation">(</span>sourcesMain<span class="token punctuation">.</span>output<span class="token punctuation">)</span>  </span>
<span class="line">  manifest <span class="token punctuation">{</span>  </span>
<span class="line">    attributes<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;Manifest-Version&quot;</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;1.0&quot;</span></span>  </span>
<span class="line">    attributes<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;Multi-Release&quot;</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;true&quot;</span></span>  </span>
<span class="line">  </span>
<span class="line">  <span class="token punctuation">}</span>  </span>
<span class="line">  </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12)]))}const c=s(p,[["render",i]]),u=JSON.parse('{"path":"/kotlin-tutor/gradle/gradle-build.html","title":"gradle插件相关","lang":"zh-CN","frontmatter":{"description":"gradle插件相关 用Gradle构建lib分离的jar包 首先Jar包内是有一个META-INF/MANIFEST.MF这样的文件，里面我只挑能够达成jar包跟lib分离目的的参数： Main-Class 这是指定程序入口的参数，一般就是main方法所在的class，Kotlin的class需要加上Kt的后缀才正确。 这个一般打成jar运行是基础配...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/kotlin-tutor/gradle/gradle-build.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"gradle插件相关"}],["meta",{"property":"og:description","content":"gradle插件相关 用Gradle构建lib分离的jar包 首先Jar包内是有一个META-INF/MANIFEST.MF这样的文件，里面我只挑能够达成jar包跟lib分离目的的参数： Main-Class 这是指定程序入口的参数，一般就是main方法所在的class，Kotlin的class需要加上Kt的后缀才正确。 这个一般打成jar运行是基础配..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-20T19:28:54.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-20T19:28:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"gradle插件相关\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-20T19:28:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"用Gradle构建lib分离的jar包","slug":"用gradle构建lib分离的jar包","link":"#用gradle构建lib分离的jar包","children":[]},{"level":2,"title":"打包java-library然后把依赖也打包进去","slug":"打包java-library然后把依赖也打包进去","link":"#打包java-library然后把依赖也打包进去","children":[]}],"git":{"createdTime":1696975127000,"updatedTime":1718911734000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":3,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":2.01,"words":604},"filePathRelative":"kotlin-tutor/gradle/gradle-build.md","localizedDate":"2023年10月10日","autoDesc":true}');export{c as comp,u as data};
