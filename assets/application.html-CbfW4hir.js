import{_ as s,c as a,a as n,o as e}from"./app-C8DxhDIZ.js";const i={};function o(r,t){return e(),a("div",null,t[0]||(t[0]=[n(`<h1 id="应用程序" tabindex="-1"><a class="header-anchor" href="#应用程序"><span>应用程序</span></a></h1><h2 id="应用程序组件" tabindex="-1"><a class="header-anchor" href="#应用程序组件"><span>应用程序组件</span></a></h2><p>应用程序组件是Android应用程序的基本构建块。这些组件与应用程序清单文件AndroidManifest.xml松散耦合，该清单文件描述了应用程序的每个组件以及它们如何交互。Android应用程序可以使用以下四个主要组件-</p><table><thead><tr><th>组件</th><th>描述</th></tr></thead><tbody><tr><td><strong>Activities</strong></td><td>它们指示UI，并处理与智能手机屏幕的用户交互。</td></tr><tr><td><strong>Services</strong></td><td>它们处理与应用程序关联的后台处理。</td></tr><tr><td><strong>Broadcast Receivers</strong></td><td>它们处理Android OS与应用程序之间的通信。</td></tr><tr><td><strong>Content Providers</strong></td><td>他们处理数据和数据库管理问题。</td></tr></tbody></table><h2 id="activities" tabindex="-1"><a class="header-anchor" href="#activities"><span>Activities</span></a></h2><p><strong>Activity</strong>代表具有用户界面的单个屏幕，简而言之，活动在屏幕上执行操作。例如，电子邮件应用程序可能具有一个显示新电子邮件列表的Activity，用于撰写电子邮件的另一 Activity 以及用于阅读电子邮件的另一 Activity。如果一个应用程序有多个Activity，则应将其中一个标记为启动该应用程序时显示的 Activity。</p><p>Activity被实现为Activity类的子类，如下所示-</p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">Activity</span> <span class="token punctuation">{</span> </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h2 id="services" tabindex="-1"><a class="header-anchor" href="#services"><span>Services</span></a></h2><p><strong>Service</strong>是在后台运行以执行长时间运行的操作的组件。例如，服务可能会在用户处于其他应用程序中时在后台播放音乐，或者可能会在不阻止用户与 Activity 交互的情况下通过网络获取数据。</p><p>Service被实现为Service类的子类，如下所示-</p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyService</span> <span class="token keyword">extends</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h2 id="broadcast-receivers-广播接收器" tabindex="-1"><a class="header-anchor" href="#broadcast-receivers-广播接收器"><span>Broadcast Receivers(广播接收器)</span></a></h2><p><strong>广播接收器</strong>仅响应来自其他应用程序或系统的广播消息。例如，应用程序还可以启动广播，以使其他应用程序知道某些数据已下载到设备并可供他们使用，因此，这是广播接收器，它将拦截此通信并启动适当的操作。</p><p>广播接收器被实现为BroadcastReceiver类的子类，并且每个消息都被广播为<strong>Intent</strong>对象。</p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyReceiver</span>  <span class="token keyword">extends</span>  <span class="token class-name">BroadcastReceiver</span> <span class="token punctuation">{</span></span>
<span class="line">   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceive</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>intent<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h2 id="content-providers-内容提供者" tabindex="-1"><a class="header-anchor" href="#content-providers-内容提供者"><span>Content Providers(内容提供者)</span></a></h2><p><strong>内容提供者</strong>组件应要求将数据从一个应用程序提供给其他应用程序。此类请求由<strong>ContentResolver</strong>类的方法处理。数据可以存储在文件系统，数据库或其他任何地方。内容提供程序作为<strong>ContentProvider</strong>类的子类实现，并且必须实现一组标准的API，这些API可使其他应用程序执行事务。</p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyContentProvider</span> <span class="token keyword">extends</span>  <span class="token class-name">ContentProvider</span> <span class="token punctuation">{</span></span>
<span class="line">   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>我们将在各个章节中详细介绍这些标签，同时涵盖应用程序组件。</p><h2 id="附加组件" tabindex="-1"><a class="header-anchor" href="#附加组件"><span>附加组件</span></a></h2><p>在上述实体的构造，其逻辑以及它们之间的接线中将使用其他组件。这些成分是-</p><table><thead><tr><th>组件</th><th>描述</th></tr></thead><tbody><tr><td><strong>Fragments</strong></td><td>表示Activity中用户界面的一部分。</td></tr><tr><td><strong>Views</strong></td><td>在屏幕上绘制的UI元素，包括按钮，列表表单等。</td></tr><tr><td><strong>Layouts</strong></td><td>用于控制屏幕格式和视图外观的视图层次结构。</td></tr><tr><td><strong>Intents</strong></td><td>提示将组件连接在一起。</td></tr><tr><td><strong>Resources</strong></td><td>外部元素，例如字符串，常量和可绘制图片。</td></tr><tr><td><strong>Manifest</strong></td><td>应用程序的配置文件。</td></tr></tbody></table>`,23)]))}const p=s(i,[["render",o]]),d=JSON.parse('{"path":"/android-tutor/basic/application.html","title":"应用程序","lang":"zh-CN","frontmatter":{"order":1,"description":"应用程序 应用程序组件 应用程序组件是Android应用程序的基本构建块。这些组件与应用程序清单文件AndroidManifest.xml松散耦合，该清单文件描述了应用程序的每个组件以及它们如何交互。Android应用程序可以使用以下四个主要组件- Activities Activity代表具有用户界面的单个屏幕，简而言之，活动在屏幕上执行操作。例如，...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/android-tutor/basic/application.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"应用程序"}],["meta",{"property":"og:description","content":"应用程序 应用程序组件 应用程序组件是Android应用程序的基本构建块。这些组件与应用程序清单文件AndroidManifest.xml松散耦合，该清单文件描述了应用程序的每个组件以及它们如何交互。Android应用程序可以使用以下四个主要组件- Activities Activity代表具有用户界面的单个屏幕，简而言之，活动在屏幕上执行操作。例如，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-25T05:00:38.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-25T05:00:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"应用程序\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-25T05:00:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"应用程序组件","slug":"应用程序组件","link":"#应用程序组件","children":[]},{"level":2,"title":"Activities","slug":"activities","link":"#activities","children":[]},{"level":2,"title":"Services","slug":"services","link":"#services","children":[]},{"level":2,"title":"Broadcast Receivers(广播接收器)","slug":"broadcast-receivers-广播接收器","link":"#broadcast-receivers-广播接收器","children":[]},{"level":2,"title":"Content Providers(内容提供者)","slug":"content-providers-内容提供者","link":"#content-providers-内容提供者","children":[]},{"level":2,"title":"附加组件","slug":"附加组件","link":"#附加组件","children":[]}],"git":{"createdTime":1684738995000,"updatedTime":1687669238000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":2,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":2.71,"words":813},"filePathRelative":"android-tutor/basic/application.md","localizedDate":"2023年5月22日","autoDesc":true}');export{p as comp,d as data};
