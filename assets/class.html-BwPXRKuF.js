import{_ as s,c as a,a as t,o as e}from"./app-C8DxhDIZ.js";const p={};function o(l,n){return e(),a("div",null,n[0]||(n[0]=[t(`<h1 id="类" tabindex="-1"><a class="header-anchor" href="#类"><span>类</span></a></h1><h2 id="kotlin-扩展" tabindex="-1"><a class="header-anchor" href="#kotlin-扩展"><span>Kotlin 扩展</span></a></h2><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">open</span> <span class="token keyword">class</span> Shape</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> Rectangle<span class="token operator">:</span> <span class="token function">Shape</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fun</span> Shape<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Shape&quot;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fun</span> Rectangle<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Rectangle&quot;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">printClassName</span><span class="token punctuation">(</span>s<span class="token operator">:</span> Shape<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span>    </span>
<span class="line"></span>
<span class="line"><span class="token function">printClassName</span><span class="token punctuation">(</span><span class="token function">Rectangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span>arg<span class="token operator">:</span>Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> rect<span class="token operator">=</span><span class="token function">Rectangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    rect<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>像compose中的<code>18.dp</code>就是拓展</p><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">val</span> Float<span class="token punctuation">.</span>dp</span>
<span class="line">  <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> TypedValue<span class="token punctuation">.</span><span class="token function">applyDimension</span><span class="token punctuation">(</span></span>
<span class="line">    TypedValue<span class="token punctuation">.</span>COMPLEX_UNIT_DIP<span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">,</span></span>
<span class="line">    Resources<span class="token punctuation">.</span><span class="token function">getSystem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>displayMetrics</span>
<span class="line">  <span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">val</span> RADIUS <span class="token operator">=</span> <span class="token number">200f</span><span class="token punctuation">.</span>dp</span>
<span class="line"></span></code></pre></div>`,5)]))}const i=s(p,[["render",o]]),u=JSON.parse('{"path":"/kotlin-tutor/class.html","title":"类","lang":"zh-CN","frontmatter":{"description":"类 Kotlin 扩展 像compose中的18.dp就是拓展","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/kotlin-tutor/class.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"类"}],["meta",{"property":"og:description","content":"类 Kotlin 扩展 像compose中的18.dp就是拓展"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-25T05:00:38.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-25T05:00:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-25T05:00:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"Kotlin 扩展","slug":"kotlin-扩展","link":"#kotlin-扩展","children":[]}],"git":{"createdTime":1684738995000,"updatedTime":1687669238000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":2,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":0.19,"words":56},"filePathRelative":"kotlin-tutor/class.md","localizedDate":"2023年5月22日","autoDesc":true}');export{i as comp,u as data};
