import{_ as n,c as a,a as e,o as l}from"./app-C8DxhDIZ.js";const p={};function t(i,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="linux环境变量配置" tabindex="-1"><a class="header-anchor" href="#linux环境变量配置"><span>Linux环境变量配置</span></a></h1><p>在自定义安装软件的时候，经常需要配置环境变量，下面列举出各种对环境变量的配置方法。</p><p>下面所有例子的环境说明如下：</p><ul><li>系统：Ubuntu 14.0</li><li>用户名：uusama</li><li>需要配置MySQL环境变量路径：/home/uusama/mysql/bin</li></ul><h2 id="linux读取环境变量" tabindex="-1"><a class="header-anchor" href="#linux读取环境变量"><span>Linux读取环境变量</span></a></h2><p>读取环境变量的方法：</p><ul><li><code>export</code>命令显示当前系统定义的所有环境变量</li><li><code>echo $PATH</code>命令输出当前的<code>PATH</code>环境变量的值</li></ul><p>这两个命令执行的效果如下</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">uusama@ubuntu:~$ <span class="token builtin class-name">export</span></span>
<span class="line"><span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable"><span class="token environment constant">HOME</span></span><span class="token operator">=</span><span class="token string">&quot;/home/uusama&quot;</span></span>
<span class="line"><span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span><span class="token string">&quot;en_US.UTF-8&quot;</span></span>
<span class="line"><span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable"><span class="token environment constant">LANGUAGE</span></span><span class="token operator">=</span><span class="token string">&quot;en_US:&quot;</span></span>
<span class="line"><span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable"><span class="token environment constant">LESSCLOSE</span></span><span class="token operator">=</span><span class="token string">&quot;/usr/bin/lesspipe %s %s&quot;</span></span>
<span class="line"><span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable"><span class="token environment constant">LESSOPEN</span></span><span class="token operator">=</span><span class="token string">&quot;| /usr/bin/lesspipe %s&quot;</span></span>
<span class="line"><span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable"><span class="token environment constant">LOGNAME</span></span><span class="token operator">=</span><span class="token string">&quot;uusama&quot;</span></span>
<span class="line"><span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable">MAIL</span><span class="token operator">=</span><span class="token string">&quot;/var/mail/uusama&quot;</span></span>
<span class="line"><span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">&quot;/home/uusama/bin:/home/uusama/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;</span></span>
<span class="line"><span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable">SSH_TTY</span><span class="token operator">=</span><span class="token string">&quot;/dev/pts/0&quot;</span></span>
<span class="line"><span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable"><span class="token environment constant">TERM</span></span><span class="token operator">=</span><span class="token string">&quot;xterm&quot;</span></span>
<span class="line"><span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span><span class="token string">&quot;uusama&quot;</span></span>
<span class="line"></span>
<span class="line">uusama@ubuntu:~$ <span class="token builtin class-name">echo</span> <span class="token environment constant">$PATH</span></span>
<span class="line">/home/uusama/bin:/home/uusama/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中<code>PATH</code>变量定义了运行命令的查找路径，以冒号<code>:</code>分割不同的路径，使用<code>export</code>定义的时候可加双引号也可不加。 注意,linux多个环境变量用 : 隔开</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:<span class="token operator">&lt;</span><span class="token environment constant">PATH</span> <span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span>:<span class="token operator">&lt;</span><span class="token environment constant">PATH</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>:<span class="token operator">&lt;</span><span class="token environment constant">PATH</span> <span class="token operator"><span class="token file-descriptor important">3</span>&gt;</span>:------:<span class="token operator">&lt;</span><span class="token environment constant">PATH</span> N<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="linux环境变量配置方法一-export-path" tabindex="-1"><a class="header-anchor" href="#linux环境变量配置方法一-export-path"><span>Linux环境变量配置方法一：<code>export PATH</code></span></a></h2><p>使用<code>export</code>命令直接修改<code>PATH</code>的值，配置MySQL进入环境变量的方法:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/home/uusama/mysql/bin:<span class="token environment constant">$PATH</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 或者把PATH放在前面</span></span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/home/uusama/mysql/bin</span>
<span class="line"></span></code></pre></div><p>注意事项：</p><ul><li>生效时间：立即生效</li><li>生效期限：当前终端有效，窗口关闭后无效</li><li>生效范围：仅对当前用户有效</li><li>配置的环境变量中不要忘了加上原来的配置，即<code>$PATH</code>部分，避免覆盖原来配置</li></ul><h2 id="linux环境变量配置方法二-vim-bashrc" tabindex="-1"><a class="header-anchor" href="#linux环境变量配置方法二-vim-bashrc"><span>Linux环境变量配置方法二：<code>vim ~/.bashrc</code></span></a></h2><p>通过修改用户目录下的<code>~/.bashrc</code>文件进行配置：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">vim</span> ~/.bashrc</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 在最后一行加上</span></span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/home/uusama/mysql/bin</span>
<span class="line"></span></code></pre></div><p>注意事项：</p><ul><li>生效时间：使用相同的用户打开新的终端时生效，或者手动<code>source ~/.bashrc</code>生效</li><li>生效期限：永久有效</li><li>生效范围：仅对当前用户有效</li><li>如果有后续的环境变量加载文件覆盖了<code>PATH</code>定义，则可能不生效</li></ul><h2 id="linux环境变量配置方法三-vim-bash-profile" tabindex="-1"><a class="header-anchor" href="#linux环境变量配置方法三-vim-bash-profile"><span>Linux环境变量配置方法三：<code>vim ~/.bash_profile</code></span></a></h2><p>和修改<code>~/.bashrc</code>文件类似，也是要在文件最后加上新的路径即可：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">vim</span> ~/.bash_profile</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 在最后一行加上</span></span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/home/uusama/mysql/bin</span>
<span class="line"></span></code></pre></div><p>注意事项：</p><ul><li>生效时间：使用相同的用户打开新的终端时生效，或者手动<code>source ~/.bash_profile</code>生效</li><li>生效期限：永久有效</li><li>生效范围：仅对当前用户有效</li><li>如果没有<code>~/.bash_profile</code>文件，则可以编辑<code>~/.profile</code>文件或者新建一个</li></ul><h2 id="linux环境变量配置方法四-vim-etc-bashrc" tabindex="-1"><a class="header-anchor" href="#linux环境变量配置方法四-vim-etc-bashrc"><span>Linux环境变量配置方法四：<code>vim /etc/bashrc</code></span></a></h2><p>该方法是修改系统配置，需要管理员权限（如root）或者对该文件的写入权限：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 如果/etc/bashrc文件不可编辑，需要修改为可编辑</span></span>
<span class="line"><span class="token function">chmod</span> <span class="token parameter variable">-v</span> u+w /etc/bashrc</span>
<span class="line"></span>
<span class="line"><span class="token function">vim</span> /etc/bashrc</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 在最后一行加上</span></span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/home/uusama/mysql/bin</span>
<span class="line"></span></code></pre></div><p>注意事项：</p><ul><li>生效时间：新开终端生效，或者手动<code>source /etc/bashrc</code>生效</li><li>生效期限：永久有效</li><li>生效范围：对所有用户有效</li></ul><h2 id="linux环境变量配置方法五-vim-etc-profile" tabindex="-1"><a class="header-anchor" href="#linux环境变量配置方法五-vim-etc-profile"><span>Linux环境变量配置方法五：<code>vim /etc/profile</code></span></a></h2><p>该方法修改系统配置，需要管理员权限或者对该文件的写入权限，和<code>vim /etc/bashrc</code>类似：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 如果/etc/profile文件不可编辑，需要修改为可编辑</span></span>
<span class="line"><span class="token function">chmod</span> <span class="token parameter variable">-v</span> u+w /etc/profile</span>
<span class="line"></span>
<span class="line"><span class="token function">vim</span> /etc/profile</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 在最后一行加上</span></span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/home/uusama/mysql/bin</span>
<span class="line"></span></code></pre></div><p>注意事项：</p><ul><li>生效时间：新开终端生效，或者手动<code>source /etc/profile</code>生效</li><li>生效期限：永久有效</li><li>生效范围：对所有用户有效</li></ul><h2 id="linux环境变量配置方法六-vim-etc-environment" tabindex="-1"><a class="header-anchor" href="#linux环境变量配置方法六-vim-etc-environment"><span>Linux环境变量配置方法六：<code>vim /etc/environment</code></span></a></h2><p>该方法是修改系统环境配置文件，需要管理员权限或者对该文件的写入权限：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 如果/etc/bashrc文件不可编辑，需要修改为可编辑</span></span>
<span class="line"><span class="token function">chmod</span> <span class="token parameter variable">-v</span> u+w /etc/environment</span>
<span class="line"></span>
<span class="line"><span class="token function">vim</span> /etc/profile</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 在最后一行加上</span></span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/home/uusama/mysql/bin</span>
<span class="line"></span></code></pre></div><p>注意事项：</p><ul><li>生效时间：新开终端生效，或者手动<code>source /etc/environment</code>生效</li><li>生效期限：永久有效</li><li>生效范围：对所有用户有效</li></ul><h2 id="linux环境变量加载原理解析" tabindex="-1"><a class="header-anchor" href="#linux环境变量加载原理解析"><span>Linux环境变量加载原理解析</span></a></h2><p>上面列出了环境变量的各种配置方法，那么Linux是如何加载这些配置的呢？是以什么样的顺序加载的呢？</p><p>特定的加载顺序会导致相同名称的环境变量定义被覆盖或者不生效。</p><h3 id="环境变量的分类" tabindex="-1"><a class="header-anchor" href="#环境变量的分类"><span>环境变量的分类</span></a></h3><p>环境变量可以简单的分成用户自定义的环境变量以及系统级别的环境变量。</p><ul><li>用户级别环境变量定义文件：<code>~/.bashrc</code>、<code>~/.profile</code>（部分系统为：<code>~/.bash_profile</code>）</li><li>系统级别环境变量定义文件：<code>/etc/bashrc</code>、<code>/etc/profile</code>(部分系统为：<code>/etc/bash_profile</code>）、<code>/etc/environment</code></li></ul><p>另外在用户环境变量中，系统会首先读取<code>~/.bash_profile</code>（或者<code>~/.profile</code>）文件，如果没有该文件则读取<code>~/.bash_login</code>，根据这些文件中内容再去读取<code>~/.bashrc</code>。</p><h3 id="测试linux环境变量加载顺序的方法" tabindex="-1"><a class="header-anchor" href="#测试linux环境变量加载顺序的方法"><span>测试Linux环境变量加载顺序的方法</span></a></h3><p>为了测试各个不同文件的环境变量加载顺序，我们在每个环境变量定义文件中的第一行都定义相同的环境变量<code>UU_ORDER</code>，该变量的值为本身的值连接上当前文件名称。</p><p>需要修改的文件如下：</p><ul><li><code>/etc/environment</code></li><li><code>/etc/profile</code></li><li><code>/etc/profile.d/test.sh</code>，新建文件，没有文件夹可略过</li><li><code>/etc/bashrc</code>，或者<code>/etc/bash.bashrc</code></li><li><code>~/.bash_profile</code>，或者<code>~/.profile</code></li><li><code>~/.bashrc</code></li></ul><p>在每个文件中的第一行都加上下面这句代码，并相应的把冒号后的内容修改为当前文件的绝对文件名。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">UU_ORDER</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">$UU_ORDER</span>:~/.bash_profile&quot;</span></span>
<span class="line"></span></code></pre></div><p>修改完之后保存，新开一个窗口，然后<code>echo $UU_ORDER</code>观察变量的值：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">uusama@ubuntu:~$ <span class="token builtin class-name">echo</span> <span class="token variable">$UU_ORDER</span></span>
<span class="line"><span class="token variable">$UU_ORDER</span>:/etc/environment:/etc/profile:/etc/bash.bashrc:/etc/profile.d/test.sh:~/.profile:~/.bashrc</span>
<span class="line"></span></code></pre></div><p>可以推测出Linux加载环境变量的顺序如下：</p><ol><li><code>/etc/environment</code></li><li><code>/etc/profile</code></li><li><code>/etc/bash.bashrc</code></li><li><code>/etc/profile.d/test.sh</code></li><li><code>~/.profile</code></li><li><code>~/.bashrc</code></li></ol><h3 id="linux环境变量文件加载详解" tabindex="-1"><a class="header-anchor" href="#linux环境变量文件加载详解"><span>Linux环境变量文件加载详解</span></a></h3><p>由上面的测试可容易得出Linux加载环境变量的顺序如下，：</p><p>系统环境变量 -&gt; 用户自定义环境变量 <code>/etc/environment</code> -&gt; <code>/etc/profile</code> -&gt; <code>~/.profile</code></p><p>打开<code>/etc/profile</code>文件你会发现，该文件的代码中会加载<code>/etc/bash.bashrc</code>文件，然后检查<code>/etc/profile.d/</code>目录下的<code>.sh</code>文件并加载。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># /etc/profile: system-wide .profile file for the Bourne shell (sh(1))</span></span>
<span class="line"><span class="token comment"># and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token environment constant">$PS1</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token environment constant">$BASH</span>&quot;</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token environment constant">$BASH</span>&quot;</span> <span class="token operator">!=</span> <span class="token string">&quot;/bin/sh&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token comment"># The file bash.bashrc already sets the default PS1.</span></span>
<span class="line">    <span class="token comment"># PS1=&#39;\\h:\\w\\$ &#39;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> /etc/bash.bashrc <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">      <span class="token builtin class-name">.</span> /etc/bash.bashrc</span>
<span class="line">    <span class="token keyword">fi</span></span>
<span class="line">  <span class="token keyword">else</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">\`</span><span class="token function">id</span> <span class="token parameter variable">-u</span><span class="token variable">\`</span></span>&quot;</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">      <span class="token assign-left variable"><span class="token environment constant">PS1</span></span><span class="token operator">=</span><span class="token string">&#39;# &#39;</span></span>
<span class="line">    <span class="token keyword">else</span></span>
<span class="line">      <span class="token assign-left variable"><span class="token environment constant">PS1</span></span><span class="token operator">=</span><span class="token string">&#39;$ &#39;</span></span>
<span class="line">    <span class="token keyword">fi</span></span>
<span class="line">  <span class="token keyword">fi</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-d</span> /etc/profile.d <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">  <span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> /etc/profile.d/*.sh<span class="token punctuation">;</span> <span class="token keyword">do</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-r</span> <span class="token variable">$i</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">      <span class="token builtin class-name">.</span> <span class="token variable">$i</span></span>
<span class="line">    <span class="token keyword">fi</span></span>
<span class="line">  <span class="token keyword">done</span></span>
<span class="line">  <span class="token builtin class-name">unset</span> i</span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其次再打开<code>~/.profile</code>文件，会发现该文件中加载了<code>~/.bashrc</code>文件。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># if running bash</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-n</span> <span class="token string">&quot;<span class="token environment constant">$BASH_VERSION</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token comment"># include .bashrc if it exists</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> <span class="token string">&quot;<span class="token environment constant">$HOME</span>/.bashrc&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line"> <span class="token builtin class-name">.</span> <span class="token string">&quot;<span class="token environment constant">$HOME</span>/.bashrc&quot;</span></span>
<span class="line">    <span class="token keyword">fi</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># set PATH so it includes user&#39;s private bin directories</span></span>
<span class="line"><span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">&quot;<span class="token environment constant">$HOME</span>/bin:<span class="token environment constant">$HOME</span>/.local/bin:<span class="token environment constant">$PATH</span>&quot;</span></span>
<span class="line"></span></code></pre></div><p>从<code>~/.profile</code>文件中代码不难发现，<code>/.profile</code>文件<strong>只在用户登录的时候读取一次</strong>，而<code>/.bashrc</code>会在每次运行<code>Shell</code>脚本的时候读取一次。</p><h3 id="一些小技巧" tabindex="-1"><a class="header-anchor" href="#一些小技巧"><span>一些小技巧</span></a></h3><p>可以自定义一个环境变量文件，比如在某个项目下定义<code>uusama.profile</code>，在这个文件中使用<code>export</code>定义一系列变量，然后在<code>~/.profile</code>文件后面加上：<code>sourc uusama.profile</code>，这样你每次登陆都可以在Shell脚本中使用自己定义的一系列变量。</p><p>也可以使用<code>alias</code>命令定义一些命令的别名，比如<code>alias rm=&quot;rm -i&quot;</code>（双引号必须），并把这个代码加入到<code>~/.profile</code>中，这样你每次使用<code>rm</code>命令的时候，都相当于使用<code>rm -i</code>命令，非常方便。</p>`,69)]))}const c=n(p,[["render",t]]),r=JSON.parse('{"path":"/java-tutor/server-config/environment-of-linux.html","title":"Linux环境变量配置","lang":"zh-CN","frontmatter":{"description":"Linux环境变量配置 在自定义安装软件的时候，经常需要配置环境变量，下面列举出各种对环境变量的配置方法。 下面所有例子的环境说明如下： 系统：Ubuntu 14.0 用户名：uusama 需要配置MySQL环境变量路径：/home/uusama/mysql/bin Linux读取环境变量 读取环境变量的方法： export命令显示当前系统定义的所有环...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/java-tutor/server-config/environment-of-linux.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"Linux环境变量配置"}],["meta",{"property":"og:description","content":"Linux环境变量配置 在自定义安装软件的时候，经常需要配置环境变量，下面列举出各种对环境变量的配置方法。 下面所有例子的环境说明如下： 系统：Ubuntu 14.0 用户名：uusama 需要配置MySQL环境变量路径：/home/uusama/mysql/bin Linux读取环境变量 读取环境变量的方法： export命令显示当前系统定义的所有环..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-04-05T13:45:58.000Z"}],["meta",{"property":"article:modified_time","content":"2022-04-05T13:45:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux环境变量配置\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-04-05T13:45:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"Linux读取环境变量","slug":"linux读取环境变量","link":"#linux读取环境变量","children":[]},{"level":2,"title":"Linux环境变量配置方法一：export PATH","slug":"linux环境变量配置方法一-export-path","link":"#linux环境变量配置方法一-export-path","children":[]},{"level":2,"title":"Linux环境变量配置方法二：vim ~/.bashrc","slug":"linux环境变量配置方法二-vim-bashrc","link":"#linux环境变量配置方法二-vim-bashrc","children":[]},{"level":2,"title":"Linux环境变量配置方法三：vim ~/.bash_profile","slug":"linux环境变量配置方法三-vim-bash-profile","link":"#linux环境变量配置方法三-vim-bash-profile","children":[]},{"level":2,"title":"Linux环境变量配置方法四：vim /etc/bashrc","slug":"linux环境变量配置方法四-vim-etc-bashrc","link":"#linux环境变量配置方法四-vim-etc-bashrc","children":[]},{"level":2,"title":"Linux环境变量配置方法五：vim /etc/profile","slug":"linux环境变量配置方法五-vim-etc-profile","link":"#linux环境变量配置方法五-vim-etc-profile","children":[]},{"level":2,"title":"Linux环境变量配置方法六：vim /etc/environment","slug":"linux环境变量配置方法六-vim-etc-environment","link":"#linux环境变量配置方法六-vim-etc-environment","children":[]},{"level":2,"title":"Linux环境变量加载原理解析","slug":"linux环境变量加载原理解析","link":"#linux环境变量加载原理解析","children":[{"level":3,"title":"环境变量的分类","slug":"环境变量的分类","link":"#环境变量的分类","children":[]},{"level":3,"title":"测试Linux环境变量加载顺序的方法","slug":"测试linux环境变量加载顺序的方法","link":"#测试linux环境变量加载顺序的方法","children":[]},{"level":3,"title":"Linux环境变量文件加载详解","slug":"linux环境变量文件加载详解","link":"#linux环境变量文件加载详解","children":[]},{"level":3,"title":"一些小技巧","slug":"一些小技巧","link":"#一些小技巧","children":[]}]}],"git":{"createdTime":1647861419000,"updatedTime":1649166358000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":4,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":6.22,"words":1866},"filePathRelative":"java-tutor/server-config/environment-of-linux.md","localizedDate":"2022年3月21日","autoDesc":true}');export{c as comp,r as data};
