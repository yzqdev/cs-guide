import{_ as n,c as a,a as e,o as s}from"./app-C8DxhDIZ.js";const o={};function p(r,t){return s(),a("div",null,t[0]||(t[0]=[e(`<h1 id="nuxt技巧" tabindex="-1"><a class="header-anchor" href="#nuxt技巧"><span>nuxt技巧</span></a></h1><h2 id="数据获取" tabindex="-1"><a class="header-anchor" href="#数据获取"><span>数据获取</span></a></h2><p>注意: 在使用动态数据(fetch或者axio请求的数据)时,使用onBeforeMount界面上无法看到数据的,也就是说,那些动态数据是无法被搜索引擎索引 解决办法就是使用内置的获取树方法,同时不要使用<code>nuxt generate</code>,因为<code>nuxt generate</code>生成的是静态html,获取数据还是会使用接口,而不是服务端渲染</p><div class="language-typescript" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token operator">&lt;</span>script setup lang<span class="token operator">=</span><span class="token string">&quot;ts&quot;</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token operator">:</span> count <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">useFetch</span><span class="token punctuation">(</span><span class="token string">&#39;/api/count&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>Page visits<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> count <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre></div><p>这种方式,启动一个node服务器,返回的就是完整的html而不是缺少动态数据的html了,不过这种方式打包出来必须使用node启动<code>nuxt build</code></p><p>同理,astro也是这样,不过</p>`,6)]))}const l=n(o,[["render",p]]),i=JSON.parse('{"path":"/frontend/framework/vue/nuxt-tutor.html","title":"nuxt技巧","lang":"zh-CN","frontmatter":{"description":"nuxt技巧 数据获取 注意: 在使用动态数据(fetch或者axio请求的数据)时,使用onBeforeMount界面上无法看到数据的,也就是说,那些动态数据是无法被搜索引擎索引 解决办法就是使用内置的获取树方法,同时不要使用nuxt generate,因为nuxt generate生成的是静态html,获取数据还是会使用接口,而不是服务端渲染 这种...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/frontend/framework/vue/nuxt-tutor.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"nuxt技巧"}],["meta",{"property":"og:description","content":"nuxt技巧 数据获取 注意: 在使用动态数据(fetch或者axio请求的数据)时,使用onBeforeMount界面上无法看到数据的,也就是说,那些动态数据是无法被搜索引擎索引 解决办法就是使用内置的获取树方法,同时不要使用nuxt generate,因为nuxt generate生成的是静态html,获取数据还是会使用接口,而不是服务端渲染 这种..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-16T07:53:47.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-16T07:53:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nuxt技巧\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-16T07:53:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"数据获取","slug":"数据获取","link":"#数据获取","children":[]}],"git":{"createdTime":1647861419000,"updatedTime":1713254027000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":6,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":0.64,"words":193},"filePathRelative":"frontend/framework/vue/nuxt-tutor.md","localizedDate":"2022年3月21日","autoDesc":true}');export{l as comp,i as data};
