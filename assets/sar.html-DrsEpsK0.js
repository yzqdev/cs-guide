import{_ as e,c as l,a as s,o as i}from"./app-C8DxhDIZ.js";const t={};function r(n,a){return i(),l("div",null,a[0]||(a[0]=[s(`<h1 id="sar-找出系统瓶颈的利器" tabindex="-1"><a class="header-anchor" href="#sar-找出系统瓶颈的利器"><span>sar 找出系统瓶颈的利器</span></a></h1><p>sar是System Activity Reporter（系统活动情况报告）的缩写。sar工具将对系统当前的状态进行取样，然后通过计算数据和比例来表达系统的当前运行状态。它的特点是可以连续对系统取样，获得大量的取样数据；取样数据和分析的结果都可以存入文件，所需的负载很小。sar是目前Linux上最为全面的系统性能分析工具之一，可以从14个大方面对系统的活动进行报告，包括文件的读写情况、系统调用的使用情况、串口、CPU效率、内存使用状况、进程活动及IPC有关的活动等，使用也是较为复杂。</p><p>sar是查看操作系统报告指标的各种工具中，最为普遍和方便的；它有两种用法；</p><ol><li>追溯过去的统计数据（默认）</li><li>周期性的查看当前数据</li></ol><h2 id="追溯过去的统计数据" tabindex="-1"><a class="header-anchor" href="#追溯过去的统计数据"><span>追溯过去的统计数据</span></a></h2><p>默认情况下，sar从最近的0点0分开始显示数据；如果想继续查看一天前的报告；可以查看保存在/var/log/sysstat/下的sa日志； 使用sar工具查看:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">    <span class="token variable">$sar</span> <span class="token parameter variable">-f</span> /var/log/sysstat/sa28 <span class="token punctuation">\\</span><span class="token operator">|</span> <span class="token function">head</span> sar <span class="token parameter variable">-r</span> <span class="token parameter variable">-f</span></span>
<span class="line">    /var/log/sysstat/sa28</span>
<span class="line"></span></code></pre></div><h2 id="查看cpu使用率" tabindex="-1"><a class="header-anchor" href="#查看cpu使用率"><span>查看CPU使用率</span></a></h2><p>sar -u : 默认情况下显示的cpu使用率等信息就是sar -u；</p><p>可以看到这台机器使用了虚拟化技术，有相应的时间消耗； 各列的指标分别是:</p><ul><li>%user 用户模式下消耗的CPU时间的比例；</li><li>%nice 通过nice改变了进程调度优先级的进程，在用户模式下消耗的CPU时间的比例</li><li>%system 系统模式下消耗的CPU时间的比例；</li><li>%iowait CPU等待磁盘I/O导致空闲状态消耗的时间比例；</li><li>%steal 利用Xen等操作系统虚拟化技术，等待其它虚拟CPU计算占用的时间比例；</li><li>%idle CPU空闲时间比例；</li></ul><h2 id="查看平均负载" tabindex="-1"><a class="header-anchor" href="#查看平均负载"><span>查看平均负载</span></a></h2><p>sar -q: 查看平均负载</p><p>指定-q后，就能查看运行队列中的进程数、系统上的进程大小、平均负载等；与其它命令相比，它能查看各项指标随时间变化的情况；</p><ul><li>runq-sz：运行队列的长度（等待运行的进程数）</li><li>plist-sz：进程列表中进程（processes）和线程（threads）的数量</li><li>ldavg-1：最后1分钟的系统平均负载 ldavg-5：过去5分钟的系统平均负载</li><li>ldavg-15：过去15分钟的系统平均负载</li></ul><h2 id="查看内存使用状况" tabindex="-1"><a class="header-anchor" href="#查看内存使用状况"><span>查看内存使用状况</span></a></h2><p>sar -r： 指定-r之后，可查看物理内存使用状况；</p><ul><li>kbmemfree：这个值和free命令中的free值基本一致,所以它不包括buffer和cache的空间.</li><li>kbmemused：这个值和free命令中的used值基本一致,所以它包括buffer和cache的空间.</li><li>%memused：物理内存使用率，这个值是kbmemused和内存总量(不包括swap)的一个百分比.</li><li>kbbuffers和kbcached：这两个值就是free命令中的buffer和cache.</li><li>kbcommit：保证当前系统所需要的内存,即为了确保不溢出而需要的内存(RAM+swap).</li><li>%commit：这个值是kbcommit与内存总量(包括swap)的一个百分比.</li></ul><h2 id="查看页面交换发生状况" tabindex="-1"><a class="header-anchor" href="#查看页面交换发生状况"><span>查看页面交换发生状况</span></a></h2><p>sar -W：查看页面交换发生状况</p><p>页面发生交换时，服务器的吞吐量会大幅下降；服务器状况不良时，如果怀疑因为内存不足而导致了页面交换的发生，可以使用这个命令来确认是否发生了大量的交换；</p><ul><li>pswpin/s：每秒系统换入的交换页面（swap page）数量</li><li>pswpout/s：每秒系统换出的交换页面（swap page）数量</li></ul><p>要判断系统瓶颈问题，有时需几个 sar 命令选项结合起来；</p><ul><li>怀疑CPU存在瓶颈，可用 sar -u 和 sar -q 等来查看</li><li>怀疑内存存在瓶颈，可用sar -B、sar -r 和 sar -W 等来查看</li><li>怀疑I/O存在瓶颈，可用 sar -b、sar -u 和 sar -d 等来查看</li></ul><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><ol><li>有的linux系统下，默认可能没有安装这个包，使用apt-get install sysstat 来安装；</li></ol><p>2. 安装完毕，将性能收集工具的开关打开： vi /etc/default/sysstat</p><p>: 设置 ENABLED=&quot;true&quot;</p><ol start="3"><li>启动这个工具来收集系统性能数据： /etc/init.d/sysstat start</li></ol><h2 id="sar参数说明" tabindex="-1"><a class="header-anchor" href="#sar参数说明"><span>sar参数说明</span></a></h2><ul><li>-A 汇总所有的报告</li><li>-a 报告文件读写使用情况</li><li>-B 报告附加的缓存的使用情况</li><li>-b 报告缓存的使用情况</li><li>-c 报告系统调用的使用情况</li><li>-d 报告磁盘的使用情况</li><li>-g 报告串口的使用情况</li><li>-h 报告关于buffer使用的统计数据</li><li>-m 报告IPC消息队列和信号量的使用情况</li><li>-n 报告命名cache的使用情况</li><li>-p 报告调页活动的使用情况</li><li>-q 报告运行队列和交换队列的平均长度</li><li>-R 报告进程的活动情况</li><li>-r 报告没有使用的内存页面和硬盘块</li><li>-u 报告CPU的利用率</li><li>-v 报告进程、i节点、文件和锁表状态</li><li>-w 报告系统交换活动状况</li><li>-y 报告TTY设备活动状况</li></ul>`,31)]))}const o=e(t,[["render",r]]),c=JSON.parse('{"path":"/linux-tutor/tool/sar.html","title":"sar 找出系统瓶颈的利器","lang":"zh-CN","frontmatter":{"description":"sar 找出系统瓶颈的利器 sar是System Activity Reporter（系统活动情况报告）的缩写。sar工具将对系统当前的状态进行取样，然后通过计算数据和比例来表达系统的当前运行状态。它的特点是可以连续对系统取样，获得大量的取样数据；取样数据和分析的结果都可以存入文件，所需的负载很小。sar是目前Linux上最为全面的系统性能分析工具之一...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/linux-tutor/tool/sar.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"sar 找出系统瓶颈的利器"}],["meta",{"property":"og:description","content":"sar 找出系统瓶颈的利器 sar是System Activity Reporter（系统活动情况报告）的缩写。sar工具将对系统当前的状态进行取样，然后通过计算数据和比例来表达系统的当前运行状态。它的特点是可以连续对系统取样，获得大量的取样数据；取样数据和分析的结果都可以存入文件，所需的负载很小。sar是目前Linux上最为全面的系统性能分析工具之一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-07-26T16:41:58.000Z"}],["meta",{"property":"article:modified_time","content":"2022-07-26T16:41:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"sar 找出系统瓶颈的利器\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-07-26T16:41:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"追溯过去的统计数据","slug":"追溯过去的统计数据","link":"#追溯过去的统计数据","children":[]},{"level":2,"title":"查看CPU使用率","slug":"查看cpu使用率","link":"#查看cpu使用率","children":[]},{"level":2,"title":"查看平均负载","slug":"查看平均负载","link":"#查看平均负载","children":[]},{"level":2,"title":"查看内存使用状况","slug":"查看内存使用状况","link":"#查看内存使用状况","children":[]},{"level":2,"title":"查看页面交换发生状况","slug":"查看页面交换发生状况","link":"#查看页面交换发生状况","children":[]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"sar参数说明","slug":"sar参数说明","link":"#sar参数说明","children":[]}],"git":{"createdTime":1653565176000,"updatedTime":1658853718000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":3,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":4.41,"words":1323},"filePathRelative":"linux-tutor/tool/sar.md","localizedDate":"2022年5月26日","autoDesc":true}');export{o as comp,c as data};
