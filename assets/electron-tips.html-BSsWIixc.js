import{_ as s,c as a,a as p,o as t}from"./app-C8DxhDIZ.js";const e={};function o(l,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="electron-技巧" tabindex="-1"><a class="header-anchor" href="#electron-技巧"><span>electron 技巧</span></a></h1><h2 id="无边框窗口的拖动" tabindex="-1"><a class="header-anchor" href="#无边框窗口的拖动"><span>无边框窗口的拖动</span></a></h2><div class="language-html" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line">默认情况下, 无框窗口是 non-draggable 的。 应用程序需要指定 \`-webkit-app-region: drag\` 在 CSS 中告诉Electron哪个区域是可拖拽的 (像 OS 的标准标题栏), 并且应用程序也可以使用 \`-webkit-app-region: no-drag\` 来排除 draggable region 中的 non-draggable 区域。 请注意, 当前只支持矩形形状。</span>
<span class="line"></span>
<span class="line">要使整个窗口可拖拽, 您可以添加 \`-webkit-app-region: drag\` 作为 \`body\` 的样式:</span>
<span class="line">\`\`\`html</span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">-webkit-app-region</span><span class="token punctuation">:</span> drag</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre></div><p>请注意, 如果您已使整个窗口draggable, 则必须将按钮标记为 non-draggable, 否则用户将无法单击它们:</p><div class="language-css" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">button</span> <span class="token punctuation">{</span>  <span class="token property">-webkit-app-region</span><span class="token punctuation">:</span> no-drag<span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>如果你设置自定义标题栏为 draggable, 你也需要标题栏中所有的按钮都设为 non-draggable。 请注意，如果您使整个窗口都可拖拽，则必须将其中的按钮标记为不可拖拽，否则用户将无法点击它们：</p><div class="language-css" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">button</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">-webkit-app-region</span><span class="token punctuation">:</span> no-drag<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h2 id="electron常见错误" tabindex="-1"><a class="header-anchor" href="#electron常见错误"><span>electron常见错误</span></a></h2><p>在渲染进程由于vite无法处理nodejs相关的module,所有只能使用require</p><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h2 id="快捷键打开控制台" tabindex="-1"><a class="header-anchor" href="#快捷键打开控制台"><span>快捷键打开控制台</span></a></h2><p>在app.whenready事件里面加入这个</p><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">registryShortcut</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  globalShortcut<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">&#39;CommandOrControl+I&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 获取当前窗口</span></span>
<span class="line">    BrowserWindow<span class="token punctuation">.</span><span class="token function">getFocusedWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>webContents<span class="token punctuation">.</span><span class="token function">openDevTools</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>whenReady</p><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">app<span class="token punctuation">.</span>whenReady<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">registryShortcut</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h2 id="在渲染进程使用nodejs和electronapi" tabindex="-1"><a class="header-anchor" href="#在渲染进程使用nodejs和electronapi"><span>在渲染进程使用nodejs和electronapi</span></a></h2><p>需要在main.ts设置 <code>contextIsolation:false\`\`,这样</code>contextBridge\`会失效,</p><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">  mainWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">icon</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;icons/icon.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// tray icon</span></span>
<span class="line">    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">useContentSize</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">webPreferences</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">contextIsolation</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token comment">//必须设置这个,</span></span>
<span class="line">      <span class="token literal-property property">nodeIntegration</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">webSecurity</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token comment">// More info: https://v2.quasar.dev/quasar-cli-vite/developing-electron-apps/electron-preload-script</span></span>
<span class="line">      <span class="token comment">// preload: path.resolve(__dirname, process.env.QUASAR_ELECTRON_PRELOAD),</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h2 id="electron渲染进程引入dialog问题" tabindex="-1"><a class="header-anchor" href="#electron渲染进程引入dialog问题"><span>Electron渲染进程引入dialog问题</span></a></h2><p>官网的dialog例子是这样的：</p><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> dialog <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dialog<span class="token punctuation">.</span><span class="token function">showOpenDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;openFile&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;multiSelections&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>该例子只能在主进程中使用</strong></p><h2 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案"><span>解决方案</span></a></h2><p>老文档方法，引用改为</p><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> dialog <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>remote</span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dialog<span class="token punctuation">.</span><span class="token function">showOpenDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;openFile&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;multiSelections&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>以上方法也是不行的。经过翻阅Electron文档，里面有一栏目References-&gt;重点更改，这里明确表明了在Electron 14中已经废弃了remote了，需要使用</p><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">//渲染进程</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> dialog <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@electron/remote&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">//主进程引入</span></span>
<span class="line"><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@electron/remote/main&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//然后在mainwindow下添加</span></span>
<span class="line"> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@electron/remote/main&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">enable</span><span class="token punctuation">(</span>mainWindow<span class="token punctuation">.</span>webContents<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>如果使用@electron/remote需要使用npm按照</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--save</span> @electron/remote</span>
<span class="line"></span></code></pre></div><p>经过以上方法，应该可以解决大部分人的问题了。很不幸，我就是大部分人之外。。。于是我接着翻阅各种资料，再在主程序配置了以下两个地方即可</p><p>main.js</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">createWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> mainWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">400</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">webPreferences</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">preload</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;preload.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">nodeIntegration</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">contextIsolation</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">enableRemoteModule</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//增加该配置，默认是false，新版本不能使用remote</span></span>
<span class="line"></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    mainWindow<span class="token punctuation">.</span><span class="token function">loadFile</span><span class="token punctuation">(</span><span class="token string">&#39;index.html&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//增加该配置</span></span>
<span class="line">    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@electron/remote/main&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">enable</span><span class="token punctuation">(</span>mainWindow<span class="token punctuation">.</span>webContents<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>经过以上配置～应该可以顺利跑通dialog例子</p>`,33)]))}const i=s(e,[["render",o]]),r=JSON.parse('{"path":"/frontend/electron-tutor/electron-tips.html","title":"electron 技巧","lang":"zh-CN","frontmatter":{"description":"electron 技巧 无边框窗口的拖动 请注意, 如果您已使整个窗口draggable, 则必须将按钮标记为 non-draggable, 否则用户将无法单击它们: 如果你设置自定义标题栏为 draggable, 你也需要标题栏中所有的按钮都设为 non-draggable。 请注意，如果您使整个窗口都可拖拽，则必须将其中的按钮标记为不可拖拽，否则用...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/frontend/electron-tutor/electron-tips.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"electron 技巧"}],["meta",{"property":"og:description","content":"electron 技巧 无边框窗口的拖动 请注意, 如果您已使整个窗口draggable, 则必须将按钮标记为 non-draggable, 否则用户将无法单击它们: 如果你设置自定义标题栏为 draggable, 你也需要标题栏中所有的按钮都设为 non-draggable。 请注意，如果您使整个窗口都可拖拽，则必须将其中的按钮标记为不可拖拽，否则用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-07-08T05:48:59.000Z"}],["meta",{"property":"article:modified_time","content":"2022-07-08T05:48:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"electron 技巧\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-07-08T05:48:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"无边框窗口的拖动","slug":"无边框窗口的拖动","link":"#无边框窗口的拖动","children":[]},{"level":2,"title":"electron常见错误","slug":"electron常见错误","link":"#electron常见错误","children":[]},{"level":2,"title":"快捷键打开控制台","slug":"快捷键打开控制台","link":"#快捷键打开控制台","children":[]},{"level":2,"title":"在渲染进程使用nodejs和electronapi","slug":"在渲染进程使用nodejs和electronapi","link":"#在渲染进程使用nodejs和electronapi","children":[]},{"level":2,"title":"Electron渲染进程引入dialog问题","slug":"electron渲染进程引入dialog问题","link":"#electron渲染进程引入dialog问题","children":[]},{"level":2,"title":"解决方案","slug":"解决方案","link":"#解决方案","children":[]}],"git":{"createdTime":1647861419000,"updatedTime":1657259339000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":4,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":2.29,"words":687},"filePathRelative":"frontend/electron-tutor/electron-tips.md","localizedDate":"2022年3月21日","autoDesc":true}');export{i as comp,r as data};
