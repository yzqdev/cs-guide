import{_ as s,c as a,a as p,o as t}from"./app-C8DxhDIZ.js";const e={};function o(c,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="os" tabindex="-1"><a class="header-anchor" href="#os"><span>os</span></a></h1><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token string">&quot;fmt&quot;</span></span>
<span class="line">    <span class="token string">&quot;runtime&quot;</span></span>
<span class="line">    <span class="token string">&quot;time&quot;</span></span>
<span class="line"></span>
<span class="line">    <span class="token string">&quot;github.com/shirou/gopsutil/cpu&quot;</span></span>
<span class="line">    <span class="token string">&quot;github.com/shirou/gopsutil/disk&quot;</span></span>
<span class="line">    <span class="token string">&quot;github.com/shirou/gopsutil/load&quot;</span></span>
<span class="line">    <span class="token string">&quot;github.com/shirou/gopsutil/mem&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">(</span></span>
<span class="line">    B  <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line">    KB <span class="token operator">=</span> <span class="token number">1024</span> <span class="token operator">*</span> B</span>
<span class="line">    MB <span class="token operator">=</span> <span class="token number">1024</span> <span class="token operator">*</span> KB</span>
<span class="line">    GB <span class="token operator">=</span> <span class="token number">1024</span> <span class="token operator">*</span> MB</span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">DiskCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">OSCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">CPUCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">RAMCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//服务器硬盘使用量</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">DiskCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    u<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> disk<span class="token punctuation">.</span><span class="token function">Usage</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    usedMB <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span>Used<span class="token punctuation">)</span> <span class="token operator">/</span> MB</span>
<span class="line">    usedGB <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span>Used<span class="token punctuation">)</span> <span class="token operator">/</span> GB</span>
<span class="line">    totalMB <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span>Total<span class="token punctuation">)</span> <span class="token operator">/</span> MB</span>
<span class="line">    totalGB <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span>Total<span class="token punctuation">)</span> <span class="token operator">/</span> GB</span>
<span class="line">    usedPercent <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span>UsedPercent<span class="token punctuation">)</span></span>
<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Free space: %dMB (%dGB) / %dMB (%dGB) | Used: %d%%\\n&quot;</span><span class="token punctuation">,</span> usedMB<span class="token punctuation">,</span> usedGB<span class="token punctuation">,</span> totalMB<span class="token punctuation">,</span> totalGB<span class="token punctuation">,</span> usedPercent<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//OS</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">OSCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;goOs:%s,compiler:%s,numCpu:%d,version:%s,numGoroutine:%d\\n&quot;</span><span class="token punctuation">,</span> runtime<span class="token punctuation">.</span>GOOS<span class="token punctuation">,</span> runtime<span class="token punctuation">.</span>Compiler<span class="token punctuation">,</span> runtime<span class="token punctuation">.</span><span class="token function">NumCPU</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> runtime<span class="token punctuation">.</span><span class="token function">Version</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> runtime<span class="token punctuation">.</span><span class="token function">NumGoroutine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//CPU 使用量</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">CPUCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    cores<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> cpu<span class="token punctuation">.</span><span class="token function">Counts</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    cpus<span class="token punctuation">,</span> err <span class="token operator">:=</span> cpu<span class="token punctuation">.</span><span class="token function">Percent</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Duration</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token operator">*</span>time<span class="token punctuation">.</span>Millisecond<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">for</span> i<span class="token punctuation">,</span> c <span class="token operator">:=</span> <span class="token keyword">range</span> cpus <span class="token punctuation">{</span></span>
<span class="line">            fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;cpu%d : %f%%\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> c<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    a<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> load<span class="token punctuation">.</span><span class="token function">Avg</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    l1 <span class="token operator">:=</span> a<span class="token punctuation">.</span>Load1</span>
<span class="line">    l5 <span class="token operator">:=</span> a<span class="token punctuation">.</span>Load5</span>
<span class="line">    l15 <span class="token operator">:=</span> a<span class="token punctuation">.</span>Load15</span>
<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>l1<span class="token punctuation">)</span></span>
<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>l5<span class="token punctuation">)</span></span>
<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>l15<span class="token punctuation">)</span></span>
<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>cores<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//内存使用量</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">RAMCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    u<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> mem<span class="token punctuation">.</span><span class="token function">VirtualMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    usedMB <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span>Used<span class="token punctuation">)</span> <span class="token operator">/</span> MB</span>
<span class="line">    totalMB <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span>Total<span class="token punctuation">)</span> <span class="token operator">/</span> MB</span>
<span class="line">    usedPercent <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span>UsedPercent<span class="token punctuation">)</span></span>
<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;usedMB:%d,totalMB:%d,usedPercent:%d&quot;</span><span class="token punctuation">,</span> usedMB<span class="token punctuation">,</span> totalMB<span class="token punctuation">,</span> usedPercent<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)]))}const i=s(e,[["render",o]]),u=JSON.parse('{"path":"/go-tutor/snippet/os.html","title":"os","lang":"zh-CN","frontmatter":{"description":"os","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/go-tutor/snippet/os.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"os"}],["meta",{"property":"og:description","content":"os"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-08-21T02:04:02.000Z"}],["meta",{"property":"article:modified_time","content":"2022-08-21T02:04:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"os\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-08-21T02:04:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[],"git":{"createdTime":1661047442000,"updatedTime":1661047442000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":1,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":0.62,"words":187},"filePathRelative":"go-tutor/snippet/os.md","localizedDate":"2022年8月21日","autoDesc":true}');export{i as comp,u as data};
