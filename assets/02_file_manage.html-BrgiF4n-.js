import{_ as s,c as n,a as e,o as p}from"./app-C8DxhDIZ.js";const l={};function t(i,a){return p(),n("div",null,a[0]||(a[0]=[e(`<h1 id="文件及目录管理" tabindex="-1"><a class="header-anchor" href="#文件及目录管理"><span>文件及目录管理</span></a></h1><p>文件管理不外乎文件或目录的创建、删除、查询、移动，有mkdir/rm/mv</p><p>文件查询是重点，用find来进行查询；find的参数丰富，也非常强大；</p><p>查看文件内容是个大的话题，文本的处理有太多的工具供我们使用，在本章中只是点到即止，后面会有专门的一章来介绍文本的处理工具；</p><p>有时候，需要给文件创建一个别名，我们需要用到ln，使用这个别名和使用原文件是相同的效果；</p><h2 id="创建和删除" tabindex="-1"><a class="header-anchor" href="#创建和删除"><span>创建和删除</span></a></h2><ul><li>创建：mkdir</li><li>删除：rm</li><li>删除非空目录：rm -rf file目录</li><li>删除日志 rm *log (等价: $find ./ -name &quot;*log&quot; -exec rm {} 😉</li><li>移动：mv</li><li>复制：cp (复制目录：cp -r )</li></ul><p>查看当前目录下文件个数:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">find</span> ./ <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span></span>
<span class="line"></span></code></pre></div><p>复制目录:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">cp</span> <span class="token parameter variable">-r</span> source_dir  dest_dir</span>
<span class="line"></span></code></pre></div><h2 id="目录切换" tabindex="-1"><a class="header-anchor" href="#目录切换"><span>目录切换</span></a></h2><ul><li>找到文件/目录位置：cd</li><li>切换到上一个工作目录： cd -</li><li>切换到home目录： cd or cd ~</li><li>显示当前路径: pwd</li><li>更改当前工作路径为path: $cd path</li></ul><h2 id="列出目录项" tabindex="-1"><a class="header-anchor" href="#列出目录项"><span>列出目录项</span></a></h2><ul><li>显示当前目录下的文件 ls</li><li>按时间排序，以列表的方式显示目录项 ls -lrt</li></ul><p>以上这个命令用到的频率如此之高，以至于我们需要为它建立一个快捷命令方式:</p><p>在.bashrc 中设置命令别名:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">    <span class="token builtin class-name">alias</span> <span class="token assign-left variable">lsl</span><span class="token operator">=</span><span class="token string">&#39;ls -lrt&#39;</span></span>
<span class="line">    <span class="token builtin class-name">alias</span> <span class="token assign-left variable">lm</span><span class="token operator">=</span><span class="token string">&#39;ls -al|more&#39;</span></span>
<span class="line"></span></code></pre></div><p>这样，使用lsl，就可以显示目录中的文件按照修改时间排序；以列表方式显示；</p><ul><li>给每项文件前面增加一个id编号(看上去更加整洁):</li></ul><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">        <span class="token operator">&gt;</span>ls <span class="token operator">|</span> <span class="token function">cat</span> <span class="token parameter variable">-n</span></span>
<span class="line"></span>
<span class="line">    <span class="token operator">&gt;</span> <span class="token number">1</span> a <span class="token number">2</span> a.out <span class="token number">3</span> app <span class="token number">4</span> b <span class="token number">5</span> bin <span class="token number">6</span> config</span>
<span class="line"></span></code></pre></div><p>注：.bashrc 在/home/你的用户名/ 文件夹下，以隐藏文件的方式存储；可使用 ls -a 查看；</p><h2 id="查找目录及文件-find-locate" tabindex="-1"><a class="header-anchor" href="#查找目录及文件-find-locate"><span>查找目录及文件 find/locate</span></a></h2><p>搜寻文件或目录:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">find</span> ./ <span class="token parameter variable">-name</span> <span class="token string">&quot;core*&quot;</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">file</span></span>
<span class="line"></span></code></pre></div><p>查找目标文件夹中是否有obj文件:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">find</span> ./ <span class="token parameter variable">-name</span> <span class="token string">&#39;*.o&#39;</span></span>
<span class="line"></span></code></pre></div><p>递归当前目录及子目录删除所有.o文件:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">find</span> ./ <span class="token parameter variable">-name</span> <span class="token string">&quot;*.o&quot;</span> <span class="token parameter variable">-exec</span> <span class="token function">rm</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>find是实时查找，如果需要更快的查询，可试试locate；locate会为文件系统建立索引数据库，如果有文件更新，需要定期执行更新命令来更新索引库:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">updatedb</span>
<span class="line"></span></code></pre></div><p>寻找包含有string的路径:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">locate</span> string</span>
<span class="line"></span></code></pre></div><p>与find不同，locate并不是实时查找。你需要更新数据库，以获得最新的文件索引信息。</p><h2 id="查看文件内容" tabindex="-1"><a class="header-anchor" href="#查看文件内容"><span>查看文件内容</span></a></h2><p>查看文件：<code>cat vi head tail more</code></p><p>显示时同时显示行号:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">cat</span> <span class="token parameter variable">-n</span>                 </span>
<span class="line"></span></code></pre></div><p>按页显示列表内容:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">ls</span> <span class="token parameter variable">-al</span> <span class="token operator">|</span> <span class="token function">more</span>          </span>
<span class="line"></span></code></pre></div><p>只看前10行:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">head</span> - <span class="token number">10</span> **           </span>
<span class="line"></span></code></pre></div><p>显示文件第一行:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">head</span> <span class="token parameter variable">-1</span> filename       </span>
<span class="line"></span></code></pre></div><p>显示文件倒数第五行:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">tail</span> <span class="token parameter variable">-5</span> filename       </span>
<span class="line"></span></code></pre></div><p>查看两个文件间的差别:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">diff</span> file1 file2       </span>
<span class="line"></span></code></pre></div><p>动态显示文本最新信息:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">tail</span> <span class="token parameter variable">-f</span> crawler.log</span>
<span class="line"></span></code></pre></div><h2 id="查找文件内容" tabindex="-1"><a class="header-anchor" href="#查找文件内容"><span>查找文件内容</span></a></h2><p>使用egrep查询文件内容:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">    <span class="token function">egrep</span> <span class="token string">&#39;03.1\\/CO\\/AE&#39;</span> TSF_STAT_111130.log.012</span>
<span class="line">    <span class="token function">egrep</span> <span class="token string">&#39;A_LMCA777:C&#39;</span> TSF_STAT_111130.log.035 <span class="token operator">&gt;</span> co.out2</span>
<span class="line"></span></code></pre></div><h2 id="文件与目录权限修改" tabindex="-1"><a class="header-anchor" href="#文件与目录权限修改"><span>文件与目录权限修改</span></a></h2><ul><li>改变文件的拥有者 chown</li><li>改变文件读、写、执行等属性 chmod</li><li>递归子目录修改： chown -R tuxapp source/</li><li>增加脚本可执行权限： chmod a+x myscript</li></ul><h2 id="给文件增加别名" tabindex="-1"><a class="header-anchor" href="#给文件增加别名"><span>给文件增加别名</span></a></h2><p>创建符号链接/硬链接:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">    <span class="token function">ln</span> cc ccAgain :硬连接；删除一个，将仍能找到；</span>
<span class="line">    <span class="token function">ln</span> <span class="token parameter variable">-s</span> cc ccTo :符号链接<span class="token punctuation">(</span>软链接<span class="token punctuation">)</span>；删除源，另一个无法使用；（后面一个ccTo 为新建的文件）</span>
<span class="line"></span></code></pre></div><h2 id="管道和重定向" tabindex="-1"><a class="header-anchor" href="#管道和重定向"><span>管道和重定向</span></a></h2><ul><li>批处理命令连接执行，使用 |</li><li>串联: 使用分号 ;</li><li>前面成功，则执行后面一条，否则，不执行:&amp;&amp;</li><li>前面失败，则后一条执行: ||</li></ul><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">    <span class="token function">ls</span> /proc <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span>  suss<span class="token operator">!</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> failed.</span>
<span class="line"></span></code></pre></div><p>能够提示命名是否执行成功or失败；</p><p>与上述相同效果的是:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">    <span class="token keyword">if</span> <span class="token function">ls</span> /proc<span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token builtin class-name">echo</span> suss<span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token builtin class-name">echo</span> fail<span class="token punctuation">;</span> <span class="token keyword">fi</span></span>
<span class="line"></span></code></pre></div><p>重定向:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">    <span class="token function">ls</span>  proc/*.c <span class="token operator">&gt;</span> list <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token operator">&amp;</span>l 将标准输出和标准错误重定向到同一文件；</span>
<span class="line"></span></code></pre></div><p>等价的是:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">    <span class="token function">ls</span>  proc/*.c <span class="token operator">&amp;&gt;</span> list</span>
<span class="line"></span></code></pre></div><p>清空文件:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">    :<span class="token operator">&gt;</span> a.txt</span>
<span class="line"></span></code></pre></div><p>重定向:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">    <span class="token builtin class-name">echo</span> aa <span class="token operator">&gt;&gt;</span> a.txt</span>
<span class="line"></span></code></pre></div><h2 id="设置环境变量" tabindex="-1"><a class="header-anchor" href="#设置环境变量"><span>设置环境变量</span></a></h2><p>启动帐号后自动执行的是 文件为 .profile，然后通过这个文件可设置自己的环境变量；</p><p>安装的软件路径一般需要加入到path中:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">    <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">$APPDIR</span>:/opt/app/soft/bin:<span class="token environment constant">$PATH</span>:/usr/local/bin:<span class="token variable">$TUXDIR</span>/bin:<span class="token variable">$ORACLE_HOME</span>/bin<span class="token punctuation">;</span><span class="token builtin class-name">export</span> <span class="token environment constant">PATH</span></span>
<span class="line"></span></code></pre></div><h2 id="bash快捷输入或删除" tabindex="-1"><a class="header-anchor" href="#bash快捷输入或删除"><span>Bash快捷输入或删除</span></a></h2><p>快捷键:</p><pre><code>Ctl-U   删除光标到行首的所有字符,在某些设置下,删除全行
Ctl-W   删除当前光标到前边的最近一个空格之间的字符
Ctl-H   backspace,删除光标前边的字符
Ctl-R   匹配最相近的一个文件，然后输出
</code></pre><h2 id="综合应用" tabindex="-1"><a class="header-anchor" href="#综合应用"><span>综合应用</span></a></h2><p>查找record.log中包含AAA，但不包含BBB的记录的总数:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">    <span class="token function">cat</span> <span class="token parameter variable">-v</span> record.log <span class="token operator">|</span> <span class="token function">grep</span> AAA <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> BBB <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span></span>
<span class="line"></span></code></pre></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>文件管理，目录的创建、删除、查询、管理: mkdir rm mv</p><p>文件的查询和检索: <code>find locate</code></p><p>查看文件内容：<code>cat vi tail more</code></p><p>管道和重定向:<code>; \\| &amp;&amp; \\&gt;</code></p>`,87)]))}const o=s(l,[["render",t]]),r=JSON.parse('{"path":"/linux-tutor/base/02_file_manage.html","title":"文件及目录管理","lang":"zh-CN","frontmatter":{"order":2,"description":"文件及目录管理 文件管理不外乎文件或目录的创建、删除、查询、移动，有mkdir/rm/mv 文件查询是重点，用find来进行查询；find的参数丰富，也非常强大； 查看文件内容是个大的话题，文本的处理有太多的工具供我们使用，在本章中只是点到即止，后面会有专门的一章来介绍文本的处理工具； 有时候，需要给文件创建一个别名，我们需要用到ln，使用这个别名和使...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/linux-tutor/base/02_file_manage.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"文件及目录管理"}],["meta",{"property":"og:description","content":"文件及目录管理 文件管理不外乎文件或目录的创建、删除、查询、移动，有mkdir/rm/mv 文件查询是重点，用find来进行查询；find的参数丰富，也非常强大； 查看文件内容是个大的话题，文本的处理有太多的工具供我们使用，在本章中只是点到即止，后面会有专门的一章来介绍文本的处理工具； 有时候，需要给文件创建一个别名，我们需要用到ln，使用这个别名和使..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-05-26T17:48:57.000Z"}],["meta",{"property":"article:modified_time","content":"2022-05-26T17:48:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"文件及目录管理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-05-26T17:48:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"创建和删除","slug":"创建和删除","link":"#创建和删除","children":[]},{"level":2,"title":"目录切换","slug":"目录切换","link":"#目录切换","children":[]},{"level":2,"title":"列出目录项","slug":"列出目录项","link":"#列出目录项","children":[]},{"level":2,"title":"查找目录及文件 find/locate","slug":"查找目录及文件-find-locate","link":"#查找目录及文件-find-locate","children":[]},{"level":2,"title":"查看文件内容","slug":"查看文件内容","link":"#查看文件内容","children":[]},{"level":2,"title":"查找文件内容","slug":"查找文件内容","link":"#查找文件内容","children":[]},{"level":2,"title":"文件与目录权限修改","slug":"文件与目录权限修改","link":"#文件与目录权限修改","children":[]},{"level":2,"title":"给文件增加别名","slug":"给文件增加别名","link":"#给文件增加别名","children":[]},{"level":2,"title":"管道和重定向","slug":"管道和重定向","link":"#管道和重定向","children":[]},{"level":2,"title":"设置环境变量","slug":"设置环境变量","link":"#设置环境变量","children":[]},{"level":2,"title":"Bash快捷输入或删除","slug":"bash快捷输入或删除","link":"#bash快捷输入或删除","children":[]},{"level":2,"title":"综合应用","slug":"综合应用","link":"#综合应用","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1653565176000,"updatedTime":1653587337000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":2,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":4.16,"words":1247},"filePathRelative":"linux-tutor/base/02_file_manage.md","localizedDate":"2022年5月26日","autoDesc":true}');export{o as comp,r as data};
