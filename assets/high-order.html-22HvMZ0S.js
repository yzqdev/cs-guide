import{_ as s,c as a,a as t,o as p}from"./app-C8DxhDIZ.js";const o={};function e(c,n){return p(),a("div",null,n[0]||(n[0]=[t(`<h1 id="高阶函数" tabindex="-1"><a class="header-anchor" href="#高阶函数"><span>高阶函数</span></a></h1><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">fun</span> <span class="token function">calculate</span><span class="token punctuation">(</span>x<span class="token operator">:</span> Int<span class="token punctuation">,</span> y<span class="token operator">:</span> Int<span class="token punctuation">,</span> operation<span class="token operator">:</span> <span class="token punctuation">(</span>Int<span class="token punctuation">,</span> Int<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Int<span class="token punctuation">)</span><span class="token operator">:</span> Int <span class="token punctuation">{</span>  <span class="token comment">// 1</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token function">operation</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>                                          <span class="token comment">// 2</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">sum</span><span class="token punctuation">(</span>x<span class="token operator">:</span> Int<span class="token punctuation">,</span> y<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token operator">=</span> x <span class="token operator">+</span> y                                     <span class="token comment">// 3</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> sumResult <span class="token operator">=</span> <span class="token function">calculate</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token operator">::</span>sum<span class="token punctuation">)</span>                          <span class="token comment">// 4</span></span>
<span class="line">    <span class="token keyword">val</span> mulResult <span class="token operator">=</span> <span class="token function">calculate</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> a<span class="token punctuation">,</span> b <span class="token operator">-&gt;</span> a <span class="token operator">*</span> b <span class="token punctuation">}</span>               <span class="token comment">// 5</span></span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;sumResult </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">sumResult</span></span><span class="token string">, mulResult </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">mulResult</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">fun</span> <span class="token function">operation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">(</span>Int<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Int <span class="token punctuation">{</span>                                     <span class="token comment">// 1</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token operator">::</span>square</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">square</span><span class="token punctuation">(</span>x<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token operator">=</span> x <span class="token operator">*</span> x                                          <span class="token comment">// 2</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> func <span class="token operator">=</span> <span class="token function">operation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                          <span class="token comment">// 3</span></span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                                                <span class="token comment">// 4</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div>`,3)]))}const i=s(o,[["render",e]]),u=JSON.parse('{"path":"/kotlin-tutor/high-order.html","title":"高阶函数","lang":"zh-CN","frontmatter":{"description":"高阶函数","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/kotlin-tutor/high-order.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"高阶函数"}],["meta",{"property":"og:description","content":"高阶函数"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-25T05:00:38.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-25T05:00:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"高阶函数\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-25T05:00:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[],"git":{"createdTime":1684738995000,"updatedTime":1687669238000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":2,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":0.3,"words":89},"filePathRelative":"kotlin-tutor/high-order.md","localizedDate":"2023年5月22日","autoDesc":true}');export{i as comp,u as data};
