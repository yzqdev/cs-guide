import{_ as s,c as n,a as t,o as p}from"./app-C8DxhDIZ.js";const e="/cs-guide/assets/65c2b81c80c673d8f1daae723eab392f-D-gFlhIF.webp",l="/cs-guide/assets/ef77f4df3338237d3340a9cc6c69e30a-ChQA2DtP.webp",c="/cs-guide/assets/3af47f75d826de2b8e63dc04e384f9ed-DmWKrKTz.webp",o="/cs-guide/assets/1802a7177fd35794b16ab9db59565435-C7wr8HTH.webp",i="/cs-guide/assets/e5888f002da7e387e747cac42dd8c8dd-D_Naxfza.webp",r="/cs-guide/assets/a70c6c8ef18115fae5a09e55d1c63eaa-D1K8MeFO.webp",d="/cs-guide/assets/765a0ee3f9ca4bf2efbe7abcc7ea4045-vNJJbPV-.webp",u="/cs-guide/assets/1532b880efa1973a21fb09f105a3f13f-AkbIZ0E0.webp",k="/cs-guide/assets/89081a6abcdc613bbeae1b1d8dc60138-3LLP_sau.webp",g="/cs-guide/assets/2db37487b3beb6ab3d6d20b3fc4d3ce2-es2q1RP0.webp",b="/cs-guide/assets/e9b7b091bb240c4836b8b7404c4fe8d3-rO95ej-R.webp",m="/cs-guide/assets/ef5c1ce47b97a4582b19d5e2be8b437c-D0U74DwZ.webp",h="/cs-guide/assets/b928bbb2f44ba03290b3112997b91881-DGIw4Im3.webp",f="/cs-guide/assets/994d90f1ba44ab3c1419de4bf9c63737-DKCr2Q2a.webp",v="/cs-guide/assets/3288360c3aa4f4987b5a1dfc7e34fe62-Ck8XExkG.webp",_="/cs-guide/assets/7229a475473e294b82ee447e0b6fb2e5-BEhi8uqV.webp",x="/cs-guide/assets/b10c4ec323cdbf62a29a1256c6973642-C7SqH4cI.webp",q={};function j(y,a){return p(),n("div",null,a[0]||(a[0]=[t(`<h1 id="dart数据类型" tabindex="-1"><a class="header-anchor" href="#dart数据类型"><span>dart数据类型</span></a></h1><h2 id="声明变量类型" tabindex="-1"><a class="header-anchor" href="#声明变量类型"><span>声明变量类型</span></a></h2><p>变量声明总结</p><ul><li>var: 如果没有初始值，可以变成任何类型</li><li>dynamic:动态任意类型，编译阶段不检查类型</li><li>Object 动态任意类型，编译阶段检查类型 区别：<br> 唯一区别 var 如果有初始值，类型被是锁定</li></ul><blockquote><p>注意:final 可以不用先赋值，const 声明时必须赋值，不然会报错，</p></blockquote><h2 id="变量类型" tabindex="-1"><a class="header-anchor" href="#变量类型"><span>变量类型</span></a></h2><p>来自<a href="https://juejin.cn/post/6844903683147169800" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/6844903683147169800</a>,作者:cekiasoo</p><h3 id="一、dart-有哪些数据类型" tabindex="-1"><a class="header-anchor" href="#一、dart-有哪些数据类型"><span>一、Dart 有哪些数据类型</span></a></h3><p>Dart 内置的数据类型有描述数字的 int 和 double，字符串的 String 类型，布尔 bool 类型，列表 List 类型，具有映射关系的 Map 类型。</p><h3 id="二、数字类型" tabindex="-1"><a class="header-anchor" href="#二、数字类型"><span>二、数字类型</span></a></h3><p>数字类型有 int 和 double 还有 num，</p><h4 id="一-int-类型" tabindex="-1"><a class="header-anchor" href="#一-int-类型"><span>（一）int 类型</span></a></h4><p>int 是 整型，即整数，如 1， 2， 10， 20 等</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">int number <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>或</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">var</span> number <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h4 id="二-double-类型" tabindex="-1"><a class="header-anchor" href="#二-double-类型"><span>（二）double 类型</span></a></h4><p>double 是浮点型，即包含小数的，如 0.1，0.2，10.1， 10.2 等,</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">double number <span class="token operator">=</span> <span class="token number">10.1</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>或</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">var</span> number <span class="token operator">=</span> <span class="token number">10.1</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>double 是包含小数类型的，如果赋予整数会报错</p><p><img src="`+e+'" alt="a1f2feb72ddc6f9a0720bc6282da439f"></p><h4 id="三-num-类型" tabindex="-1"><a class="header-anchor" href="#三-num-类型"><span>（三）num 类型</span></a></h4><p>num 可以是整数或浮点数的类型，毕竟 num 是 int 和 double 的父类，</p><p><img src="'+l+'" alt="745283daa4dd665e29d38d7e1667c739"></p><p><img src="'+c+'" alt="1c6eb7049dfc258dc646ec83e467bb6f"></p><p>再来看一下 num 源码中的注释是怎么说的，嗯，整数或浮点数</p><p><img src="'+o+`" alt="7ffa7afd530547ffc75c1c0feb3980ca"></p><p>num 是可以这样定义的</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">num number <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>或浮点型</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">num number <span class="token operator">=</span> <span class="token number">1.01</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>num 既然可以是整型或浮点型，那么 num 类型的变量赋了整型的数也可以改为浮点型的数，</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">num number <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">num number <span class="token operator">=</span> <span class="token number">1.01</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>这样做是没问题的，</p><p><img src="`+i+'" alt="dcb91e8bcb0b2759e2c21c2ebcb22d47"></p><p>运行也是没问题的</p><p><img src="'+r+`" alt="2862e066fb6d4739ad5c249afd42ccae"></p><h3 id="三、字符串类型" tabindex="-1"><a class="header-anchor" href="#三、字符串类型"><span>三、字符串类型</span></a></h3><p>字符串类型在 Dart 中是用 String 表示，数据用单引号或双引号扩起来，</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;xiaoming&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>或</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;xiaoming&quot;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>也可以用 var</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;xiaoming&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>字符串还有一种是多行字符串用 &#39;&#39;&#39;（三个单引号） 或 &quot;&quot;&quot;（三个双引号） 括起来，可以多行而不报错，</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">  <span class="token class-name">String</span> description <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;&#39;&#39;</span>
<span class="line">  这</span>
<span class="line">  是</span>
<span class="line">  描述&#39;&#39;&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>或</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">  <span class="token class-name">String</span> description <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;&quot;&quot;</span>
<span class="line">  这</span>
<span class="line">  是</span>
<span class="line">  描述&quot;&quot;&quot;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>输出到控制台也是多行的，</p><p><img src="`+d+`" alt="45205c463249afb1799c6a6bc40a7824"></p><p>字符串类型还可以用 $ 和其他类型拼接，</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">  int a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;a = </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">a</span></span><span class="token string">&quot;</span></span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">print</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p><img src="`+u+`" alt="0af1701b010cd4bba776eed43eeb0375"></p><h3 id="四、布尔类型" tabindex="-1"><a class="header-anchor" href="#四、布尔类型"><span>四、布尔类型</span></a></h3><p>布尔类型比较简单，它的值只有 true 或 false，在 Dart 中用 bool 表示，</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">bool error <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>或</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">bool error <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h3 id="五、列表类型" tabindex="-1"><a class="header-anchor" href="#五、列表类型"><span>五、列表类型</span></a></h3><p>列表简单来说就是存放着排成一列的数据，可以理解为一个存放数据的容器，列表中的每个数据称为元素，在 Dart 中用 List 表示，数据用 &quot;[]&quot; 括起来，元素之间用 &quot;,&quot; 隔开，如果不指定 List 中存放的数据类型的话是可以存放任意类型的数据的，</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token class-name">List</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;a&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;b&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;c&#39;</span></span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>列表可以直接用 print 输出到控制台，</p><p><img src="`+k+'" alt="cbd6356d3f094ab0da88752313025011"></p><p><img src="'+g+`" alt="359f9740977eda4883ad4fe919fa949b"></p><p>如果想要获取列表中的某个元素，可以用 列表名[元素在列表中的位置] 获取，列表元素的第一个位置是从 0 开始的，所以想要获取第一个位置的元素就是</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token class-name">List</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;a&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;b&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;c&#39;</span></span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> element <span class="token operator">=</span> list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>获取元素时，位置不能大于列表存放元素的个数 - 1，也不能小于 0，即位置的取值范围是 [0, 元素的个数 - 1]，全闭区间，超过列表存放元素的个数 - 1 或小于 0 是会报错的，比如列表存放着 3 个数据，取的时候用 list[5] ，5 比 3-1 大，会报错，</p><p><img src="`+b+'" alt="7a71d2a363e6c29d8e65df420a5753bc"></p><p><img src="'+m+`" alt="cf0511a94dd212cb579ffb06aad17887"></p><p>列表的元素个数可以用 列表名.length 获取</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">int length <span class="token operator">=</span> list<span class="token punctuation">.</span>length<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>如果只想存一种数据类型的数据，那要借助泛型，</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list3 <span class="token operator">=</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;a&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;b&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;c&#39;</span></span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>添加别的元素就会报错，</p><p><img src="`+h+`" alt="0421db5859f53fdd2d180a4842770855"></p><h3 id="六、map-类型" tabindex="-1"><a class="header-anchor" href="#六、map-类型"><span>六、Map 类型</span></a></h3><p>Map 就是存放具有键值对关系的数据的容器，在 Dart 中就是用 Map 表示，键是唯一的，值可以不相同，比如人的身份证，身份证号是唯一的，名字可以相同，如果两个人的身份证号相同那就乱了，Map 的数据是用 &quot;{}&quot; 括起来，里面的数据用 &quot;键 : 值&quot;, 数据之间用 &quot;,&quot; 隔开，如果没指定数据类型，键值的数据类型可以是任意的，</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token class-name">Map</span> map <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string-literal"><span class="token string">&#39;Apple&#39;</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;苹果&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;Banana&#39;</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;香蕉&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;Peach&#39;</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;桃子&#39;</span></span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;1&#39;</span></span><span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>Map 也是可以直接用 print 输出的，</p><p><img src="`+f+'" alt="5adb502debb33aab4c11726ed02c4b04"></p><p><img src="'+v+`" alt="e5acf16657739ba0ab031837a2c2841b"></p><p>想获取某个键的值就用 &quot;Map的名[&#39;键的名&#39;]&quot;</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token class-name">Map</span> map <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string-literal"><span class="token string">&#39;Apple&#39;</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;苹果&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;Banana&#39;</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;香蕉&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;Peach&#39;</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;桃子&#39;</span></span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">String</span> value <span class="token operator">=</span> map<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;Apple&#39;</span></span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p><img src="`+_+`" alt="979db7ea64ddc382c9d439125d2abfcf"></p><p>Map 的键和值的数据类型也可以是指定的，</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span>int<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token generics"><span class="token punctuation">&lt;</span>int<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token number">1</span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;a&#39;</span></span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;b&#39;</span></span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;c&#39;</span></span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>存放其他的类型是会报错的，</p><div class="language-dart" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span>int<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map2 <span class="token operator">=</span> <span class="token generics"><span class="token punctuation">&lt;</span>int<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token number">1</span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;a&#39;</span></span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;b&#39;</span></span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;c&#39;</span></span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;d&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;5&#39;</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;e&#39;</span></span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p><img src="`+x+'" alt="313f44614c2f9e39bc351b0d7b9fc3d8"></p>',91)]))}const D=s(q,[["render",j]]),S=JSON.parse('{"path":"/flutter-tutor/dart/dart-datatype.html","title":"dart数据类型","lang":"zh-CN","frontmatter":{"order":3,"description":"dart数据类型 声明变量类型 变量声明总结 var: 如果没有初始值，可以变成任何类型 dynamic:动态任意类型，编译阶段不检查类型 Object 动态任意类型，编译阶段检查类型 区别： 唯一区别 var 如果有初始值，类型被是锁定 注意:final 可以不用先赋值，const 声明时必须赋值，不然会报错， 变量类型 来自https://juej...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/flutter-tutor/dart/dart-datatype.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"dart数据类型"}],["meta",{"property":"og:description","content":"dart数据类型 声明变量类型 变量声明总结 var: 如果没有初始值，可以变成任何类型 dynamic:动态任意类型，编译阶段不检查类型 Object 动态任意类型，编译阶段检查类型 区别： 唯一区别 var 如果有初始值，类型被是锁定 注意:final 可以不用先赋值，const 声明时必须赋值，不然会报错， 变量类型 来自https://juej..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-25T05:00:38.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-25T05:00:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"dart数据类型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-25T05:00:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"声明变量类型","slug":"声明变量类型","link":"#声明变量类型","children":[]},{"level":2,"title":"变量类型","slug":"变量类型","link":"#变量类型","children":[{"level":3,"title":"一、Dart 有哪些数据类型","slug":"一、dart-有哪些数据类型","link":"#一、dart-有哪些数据类型","children":[]},{"level":3,"title":"二、数字类型","slug":"二、数字类型","link":"#二、数字类型","children":[{"level":4,"title":"（一）int 类型","slug":"一-int-类型","link":"#一-int-类型","children":[]},{"level":4,"title":"（二）double 类型","slug":"二-double-类型","link":"#二-double-类型","children":[]},{"level":4,"title":"（三）num 类型","slug":"三-num-类型","link":"#三-num-类型","children":[]}]},{"level":3,"title":"三、字符串类型","slug":"三、字符串类型","link":"#三、字符串类型","children":[]},{"level":3,"title":"四、布尔类型","slug":"四、布尔类型","link":"#四、布尔类型","children":[]},{"level":3,"title":"五、列表类型","slug":"五、列表类型","link":"#五、列表类型","children":[]},{"level":3,"title":"六、Map 类型","slug":"六、map-类型","link":"#六、map-类型","children":[]}]}],"git":{"createdTime":1684738995000,"updatedTime":1687669238000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":2,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":3.99,"words":1198},"filePathRelative":"flutter-tutor/dart/dart-datatype.md","localizedDate":"2023年5月22日","autoDesc":true}');export{D as comp,S as data};
