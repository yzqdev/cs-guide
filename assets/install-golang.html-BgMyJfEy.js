import{_ as s,c as n,a as e,o as t}from"./app-C8DxhDIZ.js";const o="/cs-guide/assets/use-goland-CqdxzIBl.png",l={};function p(i,a){return t(),n("div",null,a[0]||(a[0]=[e(`<h1 id="golang配置" tabindex="-1"><a class="header-anchor" href="#golang配置"><span>golang配置</span></a></h1><p>不配置gopath的话,gopath默认为 ~/go 这个文件夹</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go <span class="token function">env</span> <span class="token parameter variable">-w</span> <span class="token assign-left variable">GO111MODULE</span><span class="token operator">=</span>on</span>
<span class="line">go <span class="token function">env</span> <span class="token parameter variable">-w</span> <span class="token assign-left variable">GOPROXY</span><span class="token operator">=</span>https://goproxy.cn,direct</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 建议不要把gopath设置为go安装文件夹内</span></span>
<span class="line">go <span class="token function">env</span> <span class="token parameter variable">-w</span> <span class="token assign-left variable">GOPATH</span><span class="token operator">=</span>d:<span class="token punctuation">\\</span>golangmod</span>
<span class="line"></span></code></pre></div><p>windows最后golang的全局配置会被保存在 <code>~\\AppData\\Roaming\\go</code>这个位置 GO环境变量配置：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token variable">$GOROOT</span><span class="token operator">=</span>/usr/local/go                        GO安装目录</span>
<span class="line"><span class="token variable">$GOPATH</span><span class="token operator">=</span>/usr/local/var/www/go          GO工作目录</span>
<span class="line"><span class="token variable">$GOBIN</span><span class="token operator">=</span><span class="token variable">$GOPATH</span>/bin                          GO可执行文件目录</span>
<span class="line"><span class="token environment constant">$PATH</span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$GOBIN</span><span class="token builtin class-name">:</span><span class="token variable">$GOROOT</span>/bin  将GO可执行文件加入<span class="token environment constant">PATH</span>中，使GO指令与我们编写的GO应用可以全局调用</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>​</p><h2 id="安装air" tabindex="-1"><a class="header-anchor" href="#安装air"><span>安装air</span></a></h2><p>打开网站<a href="https://github.com/cosmtrek/air/releases" target="_blank" rel="noopener noreferrer">https://github.com/cosmtrek/air/releases</a> 下载i适合自己运行文件，然后放到 gopath下的bin文件夹(windows和linux默认在用户文件夹下的go文件夹)</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go <span class="token function">install</span> github.com/cosmtrek/air@latest</span>
<span class="line"></span></code></pre></div><h2 id="安装-gf-cli" tabindex="-1"><a class="header-anchor" href="#安装-gf-cli"><span>安装 gf-cli</span></a></h2><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">wget</span> https://goframe.org/cli/linux_amd64/gf <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x gf <span class="token operator">&amp;&amp;</span> ./gf <span class="token function">install</span></span>
<span class="line"></span></code></pre></div><h2 id="快速记忆golang日期格式化" tabindex="-1"><a class="header-anchor" href="#快速记忆golang日期格式化"><span>快速记忆golang日期格式化</span></a></h2><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token number">2006</span>-01-02 <span class="token number">15</span>:04:05</span>
<span class="line"></span></code></pre></div><p>仔细观察这个日期，06年，1月2日下午3点4分5秒，查阅相关资料还有 -7时区，Monday，数字1~7都有了，而且都不重复。</p><h2 id="添加swaggerui" tabindex="-1"><a class="header-anchor" href="#添加swaggerui"><span>添加swaggerui</span></a></h2><blockquote><p>在go-swagger的github下载</p></blockquote><p>地址：<a href="https://github.com/go-swagger/go-swagger/releases" target="_blank" rel="noopener noreferrer">https://github.com/go-swagger/go-swagger/releases</a></p><blockquote><p>自行编译</p></blockquote><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go get https://github.com/go-swagger/go-swagger</span>
<span class="line"><span class="token comment"># 然后进入您的gopath目录找到go-swagger 目录进入</span></span>
<span class="line"><span class="token comment"># 执行</span></span>
<span class="line">go <span class="token function">install</span> ./cmd/swagger</span>
<span class="line"><span class="token comment"># 然后就会在go的bin目录或者其gopath的bin目录生成一个swag的可执行文件</span></span>
<span class="line"><span class="token comment"># 在项目目录执行</span></span>
<span class="line">swag init</span>
<span class="line"><span class="token comment"># 就可以生成swaggerui的doc了</span></span>
<span class="line"></span></code></pre></div><h2 id="使用goland" tabindex="-1"><a class="header-anchor" href="#使用goland"><span>使用goland</span></a></h2><p>配置编译go build <img src="`+o+'" alt="go"></p>',21)]))}const g=s(l,[["render",p]]),c=JSON.parse('{"path":"/go-tutor/basics/install-golang.html","title":"golang配置","lang":"zh-CN","frontmatter":{"description":"golang配置 不配置gopath的话,gopath默认为 ~/go 这个文件夹 windows最后golang的全局配置会被保存在 ~\\\\AppData\\\\Roaming\\\\go这个位置 GO环境变量配置： ​ 安装air 打开网站https://github.com/cosmtrek/air/releases 下载i适合自己运行文件，然后放到 gopa...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/go-tutor/basics/install-golang.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"golang配置"}],["meta",{"property":"og:description","content":"golang配置 不配置gopath的话,gopath默认为 ~/go 这个文件夹 windows最后golang的全局配置会被保存在 ~\\\\AppData\\\\Roaming\\\\go这个位置 GO环境变量配置： ​ 安装air 打开网站https://github.com/cosmtrek/air/releases 下载i适合自己运行文件，然后放到 gopa..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-07-29T07:25:09.000Z"}],["meta",{"property":"article:modified_time","content":"2022-07-29T07:25:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"golang配置\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-07-29T07:25:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"安装air","slug":"安装air","link":"#安装air","children":[]},{"level":2,"title":"安装 gf-cli","slug":"安装-gf-cli","link":"#安装-gf-cli","children":[]},{"level":2,"title":"快速记忆golang日期格式化","slug":"快速记忆golang日期格式化","link":"#快速记忆golang日期格式化","children":[]},{"level":2,"title":"添加swaggerui","slug":"添加swaggerui","link":"#添加swaggerui","children":[]},{"level":2,"title":"使用goland","slug":"使用goland","link":"#使用goland","children":[]}],"git":{"createdTime":1647861419000,"updatedTime":1659079509000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":8,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":1.28,"words":384},"filePathRelative":"go-tutor/basics/install-golang.md","localizedDate":"2022年3月21日","autoDesc":true}');export{g as comp,c as data};
