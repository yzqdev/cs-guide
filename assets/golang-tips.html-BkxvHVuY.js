import{_ as r,c as o,a as t,o as a}from"./app-C8DxhDIZ.js";const l={};function n(i,e){return a(),o("div",null,e[0]||(e[0]=[t(`<h1 id="golang常用技巧" tabindex="-1"><a class="header-anchor" href="#golang常用技巧"><span>golang常用技巧</span></a></h1><h2 id="gomodule速查表" tabindex="-1"><a class="header-anchor" href="#gomodule速查表"><span>gomodule速查表</span></a></h2><p><a href="https://encore.dev/guide/go.mod" target="_blank" rel="noopener noreferrer">https://encore.dev/guide/go.mod</a></p><h2 id="我找到的" tabindex="-1"><a class="header-anchor" href="#我找到的"><span>我找到的</span></a></h2><p><a href="https://github.com/filebrowser/filebrowser.git" target="_blank" rel="noopener noreferrer">https://github.com/filebrowser/filebrowser.git</a></p><h2 id="好用的库" tabindex="-1"><a class="header-anchor" href="#好用的库"><span>好用的库</span></a></h2><ul><li>读取配置文件 ： <a href="https://github.com/spf13/viper" target="_blank" rel="noopener noreferrer">https://github.com/spf13/viper</a></li><li>命令行颜色显示： <a href="https://github.com/gookit/color" target="_blank" rel="noopener noreferrer">color</a></li><li>工具库： <a href="https://github.com/gookit/goutil" target="_blank" rel="noopener noreferrer">https://github.com/gookit/goutil</a></li><li>操作数据库： <a href="https://gorm.io/gorm" target="_blank" rel="noopener noreferrer">gorm</a></li></ul><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go get <span class="token parameter variable">-u</span> gorm.io/gorm</span>
<span class="line"></span></code></pre></div><h2 id="添加swagger" tabindex="-1"><a class="header-anchor" href="#添加swagger"><span>添加swagger</span></a></h2><ol><li>将注释添加到API源代码中，请参阅声明性注释格式。</li><li>使用如下命令下载swag：</li></ol><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">go get -u github.com/swaggo/swag/cmd/swag</span>
<span class="line"></span></code></pre></div><p>从源码开始构建的话，需要有Go环境（1.9及以上版本）。</p><p>或者从github的release页面下载预编译好的二进制文件。</p><ol><li>在包含<code>main.go</code>文件的项目根目录运行<code>swag init</code>。这将会解析注释并生成需要的文件（<code>docs</code>文件夹和<code>docs/docs.go</code>）。</li></ol><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">swag init</span>
<span class="line"></span></code></pre></div><p>确保导入了生成的<code>docs/docs.go</code>文件，这样特定的配置文件才会被初始化。如果通用API指数没有写在<code>main.go</code>中，可以使用<code>-g</code>标识符来告知swag。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">swag init <span class="token parameter variable">-g</span> http/api.go</span>
<span class="line"></span></code></pre></div><h2 id="后端框架" tabindex="-1"><a class="header-anchor" href="#后端框架"><span>后端框架</span></a></h2><p>gin <code>go get -u github.com/gin-gonic/gin</code></p><p>goframe <code>go get -u -v github.com/gogf/gf</code></p><p>iris</p><p>echo</p><p>Revel</p><p>Beego</p><p>orangeg框架 <a href="http://zhucheer.gitee.io/orange_doc/" target="_blank" rel="noopener noreferrer">http://zhucheer.gitee.io/orange_doc/</a></p><h2 id="音频和音乐" tabindex="-1"><a class="header-anchor" href="#音频和音乐"><span>音频和音乐</span></a></h2><p>用于操作音频的库_</p><ul><li><a href="https://github.com/eaburns/flac" target="_blank" rel="noopener noreferrer">flac</a> - 原生 Go FLAC 解码器</li><li><a href="https://github.com/mewkiz/flac" target="_blank" rel="noopener noreferrer">flac</a> - 原生 Go FLAC 解码器</li><li><a href="https://github.com/Comcast/gaad" target="_blank" rel="noopener noreferrer">gaad</a> - 原生 Go AAC 比特流解析器</li><li><a href="https://github.com/krig/Go-sox" target="_blank" rel="noopener noreferrer">Go-sox</a> - libsox 的 Go 语言接口</li><li><a href="https://github.com/zhulik/Go_mediainfo" target="_blank" rel="noopener noreferrer">Go_mediainfo</a> - libmediainfo 的 Go 语言接口</li><li><a href="https://github.com/dh1tw/Gosamplerate" target="_blank" rel="noopener noreferrer">Gosamplerate</a> - libsamplerate 的 Go 语言接口</li><li><a href="https://github.com/bogem/id3v2" target="_blank" rel="noopener noreferrer">id3v2</a> - 快速且稳定的 ID3 解析及写入库</li><li><a href="https://github.com/Go-mix/mix" target="_blank" rel="noopener noreferrer">mix</a> - 基于序列的 Go 语言混音器，可用于音乐 app。</li><li><a href="https://github.com/tcolgate/mp3" target="_blank" rel="noopener noreferrer">mp3</a> - 原生 Go MP3 解码器</li><li><a href="https://github.com/Go-music-theory/music-theory" target="_blank" rel="noopener noreferrer">music-theory</a> - Go 语言编写的音乐理论模型</li><li><a href="https://github.com/Gordonklaus/portaudio" target="_blank" rel="noopener noreferrer">PortAudio</a> - 音频 I/O 库的 Go 语言接口</li><li><a href="https://github.com/rakyll/portmidi" target="_blank" rel="noopener noreferrer">portmidi</a> - PortMidi 的 Go 语言接口</li><li><a href="https://github.com/wtolson/Go-taglib" target="_blank" rel="noopener noreferrer">taglib</a> - taglib 的 Go 语言接口</li><li><a href="https://github.com/mccoyst/vorbis" target="_blank" rel="noopener noreferrer">vorbis</a> - &quot;原生&quot; Go Vorbis 解码器 (使用 CGo, 但是没有其他依赖).</li><li><a href="https://github.com/mdlayher/waveform" target="_blank" rel="noopener noreferrer">waveform</a> - 一个可以通过音频流生成波形图像的包</li></ul><h2 id="认证和授权" tabindex="-1"><a class="header-anchor" href="#认证和授权"><span>认证和授权</span></a></h2><p>用来生成认证授权模板的库_</p><ul><li><a href="https://github.com/volatiletech/authboss" target="_blank" rel="noopener noreferrer">authboss</a> - 用于 web 开发的组件化认证授权系统。它尝试尽可能的移除模板代码以及硬编码，这使你每次新建 web 项目的时候，可以做到即插即用、配置并开始开发你的 web 英语，而不必每次都重新创建一个认证授权系统。</li><li><a href="https://github.com/hsluoyz/casbin" target="_blank" rel="noopener noreferrer">casbin</a> - 一个支持接入控制模型（例如:ACL,RBAC,ABAC）的授权库</li><li><a href="https://github.com/smartystreets/Go-aws-auth" target="_blank" rel="noopener noreferrer">Go-AWS-Auth</a> - AWS 请求签名库</li><li><a href="https://github.com/square/Go-jose" target="_blank" rel="noopener noreferrer">Go-jose</a> - Fairly complete implementation of the JOSE working group&#39;s JSON Web Token, JSON Web 签名以及JSON Web 加密 specs.</li><li><a href="https://github.com/RichardKnop/Go-oauth2-server" target="_blank" rel="noopener noreferrer">Go-oauth2-server</a> - 使用 Go 语言编写的独立、符合标准的 OAuth2 服务器</li><li><a href="https://github.com/bradrydzewski/Go.auth" target="_blank" rel="noopener noreferrer">Go.auth</a> - 为 Go 语言 web 应用提供的授权 API.</li><li><a href="https://github.com/dghubble/Gologin" target="_blank" rel="noopener noreferrer">Gologin</a> - 可以串连使用OAuth1 和 OAuth2 认证服务</li><li><a href="https://github.com/mikespook/Gorbac" target="_blank" rel="noopener noreferrer">Gorbac</a> - 一个用 Go 语言实现的轻量级RBAC</li><li><a href="https://github.com/markbates/Goth" target="_blank" rel="noopener noreferrer">Goth</a> - 提供了一种简洁的、惯用的方式来使用OAuth 和 OAuth2.</li><li><a href="https://github.com/Goji/httpauth" target="_blank" rel="noopener noreferrer">httpauth</a> - HTTP 认证中间件</li><li><a href="https://github.com/robbert229/jwt" target="_blank" rel="noopener noreferrer">jwt</a> - 简单易用的一个JSON Web Tokens (JWT)的实现</li><li><a href="https://github.com/adam-hanna/jwt-auth" target="_blank" rel="noopener noreferrer">jwt-auth</a> - JWT 为 Go 语言 HTTP 服务器编写的 jwt 中间件，有多种配置选项</li><li><a href="https://github.com/golang-jwt/jwt" target="_blank" rel="noopener noreferrer">jwt-Go</a> - Go 语言实现的JSON Web Tokens (JWT).</li><li><a href="https://github.com/tarent/loginsrv" target="_blank" rel="noopener noreferrer">loginsrv</a> - JWT 登录微服务，可以继承OAuth2 (Github), htpasswd, osiam等后端。</li><li><a href="https://github.com/Golang/oauth2" target="_blank" rel="noopener noreferrer">oauth2</a> - Goauth2的继承者。 通用 OAuth 2.0 库，集成了对JWT, Google APIs, Compute Engine 和 App Engine的支持.</li><li><a href="https://github.com/RangelReale/osin" target="_blank" rel="noopener noreferrer">osin</a> - Go 语言 OAuth2 服务器库</li><li><a href="https://github.com/xyproto/permissions2" target="_blank" rel="noopener noreferrer">permissions2</a> - 用于追踪用户，登录状态和许可的库。使用安全 cookies 和 bcrypt.</li><li><a href="https://github.com/icza/session" target="_blank" rel="noopener noreferrer">session</a> - Go 语言会话管理(支持 Google App Engine - GAE)</li><li><a href="https://github.com/adam-hanna/sessions" target="_blank" rel="noopener noreferrer">sessions</a> - 为 Go 语言 HTTP 服务器开发的非常简单的、高性能的、高可定制的会话服务</li><li><a href="https://github.com/containous/traefik" target="_blank" rel="noopener noreferrer">traefik</a> - 反向代理和负载均衡库，支持多种后端</li><li><a href="https://github.com/GeertJohan/yubiGo" target="_blank" rel="noopener noreferrer">yubiGo</a> - Yubikey 客户端，提供了用于在 Go 语言应用中集成Yubico Yubikey 的 API</li></ul><h2 id="命令行" tabindex="-1"><a class="header-anchor" href="#命令行"><span>命令行</span></a></h2><h3 id="标准命令行交互" tabindex="-1"><a class="header-anchor" href="#标准命令行交互"><span>标准命令行交互</span></a></h3><p>用于构建标准或基础命令行应用的库_</p><ul><li><a href="https://github.com/cosiner/argv" target="_blank" rel="noopener noreferrer">argv</a> - 用于分隔命令行字符串并将其作为参数的 Go 语言库，使用 bash 的语法</li><li><a href="https://github.com/mkideal/cli" target="_blank" rel="noopener noreferrer">cli</a> - 功能强大，使用简单的命令行软件包，基于Golang tag</li><li><a href="https://github.com/tcnksm/gcli" target="_blank" rel="noopener noreferrer">cli-init</a> - 提供一种简单、易上手的方式 来使用 Go 语言编写命令行程序</li><li><a href="http://github.com/tucnak/climax" target="_blank" rel="noopener noreferrer">climax</a> - 一个更为人性化的命令行工具，继承了 Go command 的精神</li><li><a href="https://github.com/spf13/cobra" target="_blank" rel="noopener noreferrer">cobra</a> - 用于现代 Go 语言命令行交互的工具</li><li><a href="https://github.com/posener/complete" target="_blank" rel="noopener noreferrer">complete</a> - 使用 Go 语言编写的 bash 命令补全工具以及 Go 命令补全工具</li><li><a href="https://github.com/docopt/docopt.Go" target="_blank" rel="noopener noreferrer">docopt.Go</a> - 能令你会心一笑的命令行参数解析器</li><li><a href="https://github.com/odeke-em/drive" target="_blank" rel="noopener noreferrer">drive</a> - 命令行的 Google Drive 客户端</li><li><a href="https://github.com/cosiner/flag" target="_blank" rel="noopener noreferrer">flag</a> - 简单、强大的命令行选项解析库，支持 Go 语言子命令</li><li><a href="https://github.com/alexflint/Go-arg" target="_blank" rel="noopener noreferrer">Go-arg</a> - 使用 Go 语言编写的基于结构的命令行参数解析库</li><li><a href="https://github.com/jessevdk/Go-flags" target="_blank" rel="noopener noreferrer">Go-flags</a> - Go 语言命令行选项解析器</li><li><a href="https://github.com/alecthomas/kingpin" target="_blank" rel="noopener noreferrer">kingpin</a> - 命令行及标记解析器，支持子命令</li><li><a href="https://github.com/peterh/liner" target="_blank" rel="noopener noreferrer">liner</a> - 命令行文本编辑器</li><li><a href="https://github.com/mitchellh/cli" target="_blank" rel="noopener noreferrer">mitchellh/cli</a> - 用于实现命令行交互的 Go 语言库</li><li><a href="https://github.com/jawher/mow.cli" target="_blank" rel="noopener noreferrer">mow.cli</a> - 用于构建命令行程序的库，支持更加精准的标记及选项解析和验证</li><li><a href="https://github.com/spf13/pflag" target="_blank" rel="noopener noreferrer">pflag</a> - Go flag 软件包的替代品, 实现了POSIX/GNU-风格的 --flags.</li><li><a href="https://github.com/chzyer/readline" target="_blank" rel="noopener noreferrer">readline</a> - 纯 Go 语言实现的 GNU-Readline 支持其大部分功能，基于MIT 协议发布。</li><li><a href="https://github.com/octaGo/sflags" target="_blank" rel="noopener noreferrer">sflags</a> - 基于结构的 flag 生成器，支持flag, urfave/cli, pflag, cobra, kingpin等其他库</li><li><a href="https://github.com/ukautz/clif" target="_blank" rel="noopener noreferrer">ukautz/clif</a> - 一个小型命令行程序开发框架</li><li><a href="https://github.com/urfave/cli" target="_blank" rel="noopener noreferrer">urfave/cli</a> - 简单、快速、有趣的、用于构建 Go 语言命令行程序的软件包(formerly codegangsta/cli).</li><li><a href="https://github.com/dixonwille/wlog" target="_blank" rel="noopener noreferrer">wlog</a> - 简单的登录接口，支持跨平台颜色和并发</li><li><a href="https://github.com/dixonwille/wmenu" target="_blank" rel="noopener noreferrer">wmenu</a> - 为命令行程序提供简单的菜单结构选项，供用户进行选择</li></ul><h3 id="高级控制台界面" tabindex="-1"><a class="header-anchor" href="#高级控制台界面"><span>高级控制台界面</span></a></h3><p>用于构建命令行程序以及控制台界面的库_</p><ul><li><a href="https://github.com/logrusorgru/aurora" target="_blank" rel="noopener noreferrer">aurora</a> - ANSI 终端颜色，支持 fmt.Printf/Sprintf</li><li><a href="https://github.com/ttacon/chalk" target="_blank" rel="noopener noreferrer">chalk</a> - 符合直觉的用于美化命令行输出的库</li><li><a href="http://github.com/gookit/color" target="_blank" rel="noopener noreferrer">color</a> - 多功能的用于彩色化命令行输出的库</li><li><a href="https://github.com/TreyBastian/colourize" target="_blank" rel="noopener noreferrer">colourize</a> - 用于实现 ANSI 彩色文本的 Go 语言库</li><li><a href="https://github.com/workanator/Go-ataman" target="_blank" rel="noopener noreferrer">Go-ataman</a> - 用于渲染 ANSI 彩色文本模板的库</li><li><a href="https://github.com/mattn/Go-colorable" target="_blank" rel="noopener noreferrer">Go-colorable</a> - Windows 上使用的可以输出彩色文本的库</li><li><a href="https://github.com/daviddengcn/Go-colortext" target="_blank" rel="noopener noreferrer">Go-colortext</a> - 用于在终端进行多彩文字输出的库</li><li><a href="https://github.com/mattn/Go-isatty" target="_blank" rel="noopener noreferrer">Go-isatty</a> - Go 语言使用的 isatty</li><li><a href="https://github.com/jroimartin/Gocui" target="_blank" rel="noopener noreferrer">Gocui</a> - 一个用于构建控制台界面的极简的 Go 语言库</li><li><a href="https://github.com/labstack/Gommon/tree/master/color" target="_blank" rel="noopener noreferrer">Gommon/color</a> - 多样的命令行文本</li><li><a href="https://github.com/vbauerster/mpb" target="_blank" rel="noopener noreferrer">mpb</a> - 为命令行提供多个进度条的工具</li><li><a href="https://github.com/nsf/termbox-Go" target="_blank" rel="noopener noreferrer">termbox-Go</a> - Termbox 是一个用于构建跨平台的、与文本的交互界面的库</li><li><a href="https://github.com/apcera/termtables" target="_blank" rel="noopener noreferrer">termtables</a> - Ruby 库的 Go 语言接口</li><li><a href="https://github.com/tj/terminal-table" target="_blank" rel="noopener noreferrer">terminal-tables</a> 用于生成简单的 ASCII 表格，同时支持 markdown 和 HTML 输出</li><li><a href="https://github.com/gizak/termui" target="_blank" rel="noopener noreferrer">termui</a> - Go 终端控制面板，基于 <strong>termbox-Go</strong> 并受到了<a href="https://github.com/yaronn/blessed-contrib" target="_blank" rel="noopener noreferrer">blessed-contrib</a>的启发</li><li><a href="https://github.com/Gosuri/uilive" target="_blank" rel="noopener noreferrer">uilive</a> - 用于实时更新终端输出的库</li><li><a href="https://github.com/Gosuri/uiprogress" target="_blank" rel="noopener noreferrer">uiprogress</a> - 一个很灵活的用于渲染进度条的库</li><li><a href="https://github.com/Gosuri/uitable" target="_blank" rel="noopener noreferrer">uitable</a> - 一个用于改善命令行中表格数据可读性的库</li></ul><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h2><p><em>用于进行配置解析的库</em></p><ul><li><a href="https://github.com/spf13/viper" target="_blank" rel="noopener noreferrer">viper</a> - 长牙的（这个库名叫毒蛇）Go 语言配置工具（推荐使用）</li><li><a href="https://github.com/olebedev/config" target="_blank" rel="noopener noreferrer">config</a> - JSON 或 YAML 配置的封装，支持环境变量和标记解析</li><li><a href="https://github.com/paked/configure" target="_blank" rel="noopener noreferrer">configure</a> - 可以通过多种途径进行配置，包括 JSON, 标记位以及环境变量</li><li><a href="https://github.com/Go-gcfg/gcfg" target="_blank" rel="noopener noreferrer">gcfg</a> - 读取类 INI 类型的配置文件为 Go 语言结构体，支持自定义变量和节</li><li><a href="https://github.com/hjson/hjson-Go" target="_blank" rel="noopener noreferrer">hjson</a> - 人性化的 JSON，一个便于程序员使用和阅读的配置文件格式。更加轻松的语法，更少的错误和更多的注释</li><li><a href="https://github.com/schachmat/inGo" target="_blank" rel="noopener noreferrer">inGo</a> - 将配置标记持久化到一个类似 ini 的文件中</li><li><a href="https://github.com/Go-ini/ini" target="_blank" rel="noopener noreferrer">ini</a> - 用于读写INI 文件的库</li><li><a href="https://github.com/joshbetz/config" target="_blank" rel="noopener noreferrer">joshbetz/config</a> - 消息配置库，可以解析环境变量、JSON 文件并根据SIGHUP自动重新载入</li><li><a href="https://github.com/sasbury/mini" target="_blank" rel="noopener noreferrer">mini</a> -用于解析类 ini 文件的库</li><li><a href="https://github.com/tucnak/store" target="_blank" rel="noopener noreferrer">store</a> - 轻量级配置管理</li><li><a href="https://github.com/OpenPeeDeeP/xdg" target="_blank" rel="noopener noreferrer">xdg</a> -遵守 <a href="https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html" target="_blank" rel="noopener noreferrer">XDG 标准</a> 的配置工具</li></ul><h2 id="持续集成" tabindex="-1"><a class="header-anchor" href="#持续集成"><span>持续集成</span></a></h2><p><em>帮助你进行持续集成的库</em></p><ul><li><a href="https://github.com/drone/drone" target="_blank" rel="noopener noreferrer">drone</a> - Drone 是一个基于 Docker的持续集成平台，使用 Go 语言编写</li><li><a href="https://github.com/mattn/Goveralls" target="_blank" rel="noopener noreferrer">Goveralls</a> - Coveralls.io 是一个持续代码覆盖率检测系统，这个库提供了 Go 语言的支持</li><li><a href="https://github.com/Go-playground/overalls" target="_blank" rel="noopener noreferrer">overalls</a> - 针对多package 的 Go 语言项目，为 Goveralls 这样的工具生成覆盖率报告</li><li><a href="https://github.com/LawrenceWoodman/roveralls" target="_blank" rel="noopener noreferrer">roveralls</a> - 回归覆盖测试工具</li></ul><h2 id="css-预处理器" tabindex="-1"><a class="header-anchor" href="#css-预处理器"><span>CSS 预处理器</span></a></h2><p><em>用于对 CSS 文件预处理的工具</em></p><ul><li><a href="https://github.com/c9s/c6" target="_blank" rel="noopener noreferrer">c6</a> - 高性能、兼容 SAAS 的编译器</li><li><a href="https://github.com/yosssi/gcss" target="_blank" rel="noopener noreferrer">gcss</a> - 纯 Go 语言编写的 CSS 预处理器</li><li><a href="https://github.com/wellington/Go-libsass" target="_blank" rel="noopener noreferrer">Go-libsass</a> - 100%兼容 Sass 的库 libsass 的 Go 语言封装</li></ul><h2 id="数据结构" tabindex="-1"><a class="header-anchor" href="#数据结构"><span>数据结构</span></a></h2><p><em>通用数据结构及算法</em></p><ul><li><a href="https://github.com/zhuangsirui/binpacker" target="_blank" rel="noopener noreferrer">binpacker</a> - 二进制数据封包拆包工具，帮你构建自定义的二进制数据流</li><li><a href="https://github.com/yourbasic/bit" target="_blank" rel="noopener noreferrer">bit</a> - Go 语言集合数据结构。提供了额外的位操作功能</li><li><a href="https://github.com/willf/bitset" target="_blank" rel="noopener noreferrer">bitset</a> - 实现了 bitset 的 Go 语言包.</li><li><a href="https://github.com/zhenjl/bloom" target="_blank" rel="noopener noreferrer">bloom</a> - Go 语言实现的布隆过滤器（bloom filter）</li><li><a href="https://github.com/yourbasic/bloom" target="_blank" rel="noopener noreferrer">bloom</a> - Go 语言实现的布隆过滤器</li><li><a href="https://github.com/tylertreat/BoomFilters" target="_blank" rel="noopener noreferrer">boomfilters</a> - 概率统计数据结构，用于处理大量连续的数据。</li><li><a href="https://github.com/seiflotfy/count-min-log" target="_blank" rel="noopener noreferrer">count-min-log</a> - Go 语言实现的 Count-Min-Log sketch 算法(类似 Count-Min sketch 算法，但是使用的内存更少).</li><li><a href="https://github.com/seiflotfy/cuckoofilter" target="_blank" rel="noopener noreferrer">cuckoofilter</a> - Cuckoo 过滤器：一个用go语言实现的计数布隆过滤器的替代品</li><li><a href="https://github.com/zhenjl/encoding" target="_blank" rel="noopener noreferrer">encoding</a> - 整型压缩库</li><li><a href="https://github.com/plar/Go-adaptive-radix-tree" target="_blank" rel="noopener noreferrer">Go-adaptive-radix-tree</a> - Go 语言实现的自适应基数树</li><li><a href="https://github.com/Workiva/Go-datastructures" target="_blank" rel="noopener noreferrer">Go-datastructures</a> - 一组有用的、高性能的、线程安全的数据结构</li><li><a href="https://github.com/hailocab/Go-geoindex" target="_blank" rel="noopener noreferrer">Go-geoindex</a> - 基于内存存储的地理索引</li><li><a href="https://github.com/aurelien-rainone/Go-rquad" target="_blank" rel="noopener noreferrer">Go-rquad</a> - 区域四叉树，支持有效点位置和领域发现</li><li><a href="https://github.com/emirpasic/Gods" target="_blank" rel="noopener noreferrer">Gods</a> - Go 语言数据结构、容器、集合、列表、栈、键值对、 BidiMaps、树、HashSet 等</li><li><a href="https://github.com/deckarep/Golang-set" target="_blank" rel="noopener noreferrer">Golang-set</a> - 线程安全和非线程安全的高性能集合</li><li><a href="https://github.com/ryszard/Goskiplist" target="_blank" rel="noopener noreferrer">Goskiplist</a> - Go 语言实现的跳跃表</li><li><a href="https://github.com/kniren/Gota" target="_blank" rel="noopener noreferrer">Gota</a> - 为go语言实现了数据帧，序列以及数据噪音的方法</li><li><a href="https://github.com/Google/hilbert" target="_blank" rel="noopener noreferrer">hilbert</a> - 用于映射空间填充曲线（例如希尔伯特曲线和皮亚诺曲线）和数值的库。</li><li><a href="https://github.com/axiomhq/hyperloglog" target="_blank" rel="noopener noreferrer">hyperloglog</a> - HyperLogLog implementation with Sparse, LogLog-Beta bias correction and TailCut space reduction.</li><li><a href="https://github.com/agext/levenshtein" target="_blank" rel="noopener noreferrer">levenshtein</a> - 编辑距离（levenshtein distance）和相似性度量， 可以自定义编辑代价和and Winkler-like bonus for common prefix.</li><li><a href="https://github.com/agnivade/levenshtein" target="_blank" rel="noopener noreferrer">levenshtein</a> - Go 语言实现计算编辑距离</li><li><a href="https://github.com/smartystreets/mafsa" target="_blank" rel="noopener noreferrer">mafsa</a> - Go 语言实现的 MA-FSA ，包含最小完美哈希</li><li><a href="https://github.com/cberGoon/merkletree" target="_blank" rel="noopener noreferrer">merkletree</a> - 实现了梅克尔树，提供了一种高效、安全的数据结构内容验证方法</li><li><a href="https://github.com/RoaringBitmap/roaring" target="_blank" rel="noopener noreferrer">roaring</a> - 实现了压缩 bitsets 的Go语言库</li><li><a href="https://github.com/gansidui/skiplist" target="_blank" rel="noopener noreferrer">skiplist</a> - Go语言实现的跳跃表</li><li><a href="https://github.com/derekparker/trie" target="_blank" rel="noopener noreferrer">trie</a> - Go语言实现的Trie树</li><li><a href="https://github.com/dieGobernardes/ttlcache" target="_blank" rel="noopener noreferrer">ttlcache</a> - In-memory LRU string-interface{} map with expiration for Golang</li><li><a href="https://github.com/willf/bloom" target="_blank" rel="noopener noreferrer">willf/bloom</a> - 实现了布隆过滤器的库</li></ul><h2 id="数据库" tabindex="-1"><a class="header-anchor" href="#数据库"><span>数据库</span></a></h2><ul><li>Go 语言实现的数据库*</li><li><a href="https://github.com/allegro/bigcache" target="_blank" rel="noopener noreferrer">BigCache</a> - 为 gigabytes 量级数据设计的高效键/值缓存</li><li><a href="https://github.com/boltdb/bolt" target="_blank" rel="noopener noreferrer">bolt</a> - 底层键值数据库</li><li><a href="https://github.com/tidwall/buntdb" target="_blank" rel="noopener noreferrer">buntdb</a> - 快速，可嵌入的，内存键值数据库，可定义索引及 spatial</li><li><a href="https://github.com/muesli/cache2Go" target="_blank" rel="noopener noreferrer">cache2Go</a> - 基于内存存储的键值缓存，支持自动基于超时的自动失效</li><li><a href="https://github.com/cockroachdb/cockroach" target="_blank" rel="noopener noreferrer">cockroach</a> - 可扩展的、一致的事务型数据库</li><li><a href="https://github.com/codingsince1985/couchcache" target="_blank" rel="noopener noreferrer">couchcache</a> - RESTful 缓存微服务，基于Couchbase</li><li><a href="https://github.com/dgraph-io/dgraph" target="_blank" rel="noopener noreferrer">dgraph</a> - 可扩展的、分布式的、低延时、高吞吐的图数据库</li><li><a href="https://github.com/peterbourGon/diskv" target="_blank" rel="noopener noreferrer">diskv</a> - 具有 disk-backed 功能的持久化键值存储</li><li><a href="https://github.com/krotik/eliasdb" target="_blank" rel="noopener noreferrer">eliasdb</a> - 无依赖、事物型图数据库，支持 REST API、短语搜索以及类 SQL 的查询语言</li><li><a href="https://github.com/couchbase/Goforestdb" target="_blank" rel="noopener noreferrer">forestdb</a> - ForestDB 的 Go 语言借口</li><li><a href="https://github.com/bluele/gcache" target="_blank" rel="noopener noreferrer">GCache</a> - 支持缓存过期、 LFU、 LRU 和 ARC 的缓存库</li><li><a href="https://github.com/melihmucuk/geocache" target="_blank" rel="noopener noreferrer">geocache</a> - 基于内存存储的缓存，适用于分布式部署的应用</li><li><a href="https://github.com/pmylund/Go-cache" target="_blank" rel="noopener noreferrer">Go-cache</a> - 内存键值存储/缓存库，适用于单机程序</li><li><a href="https://github.com/syndtr/Goleveldb" target="_blank" rel="noopener noreferrer">Goleveldb</a> - 使用 Go 语言实现的 <a href="https://github.com/Google/leveldb" target="_blank" rel="noopener noreferrer">LevelDB</a></li><li><a href="https://github.com/Golang/groupcache" target="_blank" rel="noopener noreferrer">groupcache</a> - Groupcache 是一个缓存及缓存填充库，在很多情况下用于替代 memcached.</li><li><a href="https://github.com/influxdb/influxdb" target="_blank" rel="noopener noreferrer">influxdb</a> - 用于计量、事件及实时分析的、可扩展的数据库</li><li><a href="https://github.com/siddontang/ledisdb" target="_blank" rel="noopener noreferrer">ledisdb</a> - Ledisdb 是一个高性能 NoSQL 数据库，类似 Redi</li><li><a href="https://github.com/jmhodges/leviGo" target="_blank" rel="noopener noreferrer">leviGo</a> - LeviGo 是 LevelDB的 Go 语言封装</li><li><a href="https://github.com/couchbase/moss" target="_blank" rel="noopener noreferrer">moss</a> - Moss 是一个简单的 LSM 键值存储引擎，100% Go 语言实现</li><li><a href="https://github.com/fern4lvarez/piladb" target="_blank" rel="noopener noreferrer">piladb</a> - 轻量级 RESTful 数据库引擎，基于堆栈结构</li><li><a href="https://github.com/prometheus/prometheus" target="_blank" rel="noopener noreferrer">prometheus</a> - 监控系统及时间序列数据库</li><li><a href="https://github.com/rqlite/rqlite" target="_blank" rel="noopener noreferrer">rqlite</a> - 基于 SQLite 的轻量级的、分布式的关系型数据库</li><li><a href="https://github.com/nanobox-io/Golang-scribble" target="_blank" rel="noopener noreferrer">Scribble</a> - 小巧的 JSON 文件存储</li><li><a href="https://github.com/rafaeljesus/tempdb" target="_blank" rel="noopener noreferrer">tempdb</a> - 临时数据的键值对存储</li><li><a href="https://github.com/pingcap/tidb" target="_blank" rel="noopener noreferrer">tidb</a> - TiDB 是一个分布式的 SQL 数据库。受到了 Google F1的启发</li><li><a href="https://github.com/HouzuoGuo/tiedot" target="_blank" rel="noopener noreferrer">tiedot</a> - 基于 Go 语言的 NoSQL 数据库</li><li><a href="https://github.com/tidwall/tile38" target="_blank" rel="noopener noreferrer">Tile38</a> - 地理位置数据库及实时地理围栏</li></ul><p><em>数据库迁移</em></p><ul><li><a href="https://github.com/GuiaBolso/darwin" target="_blank" rel="noopener noreferrer">darwin</a> - 数据库模式进化库</li><li><a href="https://github.com/RichardKnop/Go-fixtures" target="_blank" rel="noopener noreferrer">Go-fixtures</a> - 类似 DjanGo fixtures，用于 Golang 的內建数据库/sql 库</li><li><a href="https://github.com/steinbacher/Goose" target="_blank" rel="noopener noreferrer">Goose</a> - 数据库迁移工具。你可以通过编写增量 SQL 或 Go 语言脚本来管理你的数据库</li><li><a href="https://github.com/Go-Gormigrate/Gormigrate" target="_blank" rel="noopener noreferrer">Gormigrate</a> - 数据库模式迁移帮助工具，用于 Gorm ORM.</li><li><a href="https://github.com/mattes/migrate" target="_blank" rel="noopener noreferrer">migrate</a> - 数据库迁移。命令行及 Go 语言库</li><li><a href="https://github.com/pravasan/pravasan" target="_blank" rel="noopener noreferrer">pravasan</a> - 简单的迁移，目前支持 MySQL 但是近期打算支持 Postgres, SQLite, MonGoDB 等等</li><li><a href="https://github.com/markbates/pop/tree/master/soda" target="_blank" rel="noopener noreferrer">soda</a> - 数据库迁移、创建、 ORM等等，用于 MySQL, PostgreSQL, 以及 SQLite.</li><li><a href="https://github.com/rubenv/sql-migrate" target="_blank" rel="noopener noreferrer">sql-migrate</a> - 数据库迁移工具，允许利用 Go-bindata 将数据库迁移嵌入应用程序</li></ul><p><em>数据库工具</em></p><ul><li><a href="https://github.com/siddontang/Go-mysql" target="_blank" rel="noopener noreferrer">Go-mysql</a> - 用于处理 MySQL 协议及复制的 Go 语言工具集.</li><li><a href="https://github.com/siddontang/Go-mysql-elasticsearch" target="_blank" rel="noopener noreferrer">Go-mysql-elasticsearch</a> - 将你的 MySQL 数据自动同步到 Elasticsearch</li><li><a href="https://github.com/flike/kingshard" target="_blank" rel="noopener noreferrer">kingshard</a> - kingshard 是一个Go语言编写的高性能 MySQL 数据库代理</li><li><a href="https://github.com/2tvenom/myreplication" target="_blank" rel="noopener noreferrer">myreplication</a> - MySql 二进制 log 复制监听器，支持基于语句和基于行的复制</li><li><a href="https://github.com/github/orchestrator" target="_blank" rel="noopener noreferrer">orchestrator</a> - MySQL复制拓扑管理器及可视化工具</li><li><a href="https://github.com/sosedoff/pgweb" target="_blank" rel="noopener noreferrer">pgweb</a> - 基于 Web 的 PostgreSQL 数据库浏览工具</li><li><a href="https://github.com/nuveo/prest" target="_blank" rel="noopener noreferrer">pREST</a> - 通过任何 PostgreSQL 数据库提供 RESTful API</li><li><a href="https://github.com/youtube/vitess" target="_blank" rel="noopener noreferrer">vitess</a> - vitess 提供了能够使大型 web 服务 MySQL 数据库的扩展变得更加容易的服务器及工具</li></ul><p><em>用于创建和使用SQL的库</em></p><ul><li><a href="https://github.com/mgutz/dat" target="_blank" rel="noopener noreferrer">dat</a> - Go 语言 Postgres 数据库工具集</li><li><a href="https://github.com/gchaincl/dotsql" target="_blank" rel="noopener noreferrer">Dotsql</a> - 一个Go语言库，帮助你将 sql 文件保存在一个地方并且方便的取用</li><li><a href="https://github.com/doug-martin/Goqu" target="_blank" rel="noopener noreferrer">Goqu</a> - 地道的 SQL 语句创建器和查询库</li><li><a href="https://github.com/galeone/iGor" target="_blank" rel="noopener noreferrer">iGor</a> - PostgreSQL 的抽象层，支持高级功能以及类 Gorm 的语法</li><li><a href="https://github.com/Go-ozzo/ozzo-dbx" target="_blank" rel="noopener noreferrer">ozzo-dbx</a> - 提供强大的数据恢复功能以及构建不区分数据库类型的查询的能力</li><li><a href="https://github.com/variadico/scaneo" target="_blank" rel="noopener noreferrer">scaneo</a> - 生成用于将数据库行转换为任意结构体的 Go 代码</li><li><a href="https://github.com/elgris/sqrl" target="_blank" rel="noopener noreferrer">sqrl</a> - SQL 查询创建器，是 Squirrel 的一个分叉版本，进行了性能方面的优化</li><li><a href="https://github.com/Masterminds/squirrel" target="_blank" rel="noopener noreferrer">Squirrel</a> - 一个帮助你构建 SQL 查询的库</li><li><a href="https://github.com/knq/xo" target="_blank" rel="noopener noreferrer">xo</a> - 基于已知的数据库表或自定义查询生成地道的 Go 语言代码，支持 PostgreSQL, MySQL, SQLite, Oracle, 以及 Microsoft SQL Server.</li></ul><h2 id="数据库驱动" tabindex="-1"><a class="header-anchor" href="#数据库驱动"><span>数据库驱动</span></a></h2><p><em>用于连接和操作数据库的库</em></p><ul><li>关系型数据库 <ul><li><a href="https://github.com/Boostport/avatica" target="_blank" rel="noopener noreferrer">avatica</a> - Apache Phoenix/Avatica SQL 驱动</li><li><a href="https://github.com/viant/bgc" target="_blank" rel="noopener noreferrer">bgc</a> - 数据库连接工具包，用于通过 Go 语言访问 BigQuery</li><li><a href="https://github.com/nakagami/firebirdsql" target="_blank" rel="noopener noreferrer">firebirdsql</a> - Firebird RDBMS SQL 驱动</li><li><a href="https://github.com/mattn/Go-adodb" target="_blank" rel="noopener noreferrer">Go-adodb</a> - Microsoft ActiveX 对象数据库驱动</li><li><a href="https://github.com/rounds/Go-bqstreamer" target="_blank" rel="noopener noreferrer">Go-bqstreamer</a> - BigQuery fast and concurrent stream insert.</li><li><a href="https://github.com/denisenkom/Go-mssqldb" target="_blank" rel="noopener noreferrer">Go-mssqldb</a> - Go 语言Microsoft MSSQL 驱动</li><li><a href="https://github.com/mattn/Go-oci8" target="_blank" rel="noopener noreferrer">Go-oci8</a> - Oracle 驱动</li><li><a href="https://github.com/Go-sql-driver/mysql" target="_blank" rel="noopener noreferrer">Go-sql-driver/mysql</a> - Go 语言 MySQ L驱动</li><li><a href="https://github.com/mattn/Go-sqlite3" target="_blank" rel="noopener noreferrer">Go-sqlite3</a> - Go 语言的 SQLite3 驱动</li><li><a href="https://github.com/minus5/Gofreetds" target="_blank" rel="noopener noreferrer">Gofreetds</a> Microsoft MSSQL 驱动。 <a href="http://www.freetds.org" target="_blank" rel="noopener noreferrer">FreeTDS</a>的go语言封装</li><li><a href="https://github.com/jackc/pgx" target="_blank" rel="noopener noreferrer">pgx</a> - PostgreSQL 驱动，支持比 database/sql 更多的特性</li><li><a href="https://github.com/lib/pq" target="_blank" rel="noopener noreferrer">pq</a> - 纯 Go 语言编写的 Postgres 驱动</li></ul></li><li>NoSQL 数据库 <ul><li><a href="https://github.com/aerospike/aerospike-client-Go" target="_blank" rel="noopener noreferrer">aerospike-client-Go</a> - Aerospike 客户端</li><li><a href="https://github.com/solher/aranGolite" target="_blank" rel="noopener noreferrer">aranGolite</a> - AranGoDB 的轻量级 Go 语言驱动</li><li><a href="https://github.com/viant/asc" target="_blank" rel="noopener noreferrer">asc</a> - 用于go语言连接 Aerospike</li><li><a href="https://github.com/Google/cayley" target="_blank" rel="noopener noreferrer">cayley</a> - 支持多种后端的图数据库</li><li><a href="https://github.com/viant/dsc" target="_blank" rel="noopener noreferrer">dsc</a> - 数据库连接工具包，支持 SQL, NoSQL 及结构化文件    * <a href="https://github.com/underarmour/dynaGo" target="_blank" rel="noopener noreferrer">dynaGo</a> - DynaGo 是一个符合最小惊奇原则（principle of least surprise）的 DynamoDB 客户端</li><li><a href="https://github.com/couchbase/Go-couchbase" target="_blank" rel="noopener noreferrer">Go-couchbase</a> - Go 语言 Couchbase 客户的</li><li><a href="https://github.com/fjl/Go-couchdb" target="_blank" rel="noopener noreferrer">Go-couchdb</a> - 另一个 CouchDB HTTP API 的 Go 语言封装</li><li><a href="https://github.com/couchbase/Gocb" target="_blank" rel="noopener noreferrer">Gocb</a> - 官方 Couchbase 的 Go 语言 SDK</li><li><a href="http://Gocql.github.io" target="_blank" rel="noopener noreferrer">Gocql</a> - Apache Cassandra 的 Go 语言驱动</li><li><a href="https://github.com/bradfitz/Gomemcache/" target="_blank" rel="noopener noreferrer">Gomemcache</a> - memcache 客户端库</li><li><a href="https://github.com/dancannon/Gorethink" target="_blank" rel="noopener noreferrer">Gorethink</a> - RethinkDB 的 Go 语言驱动</li><li><a href="https://github.com/zegl/Goriak" target="_blank" rel="noopener noreferrer">Goriak</a> - Riak KV 的 Go 语言驱动</li><li><a href="https://Godoc.org/labix.org/v2/mGo" target="_blank" rel="noopener noreferrer">mGo</a> - MonGoDB 驱动，通过简单的 API 实现了丰富的、经过测试的特性，这些 API 遵循 Go 语言的习惯</li><li><a href="https://github.com/cihangir/neo4j" target="_blank" rel="noopener noreferrer">neo4j</a> - Neo4j Rest API 的 Go 语言接口</li><li><a href="https://github.com/davemeehan/Neo4j-Go" target="_blank" rel="noopener noreferrer">Neo4j-Go</a> - Go 语言实现的 Neo4j REST 客户端</li><li><a href="https://github.com/jmcvetta/neoism" target="_blank" rel="noopener noreferrer">neoism</a> - Go 语言 Neo4j 客户端</li><li><a href="https://github.com/garyburd/rediGo" target="_blank" rel="noopener noreferrer">rediGo</a> - RediGo 是 Redis 数据库的 Go 语言客户端.</li><li><a href="https://github.com/go-redis/redis" target="_blank" rel="noopener noreferrer">redis</a> - Redis 的 Go 语言客户端</li><li><a href="https://github.com/hoisie/redis" target="_blank" rel="noopener noreferrer">redis</a> - 简单、强大的 Redis 客户端</li><li><a href="https://github.com/bsm/redeo" target="_blank" rel="noopener noreferrer">redis</a> - 兼容Redis协议的 TCP 服务器/服务.</li><li><a href="https://github.com/shomali11/xredis" target="_blank" rel="noopener noreferrer">xredis</a> - 类型安全的、可定制的、简洁易用的 Redis 客户端</li></ul></li><li>搜索及分析数据库 <ul><li><a href="https://github.com/blevesearch/bleve" target="_blank" rel="noopener noreferrer">bleve</a> - 现代文本索引库</li><li><a href="https://github.com/olivere/elastic" target="_blank" rel="noopener noreferrer">elastic</a> - Go 语言的 Elasticsearch 客户端</li><li><a href="https://github.com/cch123/elasticsql" target="_blank" rel="noopener noreferrer">elasticsql</a> - 将 sql 转换为 elasticsearch dsl</li><li><a href="https://github.com/mattbaird/elastiGo" target="_blank" rel="noopener noreferrer">elastiGo</a> - Elasticsearch 客户端库</li><li><a href="https://github.com/belogik/Goes" target="_blank" rel="noopener noreferrer">Goes</a> - 用于和 Elasticsearch 交互的库</li><li><a href="https://github.com/seiflotfy/skizze" target="_blank" rel="noopener noreferrer">skizze</a> - 概率相关数据结构服务和存储</li></ul></li></ul><h2 id="日期和时间" tabindex="-1"><a class="header-anchor" href="#日期和时间"><span>日期和时间</span></a></h2><p><em>处理日期和时间的库</em></p><ul><li><a href="https://github.com/golang-module/carbon" target="_blank" rel="noopener noreferrer">carbon</a> - 简单的时间扩展程序，有很多有用的方法，是 PHP Carbon 库的接口</li><li><a href="https://github.com/hako/durafmt" target="_blank" rel="noopener noreferrer">durafmt</a> - 持续时间格式化</li><li><a href="https://github.com/wlbr/feiertage" target="_blank" rel="noopener noreferrer">feiertage</a> - 一组计算德国公共假期的函数，比如复活节、感恩节等</li><li><a href="https://github.com/yaa110/Go-persian-calendar" target="_blank" rel="noopener noreferrer">Go-persian-calendar</a> - 太阳历</li><li><a href="https://github.com/grsmv/Goweek" target="_blank" rel="noopener noreferrer">Goweek</a> - 处理星期的库</li><li><a href="https://github.com/jinzhu/now" target="_blank" rel="noopener noreferrer">now</a> - Now 是一个 Go 语言的时间工具集</li><li><a href="https://github.com/kirillDanshin/nulltime" target="_blank" rel="noopener noreferrer">NullTime</a> -时间可以是 NULL 的库</li><li><a href="https://github.com/leekchan/timeutil" target="_blank" rel="noopener noreferrer">timeutil</a> - 为 Go 语言时间包扩展了有用的功能，例如时间间隔和格式化</li></ul><h2 id="分布式系统" tabindex="-1"><a class="header-anchor" href="#分布式系统"><span>分布式系统</span></a></h2><p><em>用于构建分布式系统的库</em></p><ul><li><a href="https://github.com/svcavallar/celeriac.v1" target="_blank" rel="noopener noreferrer">celeriac</a> - 利用 Go 语言对Celery 的 worker，任务，事件进行交互和监控的库</li><li><a href="https://github.com/dgruber/drmaa" target="_blank" rel="noopener noreferrer">drmaa</a> -集群调度工具的任务提交库，基于标准 DRMAA</li><li><a href="https://github.com/vectaport/flowgraph" target="_blank" rel="noopener noreferrer">flowgraph</a> - MPI 风格的读取，发送协同层</li><li><a href="https://github.com/chrislusf/gleam" target="_blank" rel="noopener noreferrer">gleam</a> - 快速、可扩展的分布式 map/reduce 系统，使用纯 Go 语言和 Luajit 编写，融合了 Go 语言的高并发能力和 Luajit 的高性能，可以独立或分布式部署运行。</li><li><a href="https://github.com/chrislusf/glow" target="_blank" rel="noopener noreferrer">glow</a> - 简单易用、可扩展的大数据处理能力，Map-Reduce 以及执行 DAG(Database Availability Group），所有功能均由Go语言编写.</li><li><a href="https://github.com/dgryski/Go-jump" target="_blank" rel="noopener noreferrer">Go-jump</a> - Google &quot;Jump&quot; 一致性哈希函数的借口</li><li><a href="https://github.com/Go-kit/kit" target="_blank" rel="noopener noreferrer">Go-kit</a> - 为服务工具吧，支持服务发现、负载均衡 、可插拔传输以及请求追踪等</li><li><a href="https://github.com/valyala/Gorpc" target="_blank" rel="noopener noreferrer">Gorpc</a> - 简单、快速、可扩展的 RPC 库，针对高负载场景</li><li><a href="https://github.com/grpc/grpc-Go" target="_blank" rel="noopener noreferrer">grpc-Go</a> - Go 语言实现的 gRPC. HTTP/2 基于 RPC.</li><li><a href="https://github.com/hprose/hprose-Golang" target="_blank" rel="noopener noreferrer">hprose</a> - 非常牛逼的 RPC 库，当前支持 25+ 语言。</li><li><a href="https://github.com/osaminGo/jsonrpc" target="_blank" rel="noopener noreferrer">jsonrpc</a> - jsonrpc 包实现了 JSON-RPC 2.0.</li><li><a href="https://github.com/ybbus/jsonrpc" target="_blank" rel="noopener noreferrer">jsonrpc</a> - JSON-RPC 2.0 HTTP 客户端实现</li><li><a href="https://github.com/devopsfaith/krakend" target="_blank" rel="noopener noreferrer">KrakenD</a> - 带有中间件的，高性能 API 网关框架</li><li><a href="https://github.com/micro/micro" target="_blank" rel="noopener noreferrer">micro</a> - 微服务工具套件和分布式系统平台</li><li><a href="https://github.com/nats-io/gnatsd" target="_blank" rel="noopener noreferrer">NATS</a> - 轻量级、高性能微服务系统，用于微服务、物联网以及云</li><li><a href="https://github.com/hashicorp/raft" target="_blank" rel="noopener noreferrer">raft</a> - Raft 一致性协议的 Go 语言实现, 作者是 HashiCorp.</li><li><a href="https://github.com/coreos/etcd/tree/master/raft#readme" target="_blank" rel="noopener noreferrer">raft</a> - Raft 一致性协议的 Go 语言实现, 作者是 CoreOS.</li><li><a href="https://github.com/uber/ringpop-Go" target="_blank" rel="noopener noreferrer">ringpop-Go</a> - 可扩展、容错的应用层分片库</li><li><a href="https://github.com/smallnest/rpcx" target="_blank" rel="noopener noreferrer">rpcx</a> - rpcx是一个类似阿里巴巴 Dubbo 和微博 Motan 的分布式的 RPC 服务框架</li><li><a href="https://github.com/ursiform/sleuth" target="_blank" rel="noopener noreferrer">sleuth</a> - 在 HTTP 服务之间进行无主 p2p 自动发现和 RPC通信(使用 <a href="https://github.com/zeromq/libzmq" target="_blank" rel="noopener noreferrer">ZeroMQ</a>).</li><li><a href="https://github.com/tendermint/tendermint" target="_blank" rel="noopener noreferrer">tendermint</a> - 一个高性能的中间件，用于将任何语言编写的状态机转换为一个拜占庭容错状态机，使用Tendermint 一致性及区块链协议</li><li><a href="https://github.com/anacrolix/torrent" target="_blank" rel="noopener noreferrer">torrent</a> - BitTorrent 客户端</li><li><a href="https://Godoc.org/github.com/anacrolix/dht" target="_blank" rel="noopener noreferrer">dht</a> - BitTorrent Kademlia DHT 的实现.</li><li><a href="https://github.com/Sioro-Neoku/Go-peerflix" target="_blank" rel="noopener noreferrer">Go-peerflix</a> - 视频流 torrent 客户端</li></ul><h2 id="电子邮件" tabindex="-1"><a class="header-anchor" href="#电子邮件"><span>电子邮件</span></a></h2><p><em>用于创建和发送电子邮件的库</em></p><ul><li><a href="https://github.com/aymerick/douceur" target="_blank" rel="noopener noreferrer">douceur</a> - HTML 邮件中的内联 CSS</li><li><a href="https://github.com/jordan-wright/email" target="_blank" rel="noopener noreferrer">email</a> - 一个健壮的、灵活的 email 库</li><li><a href="https://github.com/toorop/Go-dkim" target="_blank" rel="noopener noreferrer">Go-dkim</a> - DKIM 库，用于对 email 进行签名和验证</li><li><a href="https://github.com/emersion/Go-imap" target="_blank" rel="noopener noreferrer">Go-imap</a> - IMAP 库，用于客户端和服务器</li><li><a href="https://github.com/emersion/Go-message" target="_blank" rel="noopener noreferrer">Go-message</a> - 用于触雷互联网消息格式和邮件的库</li><li><a href="https://github.com/Go-Gomail/Gomail/" target="_blank" rel="noopener noreferrer">Gomail</a> - Gomail 是一个非常简单且强大的库，用于发送电子邮件</li><li><a href="https://github.com/hectane/hectane" target="_blank" rel="noopener noreferrer">Hectane</a> - 轻量级 SMTP 客户端，提供 HTTP API</li><li><a href="https://github.com/matcornic/hermes" target="_blank" rel="noopener noreferrer">hermes</a> - 一个用于生成干净、响应式 HTML e-mail 的包</li><li><a href="https://github.com/mailhog/MailHog" target="_blank" rel="noopener noreferrer">MailHog</a> - Email 及 SMTP 测试工具，具有 web 及 API 接口</li><li><a href="https://github.com/sendgrid/sendgrid-Go" target="_blank" rel="noopener noreferrer">SendGrid</a> - SendGrid 的 Go 语言库，用于发送电子邮件</li><li><a href="https://github.com/mailhog/smtp" target="_blank" rel="noopener noreferrer">smtp</a> - SMTP 服务器协议状态机</li></ul><h2 id="嵌入式脚本语言" tabindex="-1"><a class="header-anchor" href="#嵌入式脚本语言"><span>嵌入式脚本语言</span></a></h2><p><em>在你的 Go 代码中嵌入其他语言.</em></p><ul><li><a href="https://github.com/PuerkitoBio/aGora" target="_blank" rel="noopener noreferrer">aGora</a> - 一种动态类型的可以嵌入 Go 中的编程语言</li><li><a href="https://github.com/mattn/anko" target="_blank" rel="noopener noreferrer">anko</a> - Go 语言编写的解释器</li><li><a href="https://github.com/alexeyco/binder" target="_blank" rel="noopener noreferrer">binder</a> - Lua 接口, 基于 <a href="https://github.com/yuin/Gopher-lua" target="_blank" rel="noopener noreferrer">Gopher-lua</a></li><li><a href="https://github.com/jcla1/gisp" target="_blank" rel="noopener noreferrer">gisp</a> - Simple LISP</li><li><a href="https://github.com/olebedev/Go-duktape" target="_blank" rel="noopener noreferrer">Go-duktape</a> - Duktape JavaScript 引擎的 Go 语言接口</li><li><a href="https://github.com/Shopify/Go-lua" target="_blank" rel="noopener noreferrer">Go-lua</a> - Lua 5.2 虚拟机的纯 Go 语言接口</li><li><a href="https://github.com/deuill/Go-php" target="_blank" rel="noopener noreferrer">Go-php</a> - PHP 的 Go 语言接口</li><li><a href="https://github.com/sbinet/Go-python" target="_blank" rel="noopener noreferrer">Go-python</a> - CPython C-API 的 Go 语言接口</li><li><a href="https://github.com/aarzilli/Golua" target="_blank" rel="noopener noreferrer">Golua</a> - Lua C API。的 Go 语言接口</li><li><a href="https://github.com/yuin/Gopher-lua" target="_blank" rel="noopener noreferrer">Gopher-lua</a> - Go 语言编写的 Lua 5.1 虚拟机和编译器</li><li><a href="https://github.com/db47h/ngaro" target="_blank" rel="noopener noreferrer">ngaro</a> - 可嵌入的 Ngaro 虚拟机实现，支持在 Retro 中使用脚步</li><li><a href="https://github.com/robertkrimen/otto" target="_blank" rel="noopener noreferrer">otto</a> - Go 编写的 Javascrip 解释器</li><li><a href="https://github.com/ian-kent/purl" target="_blank" rel="noopener noreferrer">purl</a> - 嵌入 Go 语言的 Perl 5.18.2</li></ul><h2 id="文件" tabindex="-1"><a class="header-anchor" href="#文件"><span>文件</span></a></h2><p><em>用于处理文件和文件系统的库</em></p><ul><li><a href="https://github.com/spf13/afero" target="_blank" rel="noopener noreferrer">afero</a> - 一个文件系统的抽象系统</li><li><a href="https://github.com/artonge/Go-csv-tag" target="_blank" rel="noopener noreferrer">Go-csv-tag</a> - 使用 tag 导入 csv</li><li><a href="https://github.com/artonge/Go-gtfs" target="_blank" rel="noopener noreferrer">Go-gtfs</a> - 加载 gtfs 文件</li><li><a href="https://github.com/rjeczalik/notify" target="_blank" rel="noopener noreferrer">notify</a> - 文件系统提示库，具有简单的 API ，类似 os/signal.</li><li><a href="https://github.com/dixonwille/skywalker" target="_blank" rel="noopener noreferrer">skywalker</a> - 允许你简单方便的并发浏览文件系统</li><li><a href="https://github.com/posener/tarfs" target="_blank" rel="noopener noreferrer">tarfs</a> - 为 tar 文件实现的 <code>[FileSystem](https://Godoc.org/github.com/kr/fs#FileSystem)</code><a href="https://Godoc.org/github.com/kr/fs#FileSystem" target="_blank" rel="noopener noreferrer">接口</a></li></ul><h2 id="财经" tabindex="-1"><a class="header-anchor" href="#财经"><span>财经</span></a></h2><p><em>会计及财务库</em></p><ul><li><a href="https://github.com/leekchan/accounting" target="_blank" rel="noopener noreferrer">accounting</a> - 金钱及货币格式</li><li><a href="https://github.com/shopspring/decimal" target="_blank" rel="noopener noreferrer">decimal</a> - 任意精度、固定点十进制数</li><li><a href="https://github.com/FlashBoys/Go-finance" target="_blank" rel="noopener noreferrer">Go-finance</a> - 使用 Go 语言来理解财务市场数据</li><li><a href="https://github.com/rhymond/Go-money" target="_blank" rel="noopener noreferrer">Go-money</a> - <a href="https://martinfowler.com/eaaCatalog/money.html" target="_blank" rel="noopener noreferrer">Fowler 金钱模型</a>的实现</li><li><a href="https://github.com/aclindsa/ofxGo" target="_blank" rel="noopener noreferrer">ofxGo</a> - 查询 OFX 服务器并解析其响应 (有一个示例的命令行客户端)</li><li><a href="https://github.com/dannyvankooten/vat" target="_blank" rel="noopener noreferrer">vat</a> - VAT 验证及欧洲增值税率工具</li></ul><h2 id="表单" tabindex="-1"><a class="header-anchor" href="#表单"><span>表单</span></a></h2><p><em>操作表单的库</em></p><ul><li><a href="https://github.com/robfig/bind" target="_blank" rel="noopener noreferrer">bind</a> - 将表单数据绑定到任意的 Go 变量上</li><li><a href="https://github.com/mholt/binding" target="_blank" rel="noopener noreferrer">binding</a> - 将来自 net/HTTP 请求的表单、JSON 数据绑定到结构体</li><li><a href="https://github.com/leebenson/conform" target="_blank" rel="noopener noreferrer">conform</a> - 检查用户输入并基于结构标签来清理数据</li><li><a href="https://github.com/Go-playground/form" target="_blank" rel="noopener noreferrer">form</a> - 解码 url 中的数据到 Go 语言变量中以及将 Go 语言变量编码进 url 支持Dual Array 及 Full map</li><li><a href="https://github.com/monoculum/formam" target="_blank" rel="noopener noreferrer">formam</a> - 将表单数据解码到结构体</li><li><a href="https://github.com/albrow/forms" target="_blank" rel="noopener noreferrer">forms</a> - 框架无关的表单/JSON数据解析验证库，支持多部分表单及文件</li><li><a href="https://github.com/Gorilla/csrf" target="_blank" rel="noopener noreferrer">Gorilla/csrf</a> - 为 Go 语言 web 应用提供 CSRF 防御</li><li><a href="https://github.com/justinas/nosurf" target="_blank" rel="noopener noreferrer">nosurf</a> - CSRF 防御中间件</li></ul><h2 id="游戏开发" tabindex="-1"><a class="header-anchor" href="#游戏开发"><span>游戏开发</span></a></h2><p><em>超赞的游戏开发库</em></p><ul><li><a href="https://github.com/azul3d/engine" target="_blank" rel="noopener noreferrer">Azul3D</a> - Go 语言编写的 3D 游戏引擎</li><li><a href="https://github.com/hajimehoshi/ebiten" target="_blank" rel="noopener noreferrer">Ebiten</a> - Go 语言编写的简单的 2D 游戏库</li><li><a href="https://github.com/EnGoEngine/enGo" target="_blank" rel="noopener noreferrer">enGo</a> - EnGo 是一个开源的 2D 游戏引擎，遵循实体-组件-系统范式</li><li><a href="https://github.com/vova616/GarageEngine" target="_blank" rel="noopener noreferrer">GarageEngine</a> - 2d 游戏引擎，利用 OpenGL 工作</li><li><a href="https://github.com/runningwild/glop" target="_blank" rel="noopener noreferrer">glop</a> - Glop (Game Library Of Power) 是一个很简单的跨平台游戏库</li><li><a href="https://github.com/beefsack/Go-astar" target="_blank" rel="noopener noreferrer">Go-astar</a> - Go 语言实现的 A* 寻路算法</li><li><a href="https://github.com/GlenKelley/Go-collada" target="_blank" rel="noopener noreferrer">Go-collada</a> - 操作 Collada 文件格式的 Go 语言库</li><li><a href="https://github.com/veandco/Go-sdl2" target="_blank" rel="noopener noreferrer">Go-sdl2</a> - <a href="https://www.libsdl.org/" target="_blank" rel="noopener noreferrer">Simple DirectMedia Layer</a>的 Go 语言接口</li><li><a href="https://github.com/ungerik/Go3d" target="_blank" rel="noopener noreferrer">Go3d</a> - 专注性能的 2D/3D 数学库</li><li><a href="https://github.com/xtaci/Gonet" target="_blank" rel="noopener noreferrer">Gonet</a> - Go 语言实现的游戏服务器框架</li><li><a href="https://github.com/name5566/leaf" target="_blank" rel="noopener noreferrer">Leaf</a> - 轻量级游戏服务器框架</li><li><a href="https://github.com/faiface/pixel" target="_blank" rel="noopener noreferrer">Pixel</a> - 手工 2D 游戏引擎库</li><li><a href="https://github.com/gen2brain/raylib-Go" target="_blank" rel="noopener noreferrer">raylib-Go</a> - <a href="http://www.raylib.com/" target="_blank" rel="noopener noreferrer">raylib</a>的 Go 语言接口，简单、易用的用于学习游戏编程的库</li><li><a href="https://github.com/JoelOtter/termloop" target="_blank" rel="noopener noreferrer">termloop</a> - 终端游戏引擎，基于 Termbox</li></ul><h2 id="代码生成与泛型" tabindex="-1"><a class="header-anchor" href="#代码生成与泛型"><span>代码生成与泛型</span></a></h2><p><em>一些增强语言的功能的工具例如通过代码生成支持泛型</em></p><ul><li><a href="https://github.com/t0pep0/efaceconv" target="_blank" rel="noopener noreferrer">efaceconv</a> - 代码生成工具，用于高效的将 interface{} 转换为不可变类型，不需要进行任何内存分配</li><li><a href="https://github.com/clipperhouse/gen" target="_blank" rel="noopener noreferrer">gen</a> - 代码生成工具,用于提供类似泛型的功能</li><li><a href="https://github.com/ahmetalpbalkan/Go-linq" target="_blank" rel="noopener noreferrer">Go-linq</a> - 类似 .NET LINQ 的查询方法</li><li><a href="https://github.com/rjeczalik/interfaces" target="_blank" rel="noopener noreferrer">interfaces</a> - 命令行工具，用于生成接口定义</li><li><a href="https://github.com/dave/jennifer" target="_blank" rel="noopener noreferrer">jennifer</a> - 不适用模板生成任意 Go 语言代码</li><li><a href="https://github.com/ungerik/pkgreflect" target="_blank" rel="noopener noreferrer">pkgreflect</a> - 用于包作用域反射的 Go 语言预处理器</li></ul><h2 id="go-编译器" tabindex="-1"><a class="header-anchor" href="#go-编译器"><span>Go 编译器</span></a></h2><p><em>用于把 Go 语言编译为其他语言的工具</em></p><ul><li><a href="https://github.com/Gopherjs/Gopherjs" target="_blank" rel="noopener noreferrer">Gopherjs</a> - 把 Go 编译为 JavaScript.</li><li><a href="https://github.com/Go-llvm/llGo" target="_blank" rel="noopener noreferrer">llGo</a> - 基于 LLVM 的 Go 语言编译器</li><li><a href="https://github.com/tardisGo/tardisGo" target="_blank" rel="noopener noreferrer">tardisGo</a> - Golang 转换为 Haxe 进而转换为 CPP/CSharp/Java/JavaScript 的编译器.</li></ul><h2 id="协程" tabindex="-1"><a class="header-anchor" href="#协程"><span>协程</span></a></h2><p><em>用于管理和处理Go 语言协程的工具</em></p><ul><li><a href="https://github.com/workanator/Go-floc" target="_blank" rel="noopener noreferrer">Go-floc</a> - 轻松编排 Go 语言协程</li><li><a href="https://github.com/kamildrazkiewicz/Go-flow" target="_blank" rel="noopener noreferrer">Go-flow</a> - 控制 Go 语言协程的执行顺序</li><li><a href="https://github.com/benmanns/Goworker" target="_blank" rel="noopener noreferrer">Goworker</a> - Goworker 是一个基于 Go 语言的后台worker</li><li><a href="https://github.com/ivpusic/grpool" target="_blank" rel="noopener noreferrer">grpool</a> - 轻量级 Go 语言协程池</li><li><a href="https://github.com/Go-playground/pool" target="_blank" rel="noopener noreferrer">pool</a> - 有限消费者协程或无限协程池，用于简单的处理协程和取消协程</li><li><a href="https://github.com/kamilsk/semaphore" target="_blank" rel="noopener noreferrer">semaphore</a> - 实现了信号量模式，提供了超时锁定、解锁操作，基于通道和上下文。</li><li><a href="https://github.com/Jeffail/tunny" target="_blank" rel="noopener noreferrer">tunny</a> - Go 语言协程池</li></ul><h2 id="gui" tabindex="-1"><a class="header-anchor" href="#gui"><span>GUI</span></a></h2><p><em>用于构建 GUI 程序的库</em></p><p><em>工具包</em></p><ul><li><a href="https://github.com/murlokswarm/app" target="_blank" rel="noopener noreferrer">app</a> - 使用Go, HTML 和 CSS 进行应用程序开发的库 支持 MacOS, Windows in progress.</li><li><a href="https://github.com/asticode/Go-astilectron" target="_blank" rel="noopener noreferrer">Go-astilectron</a> - 使用 Go 以及 HTML/JS/CSS 构建应用程序. (基于Electron)</li><li><a href="http://mattn.github.io/Go-gtk/" target="_blank" rel="noopener noreferrer">Go-gtk</a> - GTK 的 Go 语言接口</li><li><a href="https://github.com/Go-qml/qml" target="_blank" rel="noopener noreferrer">Go-qml</a> - QML 对 Go 语言的支持</li><li><a href="https://github.com/sciter-sdk/Go-sciter" target="_blank" rel="noopener noreferrer">Go-sciter</a> - Sciter 的 Go 语言接口 : 支持现代 GUI 程序开发的、嵌入式 HTML/CSS/脚本 引擎。跨平台。</li><li><a href="https://github.com/visualfc/Goqt" target="_blank" rel="noopener noreferrer">Goqt</a> - Qt的 Go 语言接口</li><li><a href="https://github.com/Gotk3/Gotk3" target="_blank" rel="noopener noreferrer">Gotk3</a> - GTK3 的 Go 语言接口</li><li><a href="https://github.com/dtylman/Gowd" target="_blank" rel="noopener noreferrer">Gowd</a> - 使用 Go, HTML, CSS 和 NW.js 语言进行快速、简单的桌面 UI 开发。跨平台</li><li><a href="https://github.com/therecipe/qt" target="_blank" rel="noopener noreferrer">qt</a> - Qt 的 Go 语言接口 (支持 Windows / macOS / Linux / Android / iOS / Sailfish OS / Raspberry Pi)</li><li><a href="https://github.com/andlabs/ui" target="_blank" rel="noopener noreferrer">ui</a> - 平台原生 GUI 库。跨平台</li><li><a href="https://github.com/lxn/walk" target="_blank" rel="noopener noreferrer">walk</a> - windows 应用程序开发工具包</li></ul><p><em>交互</em></p><ul><li><a href="https://github.com/deckarep/Gosx-notifier" target="_blank" rel="noopener noreferrer">Gosx-notifier</a> - OSX 桌面提醒库</li><li><a href="https://github.com/Go-vGo/robotGo" target="_blank" rel="noopener noreferrer">robotGo</a> - 跨平台 GUI 自动化；控制鼠标、键盘及其他设备</li><li><a href="https://github.com/getlantern/systray" target="_blank" rel="noopener noreferrer">systray</a> - 一个跨平台的 Go 语言库，用于在桌面提醒区域放置按钮及菜单</li><li><a href="https://github.com/shurcooL/trayhost" target="_blank" rel="noopener noreferrer">trayhost</a> - 一个跨平台的 Go 语言库，用于在主机系统任务条区域放置按钮及菜单</li></ul><h2 id="硬件" tabindex="-1"><a class="header-anchor" href="#硬件"><span>硬件</span></a></h2><p><em>库、工具以及教程，讲解如何操控硬件</em></p><p>参见 <a href="https://github.com/rakyll/Go-hardware" target="_blank" rel="noopener noreferrer">Go-hardware</a> 获取更加全面的信息</p><h2 id="图像" tabindex="-1"><a class="header-anchor" href="#图像"><span>图像</span></a></h2><p><em>用于操作图像的库</em></p><ul><li><a href="https://github.com/anthonynsimon/bild" target="_blank" rel="noopener noreferrer">bild</a> - 汇集了使用 Go 语言编写的图像处理算法</li><li><a href="https://github.com/h2non/bimg" target="_blank" rel="noopener noreferrer">bimg</a> - 利用 libvips 进行快速高效的图像处理</li><li><a href="https://github.com/pravj/geopattern" target="_blank" rel="noopener noreferrer">geopattern</a> - 从字符串创建优美的图样</li><li><a href="https://github.com/fogleman/gg" target="_blank" rel="noopener noreferrer">gg</a> - 使用 Go 编写的 2D 渲染程序</li><li><a href="https://github.com/disintegration/gift" target="_blank" rel="noopener noreferrer">gift</a> - 一组图像处理滤波器</li><li><a href="https://github.com/ungerik/Go-cairo" target="_blank" rel="noopener noreferrer">Go-cairo</a> - cairo 图形库的 Go 语言接口</li><li><a href="https://github.com/bolknote/Go-gd" target="_blank" rel="noopener noreferrer">Go-gd</a> - GD 库的 Go 语言接口</li><li><a href="https://github.com/koyachi/Go-nude" target="_blank" rel="noopener noreferrer">Go-nude</a> - 使用 Go 语言进行裸替检测</li><li><a href="https://github.com/lazywei/Go-opencv" target="_blank" rel="noopener noreferrer">Go-opencv</a> - OpenCV 的 Go 语言接口</li><li><a href="https://github.com/hybridgroup/gocv" target="_blank" rel="noopener noreferrer">gocv</a> - OpenCV 的 Go 语言接口,支持 OpenCV4.x</li><li><a href="https://github.com/jyotiska/Go-webcolors" target="_blank" rel="noopener noreferrer">Go-webcolors</a> - webcolors 库的 Go 语言接口</li><li><a href="https://github.com/Gographics/imagick" target="_blank" rel="noopener noreferrer">imagick</a> - ImageMagick 的 MagickWand C 语言 API 的 Go 语言接口</li><li><a href="https://github.com/h2non/imaginary" target="_blank" rel="noopener noreferrer">imaginary</a> - 快速且简单的 HTTP 微服务，用于图像缩放</li><li><a href="https://github.com/disintegration/imaging" target="_blank" rel="noopener noreferrer">imaging</a> - 简单的 Go 语言图像处理包</li><li><a href="https://github.com/hawx/img" target="_blank" rel="noopener noreferrer">img</a> - 图像操作工具精选集</li><li><a href="https://github.com/fogleman/ln" target="_blank" rel="noopener noreferrer">ln</a> - 3D 图线艺术渲染</li><li><a href="https://github.com/donatj/mpo" target="_blank" rel="noopener noreferrer">mpo</a> - MPO 3D 照片解码与转换工具.</li><li><a href="https://github.com/thoas/picfit" target="_blank" rel="noopener noreferrer">picfit</a> - 一个使用 Go 语言编写的图片缩放服务器</li><li><a href="https://github.com/fogleman/pt" target="_blank" rel="noopener noreferrer">pt</a> - 光线追踪引擎</li><li><a href="https://github.com/nfnt/resize" target="_blank" rel="noopener noreferrer">resize</a> - 使用 Go 语言编写的具有常见差值功能的图片缩放工具</li><li><a href="https://github.com/bamiaux/rez" target="_blank" rel="noopener noreferrer">rez</a> - 纯 Go 及 SIMD 实现的图像缩放库</li><li><a href="https://github.com/muesli/smartcrop" target="_blank" rel="noopener noreferrer">smartcrop</a> - 为任意图片进行剪裁的工具</li><li><a href="https://github.com/ajstarks/svGo" target="_blank" rel="noopener noreferrer">svGo</a> - 用于生成 SVG 的 Go 语言库</li><li><a href="https://github.com/ftrvxmtrx/tga" target="_blank" rel="noopener noreferrer">tga</a> - tga 是一个 TARGA 图像格式解码/编码器</li><li><a href="https://github.com/skip2/go-qrcode" target="_blank" rel="noopener noreferrer">go-qrcode</a> - QR Code 编码器（Go语言实现）</li></ul><h2 id="物联网" tabindex="-1"><a class="header-anchor" href="#物联网"><span>物联网</span></a></h2><p><em>用于为物联网设备编程的库.</em></p><ul><li><a href="https://github.com/connectordb/connectordb" target="_blank" rel="noopener noreferrer">connectordb</a> - 开源个人数据及物联网平台</li><li><a href="https://github.com/Goiot/devices" target="_blank" rel="noopener noreferrer">devices</a> - 物联网设备套件库</li><li><a href="https://github.com/xcodersun/eywa" target="_blank" rel="noopener noreferrer">eywa</a> - Eywa 是一个持续追踪所有连接设备的连接管理器</li><li><a href="https://github.com/tibcosoftware/floGo" target="_blank" rel="noopener noreferrer">floGo</a> - FloGo 是一个用于物联网 Edge App 及集成的开源框架</li><li><a href="https://github.com/paypal/gatt" target="_blank" rel="noopener noreferrer">gatt</a> - Gatt 是一个用于创建低功耗蓝牙外设的库</li><li><a href="https://github.com/hybridgroup/Gobot/" target="_blank" rel="noopener noreferrer">Gobot</a> - Gobot 是一个用于机器人，物理计算以及物联网的库</li><li><a href="https://github.com/Mainflux/mainflux" target="_blank" rel="noopener noreferrer">mainflux</a> - 工业网物联网消息及设备管理服务器</li><li><a href="https://github.com/sensorbee/sensorbee" target="_blank" rel="noopener noreferrer">sensorbee</a> - 轻量级物联网流处理引擎</li></ul><h2 id="日志" tabindex="-1"><a class="header-anchor" href="#日志"><span>日志</span></a></h2><p><em>用于生成和操作日志文件的库.</em></p><ul><li><a href="https://github.com/kpanGo/glg" target="_blank" rel="noopener noreferrer">glg</a> - glg 是一个简单、快速、分级的日志库</li><li><a href="https://github.com/Golang/glog" target="_blank" rel="noopener noreferrer">glog</a> - 分级记录日志的库</li><li><a href="https://github.com/utahta/Go-cronowriter" target="_blank" rel="noopener noreferrer">Go-cronowriter</a> 对日志文件进行自动循环写入的库基于当前日期和时间，类似 cronolog.</li><li><a href="https://github.com/siddontang/Go-log" target="_blank" rel="noopener noreferrer">Go-log</a> - 支持多处理器及日志分级的库</li><li><a href="https://github.com/ian-kent/Go-log" target="_blank" rel="noopener noreferrer">Go-log</a> - Go 语言实现的 Log4j</li><li><a href="https://github.com/apsdehal/Go-logger" target="_blank" rel="noopener noreferrer">Go-logger</a> - 支持日志分级的简单的日志工具</li><li><a href="https://github.com/sadlil/Gologger" target="_blank" rel="noopener noreferrer">Gologger</a> - 简单易用的日志库，可以在彩色控制台、简易控制的、文件或 Elasticsearch 中记录</li><li><a href="https://github.com/aphistic/Gomol" target="_blank" rel="noopener noreferrer">Gomol</a> - 支持多种输出，结构化的日志模块，可以扩展它的输出</li><li><a href="https://github.com/One-com/Gone/tree/master/log#readme" target="_blank" rel="noopener noreferrer">Gone/log</a> - 快速、可扩展、全功能、兼容标准库的日志库</li><li><a href="https://github.com/apex/log" target="_blank" rel="noopener noreferrer">log</a> - 结构化日志库</li><li><a href="https://github.com/Go-playground/log" target="_blank" rel="noopener noreferrer">log</a> - 简单、可配置、可扩展的结构化日志库</li><li><a href="https://github.com/firstrow/logvoyage" target="_blank" rel="noopener noreferrer">log-voyage</a> - 全功能日志saas 使用 Go 语言编写</li><li><a href="https://github.com/inconshreveable/log15" target="_blank" rel="noopener noreferrer">log15</a> - 简单强大的日志库</li><li><a href="https://github.com/ewwwwwqm/logdump" target="_blank" rel="noopener noreferrer">logdump</a> - 支持分级的日志库</li><li><a href="https://github.com/chzyer/logex" target="_blank" rel="noopener noreferrer">logex</a> - Go 语言日志库，支持追踪和分级，基于标准库进行了封装</li><li><a href="https://github.com/azer/logger" target="_blank" rel="noopener noreferrer">logger</a> - 一个极简的日志库</li><li><a href="https://github.com/Sirupsen/logrus" target="_blank" rel="noopener noreferrer">logrus</a> - 支持结构化的日志工具.</li><li><a href="https://github.com/sebest/logrusly" target="_blank" rel="noopener noreferrer">logrusly</a> - <a href="https://github.com/sirupsen/logrus" target="_blank" rel="noopener noreferrer">logrus</a> 的插件，用于将错误发送到 <a href="https://www.loggly.com/" target="_blank" rel="noopener noreferrer">Loggly</a>.</li><li><a href="https://github.com/hashicorp/logutils" target="_blank" rel="noopener noreferrer">logutils</a> - 对 Go 语言标准日志工具进行了扩展，使其更好用</li><li><a href="https://github.com/mgutz/logxi" target="_blank" rel="noopener noreferrer">logxi</a> - 十二要素 app 日志工具，非常快速，令你开心</li><li><a href="https://github.com/natefinch/lumberjack" target="_blank" rel="noopener noreferrer">lumberjack</a> - 简单的循环日志工具，实现了 io.WriteCloser.</li><li><a href="https://github.com/jbrodriguez/mlog" target="_blank" rel="noopener noreferrer">mlog</a> - 一个简单的日志模块，可以分5级并有一个可选的循环日志文件记录功能，支持 stdout/stderr 输出.</li><li><a href="https://github.com/Go-ozzo/ozzo-log" target="_blank" rel="noopener noreferrer">ozzo-log</a> - 高性能日志库，支持日志严重级别、分类及过滤。可以将过滤后的信息发送到不同的目的地(例如： 控制台、网络、邮箱).</li><li><a href="https://github.com/cihub/seelog" target="_blank" rel="noopener noreferrer">seelog</a> - 一个灵活的、解耦的、格式化的日志库</li><li><a href="https://github.com/ventu-io/slf" target="_blank" rel="noopener noreferrer">slf</a> - 简单日志门面（The Structured Logging Facade (SLF) ） (类似 SLF4J，但是它是结构化的，并且专为 Go 语言设计)</li><li><a href="https://github.com/ventu-io/slog" target="_blank" rel="noopener noreferrer">slog</a> - 为 Go 语言实现的结构化日志门面（Structured Logging Facade (SLF) ）</li><li><a href="https://github.com/davecgh/Go-spew" target="_blank" rel="noopener noreferrer">spew</a> - 为 Go 语言的数据结构实现了一个整洁的打印功能，有助于调试</li><li><a href="https://github.com/alexcesaro/log" target="_blank" rel="noopener noreferrer">stdlog</a> - Stdlog 是一个面向对象的库，提供了分级日志功能，对于定时任务很有用.</li><li><a href="https://github.com/hpcloud/tail" target="_blank" rel="noopener noreferrer">tail</a> - 这个 Go 语言软件包力争模拟 BSD tail 的功能</li><li><a href="https://github.com/xfxdev/xlog" target="_blank" rel="noopener noreferrer">xlog</a> - 插件架构以及灵活的日志系统，具有日志等级控制，多日志目标以及自定义日志格式功能</li><li><a href="https://github.com/rs/xlog" target="_blank" rel="noopener noreferrer">xlog</a> - 结构化日志 for <code>net/context</code> aware HTTP handlers ，可以灵活的分发</li><li><a href="https://github.com/uber-Go/zap" target="_blank" rel="noopener noreferrer">zap</a> - 快速的、结构化的、分级的日志库</li><li><a href="https://github.com/rs/zerolog" target="_blank" rel="noopener noreferrer">zerolog</a> - 零分配 JSON 日志.</li></ul><h2 id="机器学习" tabindex="-1"><a class="header-anchor" href="#机器学习"><span>机器学习</span></a></h2><p><em>机器学习库</em></p><ul><li><a href="https://github.com/jbrukh/bayesian" target="_blank" rel="noopener noreferrer">bayesian</a> - 贝叶斯分类器</li><li><a href="https://github.com/ryanbressler/CloudForest" target="_blank" rel="noopener noreferrer">CloudForest</a> - 纯 Go 语言编写的快速、灵活、多线程决策树</li><li><a href="https://github.com/MaxHalford/gaGo" target="_blank" rel="noopener noreferrer">gaGo</a> - 多种群，灵活的，并行的遗传算法</li><li><a href="https://github.com/white-pony/Go-fann" target="_blank" rel="noopener noreferrer">Go-fann</a> - 快速人工神经网络库(FANN)的 Go 语言借口.</li><li><a href="https://github.com/thoj/Go-galib" target="_blank" rel="noopener noreferrer">Go-galib</a> - Go 语言编写的遗传算法库</li><li><a href="https://github.com/daviddengcn/Go-pr" target="_blank" rel="noopener noreferrer">Go-pr</a> -  Go 语言模式识别库</li><li><a href="https://github.com/Goml/Gobrain" target="_blank" rel="noopener noreferrer">Gobrain</a> -  Go 语言编写的神经网络</li><li><a href="https://github.com/e-dard/Godist" target="_blank" rel="noopener noreferrer">Godist</a> - 多种概率分布及相关方法</li><li><a href="https://github.com/tomcraven/Goga" target="_blank" rel="noopener noreferrer">Goga</a> -  Go 语言遗传算法库</li><li><a href="https://github.com/sjwhitworth/Golearn" target="_blank" rel="noopener noreferrer">GoLearn</a> -  Go 语言通用机器学习库</li><li><a href="https://github.com/danieldk/Golinear" target="_blank" rel="noopener noreferrer">Golinear</a> - liblinear 库的 Go 语言接口</li><li><a href="https://github.com/cdipaolo/Goml" target="_blank" rel="noopener noreferrer">Goml</a> - 即时go语言机器学习库</li><li><a href="https://github.com/timkaye11/GoRecommend" target="_blank" rel="noopener noreferrer">GoRecommend</a> - Go 语言推荐算法库</li><li><a href="https://github.com/chewxy/GorGonia" target="_blank" rel="noopener noreferrer">GorGonia</a> - 基于图的计算库，类似于 Theano。提供了一些原型用于构建各种个样的机器学习和神经网络算法</li><li><a href="https://github.com/datastream/libsvm" target="_blank" rel="noopener noreferrer">libsvm</a> - libsvm 的 Go 语言版本，基于 LIBSVM 3.14.</li><li><a href="https://github.com/NullHypothesis/mlGo" target="_blank" rel="noopener noreferrer">mlGo</a> - 这个项目点目标是在 Go 语言中提供极简的机器学习算法</li><li><a href="https://github.com/jinyeom/neat" target="_blank" rel="noopener noreferrer">neat</a> - 即插即用的并行 Go 语言框架，用于增强拓扑神经网络 (NEAT).</li><li><a href="https://github.com/schuyler/neural-Go" target="_blank" rel="noopener noreferrer">neural-Go</a> - Go 语言实现的多层感知神经网络，通过反向传播算法进行训练.</li><li><a href="https://github.com/ThePaw/probab" target="_blank" rel="noopener noreferrer">probab</a> -概率分布函数、贝叶斯推理。使用纯 Go 语言编写</li><li><a href="https://github.com/muesli/reGommend" target="_blank" rel="noopener noreferrer">reGommend</a> - 推荐系统及协同过滤引擎</li><li><a href="https://github.com/eaigner/shield" target="_blank" rel="noopener noreferrer">shield</a> - 贝叶斯文吧分类器，包含灵活的分词器和存储后端</li></ul><h2 id="消息" tabindex="-1"><a class="header-anchor" href="#消息"><span>消息</span></a></h2><p><em>实现了消息系统的库</em></p><ul><li><a href="https://github.com/centrifugal/centrifuGo" target="_blank" rel="noopener noreferrer">CentrifuGo</a> - 实时消息服务器</li><li><a href="https://github.com/Godbus/dbus" target="_blank" rel="noopener noreferrer">dbus</a> - D-Bus的 Go 语言接口</li><li><a href="https://github.com/appleboy/drone-line" target="_blank" rel="noopener noreferrer">drone-line</a> - 通过软件包，docker 或是 Drone CI来发送 <a href="https://business.line.me/en/services/bot" target="_blank" rel="noopener noreferrer">Line</a> 通知</li><li><a href="https://github.com/olebedev/emitter" target="_blank" rel="noopener noreferrer">emitter</a> - 通过Go语言的方式发送事件消息，可以使用通配符，断言，取消发送等优秀特性</li><li><a href="https://github.com/asaskevich/EventBus" target="_blank" rel="noopener noreferrer">EventBus</a> - 轻量级事件库，支持异步</li><li><a href="https://github.com/osaminGo/gaurun-client" target="_blank" rel="noopener noreferrer">gaurun-client</a> - Go 语言编写的 Gaurun 客户端</li><li><a href="https://github.com/desertbit/glue" target="_blank" rel="noopener noreferrer">Glue</a> - 健壮的 Go 和 Javascript Socket 库 (可以用来替代 Socket.io).</li><li><a href="https://github.com/ventu-io/Go-longpoll" target="_blank" rel="noopener noreferrer">Go-longpoll</a> -  支持长轮询的发布与订阅</li><li><a href="https://github.com/TheCreeper/Go-notify" target="_blank" rel="noopener noreferrer">Go-notify</a> - 原生实现的桌面通知规范</li><li><a href="https://github.com/nsqio/Go-nsq" target="_blank" rel="noopener noreferrer">Go-nsq</a> - NSQ 官方 Go 语言库</li><li><a href="https://github.com/GooGollee/Go-socket.io" target="_blank" rel="noopener noreferrer">Go-socket.io</a> - Go 语言的 socket.io库 ,一个实时应用框架.</li><li><a href="https://github.com/maxatome/Go-vitotrol" target="_blank" rel="noopener noreferrer">Go-vitotrol</a> - Viessmann Vitotrol 服务的 Go 语言客户端</li><li><a href="https://github.com/trivaGo/Gollum" target="_blank" rel="noopener noreferrer">Gollum</a> - 一个 n:m 的多路复用器，从不同的源汇聚消息并向目标进行广播</li><li><a href="https://github.com/jcuga/Golongpoll" target="_blank" rel="noopener noreferrer">Golongpoll</a> - HTTP 长轮询服务器库，让 web 发布与订阅变的更简单.</li><li><a href="https://github.com/ian-kent/Goose" target="_blank" rel="noopener noreferrer">Goose</a> - Go 语言实现的服务器端事件发送</li><li><a href="https://github.com/Terry-Mao/Gopush-cluster" target="_blank" rel="noopener noreferrer">Gopush-cluster</a> - Gopush-cluster 是一个 Go 语言实现的支持集群的comet服务（支持 websocket，和tcp协议）</li><li><a href="https://github.com/appleboy/Gorush" target="_blank" rel="noopener noreferrer">Gorush</a> - 通知推送服务器，使用 <a href="https://github.com/sideshow/apns2" target="_blank" rel="noopener noreferrer">APNs2</a> 和 Google <a href="https://github.com/Google/Go-gcm" target="_blank" rel="noopener noreferrer">GCM</a>.</li><li><a href="https://github.com/smancke/guble" target="_blank" rel="noopener noreferrer">guble</a> - 一个使用通知推送(Google Firebase Cloud Messaging, Apple Push Notification services, SMS)、websockets 、REST API 的消息服务器。提供了分布式操作和消息持久化特性</li><li><a href="https://github.com/RichardKnop/machinery" target="_blank" rel="noopener noreferrer">machinery</a> - 异步任务队列，基于分布式消息处理</li><li><a href="https://github.com/Go-manGos/manGos" target="_blank" rel="noopener noreferrer">manGos</a> - 纯 Go 语言实现的 Nanomsg (&quot;Scalable Protocols&quot;)</li><li><a href="https://github.com/olahol/melody" target="_blank" rel="noopener noreferrer">melody</a> - 用于处理 websocket 会话的一个极简框架，包括广播和自动 ping/pong 处理</li><li><a href="https://github.com/nats-io/nats" target="_blank" rel="noopener noreferrer">NATS Go Client</a> - 轻量级高性能发布订阅(publish-subscribe) 以及分布式消息队列系统，这个一个Go语言库.</li><li><a href="https://github.com/rafaeljesus/nsq-event-bus" target="_blank" rel="noopener noreferrer">nsq-event-bus</a> - 针对 NSQ 的主题和频道进行了简单的封装</li><li><a href="https://github.com/dailymotion/oplog" target="_blank" rel="noopener noreferrer">oplog</a> - 原生的 oplog/replication 系统，用于 REST APIs</li><li><a href="https://github.com/tuxychandru/pubsub" target="_blank" rel="noopener noreferrer">pubsub</a> - 一个简单的 pubsub 软件包</li><li><a href="https://github.com/sybrexsys/RapidMQ" target="_blank" rel="noopener noreferrer">RapidMQ</a> - RapidMQ 是一个轻量级，可靠的本地消息队列管理库</li><li><a href="https://github.com/Shopify/sarama" target="_blank" rel="noopener noreferrer">sarama</a> - 用于 Apache Kafka 的库</li><li><a href="https://github.com/uniqush/uniqush-push" target="_blank" rel="noopener noreferrer">Uniqush-Push</a> - 基于 Redis 的统一推服务，用于服务器端向移动客户端推送消息</li><li><a href="https://github.com/pebbe/zmq4" target="_blank" rel="noopener noreferrer">zmq4</a> - ZeroMQ version 4的 GO 语言接口。也有适用于<a href="https://github.com/pebbe/zmq3" target="_blank" rel="noopener noreferrer">version 3</a> 及 <a href="https://github.com/pebbe/zmq2" target="_blank" rel="noopener noreferrer">version 2</a>的</li></ul><h2 id="杂项" tabindex="-1"><a class="header-anchor" href="#杂项"><span>杂项</span></a></h2><p><em>一些暂时无法归类的库</em></p><ul><li><a href="https://github.com/magic003/alice" target="_blank" rel="noopener noreferrer">alice</a> -  GO 语言依赖注入容器</li><li><a href="https://github.com/mholt/archiver" target="_blank" rel="noopener noreferrer">archiver</a> - 用于制作和解压 .zip 和 .tar.gz 文件的库和命令</li><li><a href="https://github.com/artyom/autoflags" target="_blank" rel="noopener noreferrer">autoflags</a> - 通过结构体自动定义命令行标记的go语言软件包</li><li><a href="https://github.com/kirillDanshin/avgRating" target="_blank" rel="noopener noreferrer">avgRating</a> - 利用 Wilson Score 方程计算平均分及评级</li><li><a href="https://github.com/dimiro1/banner" target="_blank" rel="noopener noreferrer">banner</a> - 在你的go语言应用中添加炫酷的横幅</li><li><a href="https://github.com/distatus/battery" target="_blank" rel="noopener noreferrer">battery</a> - 跨平台电源信息库</li><li><a href="https://github.com/icza/bitio" target="_blank" rel="noopener noreferrer">bitio</a> - 高度优化的比特级读写</li><li><a href="https://github.com/digitalcrab/browscap_Go" target="_blank" rel="noopener noreferrer">browscap_Go</a> - <a href="http://browscap.org/" target="_blank" rel="noopener noreferrer">Browser Capabilities Project</a>的 GO 语言库</li><li><a href="https://github.com/cstockton/Go-conv" target="_blank" rel="noopener noreferrer">conv</a> - conv 提供了一种快速且符合直觉的 GO 语言类型转换</li><li><a href="https://github.com/miolini/datacounter" target="_blank" rel="noopener noreferrer">datacounter</a> - Greaders/writer/HTTP.ResponseWriter 计数器</li><li><a href="https://github.com/pkg/errors" target="_blank" rel="noopener noreferrer">errors</a> - 提供简单的错误处理</li><li><a href="https://github.com/Go-chat-bot/bot" target="_blank" rel="noopener noreferrer">Go-chat-bot</a> - IRC、Slack、Telegram 聊天机器人</li><li><a href="https://github.com/jolestar/Go-commons-pool" target="_blank" rel="noopener noreferrer">Go-commons-pool</a> - 通用对象池</li><li><a href="https://github.com/hashicorp/Go-multierror" target="_blank" rel="noopener noreferrer">Go-multierror</a> - 这个 Go 语言库用于将一系列的错误作为一个整体来显示</li><li><a href="https://github.com/Go-openapi" target="_blank" rel="noopener noreferrer">Go-openapi</a> - 一些用于处理和利用 open-api 的库集合</li><li><a href="https://github.com/eapache/Go-resiliency" target="_blank" rel="noopener noreferrer">Go-resiliency</a> - GO 语言弹性模式</li><li><a href="https://github.com/oklahomer/Go-sarah" target="_blank" rel="noopener noreferrer">Go-sarah</a> - 用于构建聊天机器人的框架，支持 LINE, Slack, Gitter等等</li><li><a href="https://github.com/ventu-io/Go-shortid" target="_blank" rel="noopener noreferrer">Go-shortid</a> - 超短的、唯一的、非序列的、对 url 友好的 id</li><li><a href="https://github.com/gen2brain/Go-unarr" target="_blank" rel="noopener noreferrer">Go-unarr</a> - 解压缩库，可用于 RAR, TAR, ZIP 以及 7z 归档文件.</li><li><a href="https://github.com/satori/Go.uuid" target="_blank" rel="noopener noreferrer">Go.uuid</a> - 全球唯一标示符的实现(UUID)，同时支持生成和解析</li><li><a href="https://github.com/brianvoe/Gofakeit" target="_blank" rel="noopener noreferrer">Gofakeit</a> - Go 语言编写的随机数据生成器</li><li><a href="https://github.com/jakehl/Goid" target="_blank" rel="noopener noreferrer">Goid</a> - 生成和解析符合 RFC4122 规定的 V4 UUIDs.</li><li><a href="https://github.com/shirou/Gopsutil" target="_blank" rel="noopener noreferrer">Gopsutil</a> - 用于获取进程和系统资源利用率（cpu，内存，磁盘）的库，跨平台</li><li><a href="https://github.com/haxpax/Gosms" target="_blank" rel="noopener noreferrer">Gosms</a> - 你本地的SMS 网关，可以用来发送 SMS</li><li><a href="https://github.com/pariz/Gountries" target="_blank" rel="noopener noreferrer">Gountries</a> - 一个用来展示国家及其行政区划数据的库</li><li><a href="https://github.com/sbstjn/hanu" target="_blank" rel="noopener noreferrer">hanu</a> - 用于编写 Slack 聊天机器人的库</li><li><a href="https://github.com/dimiro1/health" target="_blank" rel="noopener noreferrer">health</a> - 简单易用、可扩展的健康检查库</li><li><a href="https://github.com/osaminGo/indiGo" target="_blank" rel="noopener noreferrer">indiGo</a> - 唯一id生成器，使用 Sonyflake 并通过Base58进行编码</li><li><a href="https://github.com/albrow/jobs" target="_blank" rel="noopener noreferrer">jobs</a> - 持久化且灵活的后台任务库</li><li><a href="https://github.com/zhulik/margelet" target="_blank" rel="noopener noreferrer">margelet</a> - 用于创建 Telegram 聊天机器人的库</li><li><a href="https://github.com/xor-gate/secdl" target="_blank" rel="noopener noreferrer">secdl</a> - Lighttpd ModSecDownload alGorithm ported to Go to secure download urls.</li><li><a href="https://github.com/shomali11/slacker" target="_blank" rel="noopener noreferrer">slacker</a> - 用于编写 Slack 聊天机器人的库，非常易用</li><li><a href="https://github.com/Go-playground/stats" target="_blank" rel="noopener noreferrer">stats</a> - 监控 Go 内存状态及系统状态，通过UDP将数据发送到任何地方</li><li><a href="https://github.com/agext/uuid" target="_blank" rel="noopener noreferrer">uuid</a> - 生成，编解码 UUIDs v1 ，具有快速的或或密钥级随机节点标识</li><li><a href="https://github.com/azr/generators/tree/master/varhandler" target="_blank" rel="noopener noreferrer">VarHandler</a> - Generate boilerplate HTTP input and ouput handling.</li><li><a href="https://github.com/txgruppi/werr" target="_blank" rel="noopener noreferrer">werr</a> - Error Wrapper creates an wrapper for the error type in Go which captures the File, Line and Stack of where it was called.</li><li><a href="https://github.com/Go-xkg/xkg" target="_blank" rel="noopener noreferrer">xkg</a> - X Keyboard Grabber</li><li><a href="https://github.com/huandu/xstrings" target="_blank" rel="noopener noreferrer">xstrings</a> - 一些有用的字符串函数的集合</li></ul><h2 id="自然语言处理" tabindex="-1"><a class="header-anchor" href="#自然语言处理"><span>自然语言处理</span></a></h2><p><em>用于处理人类语言的库</em></p><ul><li><a href="https://github.com/danieldk/dpar/" target="_blank" rel="noopener noreferrer">dpar</a> - 基于变换的统计依赖关系解析器</li><li><a href="https://github.com/ThePaw/Go-eco" target="_blank" rel="noopener noreferrer">Go-eco</a> - 相似性，相异性及距离度量；差异性，均匀度和不均匀度测量；物种多样性估计；群落线模型</li><li><a href="https://github.com/nicksnyder/Go-i18n/" target="_blank" rel="noopener noreferrer">Go-i18n</a> - 软件包及相关工具，用于处理本地化文本</li><li><a href="https://github.com/dveselov/mystem" target="_blank" rel="noopener noreferrer">Go-mystem</a> - Yandex.Mystem 的  CGo 接口， Yandex.Mystem 是一个俄语词汇形态学分析器</li><li><a href="https://github.com/nuance/Go-nlp" target="_blank" rel="noopener noreferrer">Go-nlp</a> - 在进行自然语言工作时用于处理离散概率分布一些工具，以及其他的一些有用的工具</li><li><a href="https://github.com/aGonopol/Go-stem" target="_blank" rel="noopener noreferrer">Go-stem</a> - 波特词干算法的一个实现</li><li><a href="https://github.com/mozillazg/Go-unidecode" target="_blank" rel="noopener noreferrer">Go-unidecode</a> - Unicode 文本音译为 ASCII 文本</li><li><a href="https://github.com/danieldk/Go2vec" target="_blank" rel="noopener noreferrer">Go2vec</a> - 利用 Go 语言读取和处理 word2vec</li><li><a href="https://github.com/yanyiwu/Gojieba" target="_blank" rel="noopener noreferrer">Gojieba</a> - 结巴分词的 Go 语言实现的 <a href="https://github.com/fxsjy/jieba" target="_blank" rel="noopener noreferrer">jieba</a> ，结巴分词是一个用于中文的分词算法</li><li><a href="https://github.com/rjohnsondev/Golibstemmer" target="_blank" rel="noopener noreferrer">Golibstemmer</a> -  snowball libstemmer 库的 Go 语言接口，包括了对 porter 2 的支持</li><li><a href="https://github.com/fiam/Gounidecode" target="_blank" rel="noopener noreferrer">Gounidecode</a> - Go 语言的 Unicode 直译器 (通常称之为 unidecode)</li><li><a href="https://github.com/Goodsign/icu" target="_blank" rel="noopener noreferrer">icu</a> - icu4c C 库的 CGo 接口，包括了检测和转换函数。保证了 version 50.1 版本的兼容性</li><li><a href="https://github.com/Goodsign/libtextcat" target="_blank" rel="noopener noreferrer">libtextcat</a> - libtextcat C 库的 CGo 接口。保证了version 2.2 版本的兼容性</li><li><a href="https://github.com/awsong/MMSEGo" target="_blank" rel="noopener noreferrer">MMSEGo</a> -  Go 语言实现的 <a href="http://technology.chtsai.org/mmseg/" target="_blank" rel="noopener noreferrer">MMSEG</a> （一个中文分词算法）</li><li><a href="https://github.com/Shixzie/nlp" target="_blank" rel="noopener noreferrer">nlp</a> - 从字符串中提取特定的值并填充结构体</li><li><a href="https://github.com/rookii/paicehusk" target="_blank" rel="noopener noreferrer">paicehusk</a> - Go 语言实现的  Paice/Husk 词干算法</li><li><a href="https://github.com/a2800276/porter" target="_blank" rel="noopener noreferrer">porter</a> - Martin Porter 实现的 C 语言版本的 Porter 词干算法的 Go 语言接口，非常直观</li><li><a href="https://github.com/zhenjl/porter2" target="_blank" rel="noopener noreferrer">porter2</a> - 非常快速的 Porter 2 stemmer.</li><li><a href="https://github.com/jdkato/prose" target="_blank" rel="noopener noreferrer">prose</a> - 文本处理库，支持词语切分、词性标记、命名实体提取等功能</li><li><a href="https://github.com/Obaied/RAKE.Go" target="_blank" rel="noopener noreferrer">RAKE.Go</a> -  快速自动关键字提取算法(Rapid Automatic Keyword Extraction：RAKE)的 Go 语言接口</li><li><a href="https://github.com/blevesearch/segment" target="_blank" rel="noopener noreferrer">segment</a> - 一个用于进行 Unicode 文本分割的库，实现了 <a href="http://www.unicode.org/reports/tr29/" target="_blank" rel="noopener noreferrer">Unicode Standard Annex #29</a>中描述的功能</li><li><a href="https://github.com/neurosnap/sentences" target="_blank" rel="noopener noreferrer">sentences</a> - 语句标记器：将文字段落转换为语句列表</li><li><a href="https://github.com/osaminGo/shamoji" target="_blank" rel="noopener noreferrer">shamoji</a> -  shamoji 是一个Go语言编写的词过滤软件包</li><li><a href="https://github.com/Goodsign/snowball" target="_blank" rel="noopener noreferrer">snowball</a> - Snowball 分词器的Go语言接口，提供了分词提取的功能 <a href="http://snowball.tartarus.org/" target="_blank" rel="noopener noreferrer">Snowball native</a>.</li><li><a href="https://github.com/dchest/stemmer" target="_blank" rel="noopener noreferrer">stemmer</a> -  Go 语言分词器软件包，包括了英语和德语分词器</li><li><a href="https://github.com/pebbe/textcat" target="_blank" rel="noopener noreferrer">textcat</a> - 基于 n-gram 的 Go 语言文本分类软件包，支持utf-8 和 raw 文本</li><li><a href="https://github.com/abadojack/whatlangGo" target="_blank" rel="noopener noreferrer">whatlangGo</a> - Go 语言的自然语言检测包。支持84种语言和24种书写 (如拉丁，西里尔等书写系统)。</li><li><a href="https://github.com/olebedev/when" target="_blank" rel="noopener noreferrer">when</a> - 英语、俄语的自然语言日期、时间表达解析器，可以插入规则</li></ul><h2 id="网络" tabindex="-1"><a class="header-anchor" href="#网络"><span>网络</span></a></h2><p><em>用于在不同网络层工作的库</em></p><ul><li><a href="https://github.com/mdlayher/arp" target="_blank" rel="noopener noreferrer">arp</a> - 实现了 ARP 协议，遵循 RFC 826.</li><li><a href="https://github.com/stabbycutyou/buffstreams" target="_blank" rel="noopener noreferrer">buffstreams</a> - 简单易用的 protocolbuffer 数据流，基于 TCP</li><li><a href="https://github.com/zubairhamed/canopus" target="_blank" rel="noopener noreferrer">canopus</a> - CoAP 客户端/服务器实现 (RFC 7252)</li><li><a href="https://github.com/mdlayher/dhcp6" target="_blank" rel="noopener noreferrer">dhcp6</a> - dhcp6 实现了一个DHCPv6 服务器，遵循RFC 3315.</li><li><a href="https://github.com/miekg/dns" target="_blank" rel="noopener noreferrer">dns</a> - 用于处理 DNS 的 Go 语言库</li><li><a href="https://github.com/songgao/ether" target="_blank" rel="noopener noreferrer">ether</a> - 跨平台 Go 语言库，用于发送和接收以太帧</li><li><a href="https://github.com/mdlayher/ethernet" target="_blank" rel="noopener noreferrer">ethernet</a> - ethernet 实现了IEEE 802.3 Ethernet II 帧以及IEEE 802.1Q VLAN 标签的组装和剥离.</li><li><a href="https://github.com/valyala/fasthttp" target="_blank" rel="noopener noreferrer">fasthttp</a> - fasthttp 是一个快速的 HTTP 实现，是 net/http的10倍性能</li><li><a href="https://github.com/jlaffaye/ftp" target="_blank" rel="noopener noreferrer">ftp</a> - ftp 实现了一个 FTP 客户端，遵循 <a href="http://tools.ietf.org/html/rfc959" target="_blank" rel="noopener noreferrer">RFC 959</a>.</li><li><a href="https://github.com/Allenxuxu/gev" target="_blank" rel="noopener noreferrer">gev</a> - 一个轻量、比标准库更快的基于 Reactor 模式的非阻塞 TCP 网络库，支持自定义协议，轻松快速搭建高性能服务器。</li><li><a href="https://github.com/hashicorp/Go-getter" target="_blank" rel="noopener noreferrer">Go-getter</a> - 一个用于通过 URL 从多种源下载文件或目录的 Go 语言库</li><li><a href="https://github.com/ccding/Go-stun" target="_blank" rel="noopener noreferrer">Go-stun</a> - Go 语言实现的 STUN 客户端 (RFC 3489 及 RFC 5389).</li><li><a href="https://github.com/osrg/Gobgp" target="_blank" rel="noopener noreferrer">Gobgp</a> - Go 语言实现的BGP</li><li><a href="https://github.com/sunwxg/Golibwireshark" target="_blank" rel="noopener noreferrer">Golibwireshark</a> - Golibwireshark 使用 libwireshark 库来解析 pcap 文件并且分析数据</li><li><a href="https://github.com/Google/Gopacket" target="_blank" rel="noopener noreferrer">Gopacket</a> - 用于报文处理的库</li><li><a href="https://github.com/akrennmair/Gopcap" target="_blank" rel="noopener noreferrer">Gopcap</a> - libpcap的 Go 语言封装</li><li><a href="https://github.com/sunwxg/Goshark" target="_blank" rel="noopener noreferrer">Goshark</a> - Goshark 使用 tshark 来对 IP 报文进行解码并创建数据结构用于分析报文</li><li><a href="https://github.com/soniah/Gosnmp" target="_blank" rel="noopener noreferrer">Gosnmp</a> -用于执行 SNMP 操作的库</li><li><a href="https://github.com/gansidui/Gotcp" target="_blank" rel="noopener noreferrer">Gotcp</a> - 用于快速编写 tcp 应用的库</li><li><a href="https://github.com/cavaliercoder/grab" target="_blank" rel="noopener noreferrer">grab</a> - 管理文件下载的 Go 语言库</li><li><a href="https://github.com/koofr/graval" target="_blank" rel="noopener noreferrer">graval</a> - 试验性的 FTP 服务器框架</li><li><a href="https://github.com/udhos/jaziGo" target="_blank" rel="noopener noreferrer">jaziGo</a> - JaziGo 是一个 Go 语言编写的工具，用于获取多种网络设备的配置.</li><li><a href="https://github.com/xtaci/kcp-Go" target="_blank" rel="noopener noreferrer">kcp-Go</a> - KCP - 快速可靠的 ARQ 协议.</li><li><a href="https://github.com/xtaci/kcptun" target="_blank" rel="noopener noreferrer">kcptun</a> - 超级简单、快速的 udp 通道，基于KCP 协议</li><li><a href="https://github.com/fanux/lhttp" target="_blank" rel="noopener noreferrer">lhttp</a> - 强大的 websocket 框架，可以更简单的构建你自己的 IM 服务器*</li><li><a href="https://github.com/ian-kent/linkio" target="_blank" rel="noopener noreferrer">linkio</a> - 接口读写速度模拟器</li><li><a href="https://github.com/kirillDanshin/llb" target="_blank" rel="noopener noreferrer">llb</a> - 一个非常简单但快速的后端代理服务器。对于快速重定向到预定义域名很有用，无内存分配，响应速度快</li><li><a href="https://github.com/hashicorp/mdns" target="_blank" rel="noopener noreferrer">mdns</a> - 简单的 mDNS (组播 DNS) 客户端/服务器库</li><li><a href="https://eclipse.org/paho/clients/Golang/" target="_blank" rel="noopener noreferrer">mqttPaho</a> - Paho 客户端提供了一个 MQTT 客户端库，用于通过TCP, TLS 或 WebSockets 和 MQTT broker 建立连接</li><li><a href="https://github.com/aybabtme/portproxy" target="_blank" rel="noopener noreferrer">portproxy</a> - 简单的 TCP 代理，加入了对CORS 的支持</li><li><a href="https://github.com/polera/publicip" target="_blank" rel="noopener noreferrer">publicip</a> - publicip 库会返回你的公网 ip 地址 (互联网出口).</li><li><a href="https://github.com/mdlayher/raw" target="_blank" rel="noopener noreferrer">raw</a> - raw 允许你在设备驱动层读写网络接口的数据</li><li><a href="https://github.com/pkg/sftp" target="_blank" rel="noopener noreferrer">sftp</a> - sftp 实现了<a href="https://filezilla-project.org/specs/draft-ietf-secsh-filexfer-02.txt." target="_blank" rel="noopener noreferrer">https://filezilla-project.org/specs/draft-ietf-secsh-filexfer-02.txt.</a>中描述的 SSH 文件传输协议</li><li><a href="https://github.com/gliderlabs/ssh" target="_blank" rel="noopener noreferrer">ssh</a> - 用于创建 SSH 服务器的高级 API (封装crypto/ssh).</li><li><a href="https://github.com/eduardonunesp/sslb" target="_blank" rel="noopener noreferrer">sslb</a> - 一个超简单的负载均衡库，仅仅是一个为了获取一些性能目标的小项目</li><li><a href="https://github.com/firstrow/tcp_server" target="_blank" rel="noopener noreferrer">tcp_server</a> - 一个用于快速创建 tcp 服务器的库</li><li><a href="https://github.com/anacrolix/utp" target="_blank" rel="noopener noreferrer">utp</a> - Go uTP 微传输协议的实现</li><li><a href="https://github.com/songgao/water" target="_blank" rel="noopener noreferrer">water</a> - 简单的 TUN/TAP 库</li><li><a href="https://github.com/masterzen/winrm" target="_blank" rel="noopener noreferrer">winrm</a> - Go WinRM 客户端，用于在 Windows 设备上远程执行命令</li><li><a href="https://github.com/xfxdev/xtcp" target="_blank" rel="noopener noreferrer">xtcp</a> - TCP 服务器框架，支持同时全双工通信。可以优雅的关闭，自定义协议</li></ul><h2 id="opengl" tabindex="-1"><a class="header-anchor" href="#opengl"><span>OpenGL</span></a></h2><p><em>用于操作OpenGL的库.</em></p><ul><li><a href="https://github.com/Go-gl/gl" target="_blank" rel="noopener noreferrer">gl</a> - OpenGL的 Go 语言接口</li><li><a href="https://github.com/Go-gl/glfw" target="_blank" rel="noopener noreferrer">glfw</a> - GLFW 3 的 Go 语言接口</li><li><a href="https://github.com/Goxjs/gl" target="_blank" rel="noopener noreferrer">Goxjs/gl</a> - Go 语言跨平台 OpenGL 接口(OS X, Linux, Windows, browsers, iOS, Android).</li><li><a href="https://github.com/Goxjs/glfw" target="_blank" rel="noopener noreferrer">Goxjs/glfw</a> - Go 语言跨平台 glfw 库，用于创建 OpenGL 上下文并接收事件</li><li><a href="https://github.com/Go-gl/mathgl" target="_blank" rel="noopener noreferrer">mathgl</a> - Go 语言 3D 数学库，专注于3D，受到 GLM 启发</li></ul><h2 id="orm" tabindex="-1"><a class="header-anchor" href="#orm"><span>ORM</span></a></h2><p><em>实现对象关系映射或数据映射技术的库</em></p><ul><li><a href="https://github.com/astaxie/beeGo/tree/master/orm" target="_blank" rel="noopener noreferrer">beeGo orm</a> - 一个强大的 Go 语言 orm 框架，支持 pq/mysql/sqlite3.</li><li><a href="https://github.com/Go-pg/pg" target="_blank" rel="noopener noreferrer">Go-pg</a> - PostgreSQL ORM ，专注PostgreSQL 特定功能及性能</li><li><a href="https://github.com/Gosuri/Go-store" target="_blank" rel="noopener noreferrer">Go-store</a> - 简单快速的基于Redis 的键值对存储库</li><li><a href="https://github.com/cosiner/Gomodel" target="_blank" rel="noopener noreferrer">Gomodel</a> - 轻量级、快速的、类 orm 库，帮助你和数据库进行交互</li><li><a href="https://gorm.io/zh_CN/" target="_blank" rel="noopener noreferrer">gorm</a> - 超棒的 Go 语言 ORM 库，对开发者非常友好</li><li><a href="https://github.com/Go-Gorp/Gorp" target="_blank" rel="noopener noreferrer">Gorp</a> - 关系持久的、类 orm 的 Go 语言库</li><li><a href="https://github.com/markbates/pop" target="_blank" rel="noopener noreferrer">pop/soda</a> - 数据库迁移、创建、ORM 等等，支持 MySQL, PostgreSQL, 以及 SQLite.</li><li><a href="https://github.com/coocood/qbs" target="_blank" rel="noopener noreferrer">QBS</a> - 利用结构体进行标准查询，是一个 Go 语言 ORM</li><li><a href="https://github.com/Go-reform/reform" target="_blank" rel="noopener noreferrer">reform</a> - 一个更优秀的 ORM，基于非空接口和代码生成</li><li><a href="https://github.com/volatiletech/sqlboiler" target="_blank" rel="noopener noreferrer">SQLBoiler</a> - ORM 生成器。为你的数据库表单生成一个功能全面、快速的 ORM</li><li><a href="https://github.com/upper/db" target="_blank" rel="noopener noreferrer">upper.io/db</a> - 通过使用封装了成熟的数据库驱动的适配器，来使用单一接口与不同的数据源进行交互</li><li><a href="https://github.com/Go-xorm/xorm" target="_blank" rel="noopener noreferrer">Xorm</a> - 简单、强大的 Go 语言 orm</li><li><a href="https://github.com/albrow/zoom" target="_blank" rel="noopener noreferrer">Zoom</a> - 超快的数据存储于查询引擎，基于 Redis 构建</li></ul><h2 id="包管理" tabindex="-1"><a class="header-anchor" href="#包管理"><span>包管理</span></a></h2><p><em>用于进行包和依赖管理的库</em></p><ul><li><a href="https://github.com/Golang/dep" target="_blank" rel="noopener noreferrer">dep</a> - Go 语言依赖工具.</li><li><a href="https://github.com/LyricalSecurity/giGo" target="_blank" rel="noopener noreferrer">giGo</a> - 类似 PIP 的依赖管理工具。支持私有仓库和哈希</li><li><a href="https://github.com/Masterminds/glide" target="_blank" rel="noopener noreferrer">glide</a> - 轻松管理你的 GO 语言包发布者以及发布包。 受到类似 Maven, Bundler, 和 Pip 这些工具的的启发</li><li><a href="https://github.com/tools/Godep" target="_blank" rel="noopener noreferrer">Godep</a> - Go 语言依赖工具，Godep 可以帮助开发者修复库的依赖关系</li><li><a href="https://github.com/mattn/Gom" target="_blank" rel="noopener noreferrer">Gom</a> - Go Manager</li><li><a href="https://github.com/nitrous-io/Goop" target="_blank" rel="noopener noreferrer">Goop</a> - 简单的依赖管理工具，手到 Bundler 的启发</li><li><a href="https://github.com/gpmGo/Gopm" target="_blank" rel="noopener noreferrer">Gopm</a> - Go 包管理器</li><li><a href="https://github.com/kardianos/Govendor" target="_blank" rel="noopener noreferrer">Govendor</a> - Go 包管理器。 Go 语言 vendor 工具，兼容标准 vendor 文件</li><li><a href="https://github.com/pote/gpm" target="_blank" rel="noopener noreferrer">gpm</a> -  Go 语言包管理工具</li><li><a href="https://github.com/FiloSottile/gvt" target="_blank" rel="noopener noreferrer">gvt</a> - <code>gvt</code> 是一个简单的发布管理工具(aka Go15VENDOREXPERIMENT), 基于 gb-vendor.</li><li><a href="https://github.com/VividCortex/johnny-deps" target="_blank" rel="noopener noreferrer">johnny-deps</a> - 极简的依赖版本管理工具，使用 git</li><li><a href="https://github.com/jingweno/nut" target="_blank" rel="noopener noreferrer">nut</a> - Go 语言依赖管理</li><li><a href="https://github.com/DamnWidget/VenGo" target="_blank" rel="noopener noreferrer">VenGo</a> - 创建并管理可以导出的，隔离的 Go 语言虚拟环境</li></ul><h2 id="查询语言" tabindex="-1"><a class="header-anchor" href="#查询语言"><span>查询语言</span></a></h2><ul><li><a href="https://github.com/tmc/graphql" target="_blank" rel="noopener noreferrer">graphql</a> - graphql 解析器 + 实用工具</li><li><a href="https://github.com/sevki/graphql" target="_blank" rel="noopener noreferrer">graphql</a> - Go 语言实现的 GraphQL</li><li><a href="https://github.com/neelance/graphql-Go" target="_blank" rel="noopener noreferrer">graphql</a> - 专注于易用性的 GraphQL 服务器</li><li><a href="https://github.com/graphql-Go/graphql" target="_blank" rel="noopener noreferrer">graphql-Go</a> - 为 Go 语言实现的 GraphQL</li><li><a href="https://github.com/elgs/jsonql" target="_blank" rel="noopener noreferrer">jsonql</a> - JSON 查询表达式库</li></ul><h2 id="资源嵌入" tabindex="-1"><a class="header-anchor" href="#资源嵌入"><span>资源嵌入</span></a></h2><ul><li><a href="https://github.com/mjibson/esc" target="_blank" rel="noopener noreferrer">esc</a> - 在 Go 语言程序中嵌入文件并为其提供 HTTP.FileSystem 接口</li><li><a href="https://github.com/UnnoTed/fileb0x" target="_blank" rel="noopener noreferrer">fileb0x</a> - 一个用于在 Go 语言程序中嵌入文件的工具，专注于可定制化和易用性</li><li><a href="https://github.com/jteeuwen/Go-bindata" target="_blank" rel="noopener noreferrer">Go-bindata</a> - 一个用于将文件转换为可管理的 Go 语言代码的工具</li><li><a href="https://github.com/pyros2097/Go-embed" target="_blank" rel="noopener noreferrer">Go-embed</a> - 生成用于嵌入资源文件到库或可执行文件的 Go 语言代码</li><li><a href="https://github.com/omeid/Go-resources" target="_blank" rel="noopener noreferrer">Go-resources</a> - 一个简洁的 Go 语言资源嵌入工具</li><li><a href="https://github.com/GeertJohan/Go.rice" target="_blank" rel="noopener noreferrer">Go.rice</a> - Go.rice 是一个让你轻松使用 html,js,css,图片以及模板这类资源的库</li><li><a href="https://github.com/Go-playground/statics" target="_blank" rel="noopener noreferrer">statics</a> - 将静态资源嵌入到 Go 文件中，用于单独二进制编译+使用http.FileSystem + symlinks.</li><li><a href="https://github.com/rakyll/statik" target="_blank" rel="noopener noreferrer">statik</a> - 将静态文件嵌入到 Go 语言可执行文件中</li><li><a href="https://github.com/wlbr/templify" target="_blank" rel="noopener noreferrer">templify</a> - 将外部目标文件嵌入到 Go 代码中来创建单独的二进制文件</li><li><a href="https://github.com/shurcooL/vfsgen" target="_blank" rel="noopener noreferrer">vfsgen</a> - 生成一个 vfsdata.Go 文件，静态实现了一个虚拟文件系统</li></ul><h2 id="科学及数据分析" tabindex="-1"><a class="header-anchor" href="#科学及数据分析"><span>科学及数据分析</span></a></h2><p><em>用于科学计算和数据分析的库</em></p><ul><li><a href="https://github.com/ziutek/blas" target="_blank" rel="noopener noreferrer">blas</a> - BLAS (基础线性代数子程序 Linear Algebra Subprograms)的 Go 语言实现</li><li><a href="https://github.com/vdobler/chart" target="_blank" rel="noopener noreferrer">chart</a> - 简单的图表绘图库。支持多种图表类型</li><li><a href="https://github.com/soniah/evaler" target="_blank" rel="noopener noreferrer">evaler</a> - 简单浮点算数表达式求值器</li><li><a href="https://github.com/VividCortex/ewma" target="_blank" rel="noopener noreferrer">ewma</a> - 指数移动加权平均值</li><li><a href="https://github.com/skelterjohn/geom" target="_blank" rel="noopener noreferrer">geom</a> - 2D 几何</li><li><a href="https://github.com/mjibson/Go-dsp" target="_blank" rel="noopener noreferrer">Go-dsp</a> - 数字信号处理</li><li><a href="https://github.com/ematvey/Go-fn" target="_blank" rel="noopener noreferrer">Go-fn</a> - 一些没有包含在 math pkg 中的数学函数</li><li><a href="https://github.com/ThePaw/Go-gt" target="_blank" rel="noopener noreferrer">Go-gt</a> - 图论算法</li><li><a href="https://github.com/skelterjohn/Go.matrix" target="_blank" rel="noopener noreferrer">Go.matrix</a> - 线性代数</li><li><a href="https://github.com/varver/Gocomplex" target="_blank" rel="noopener noreferrer">Gocomplex</a> - 复数库</li><li><a href="https://github.com/anschelsc/Gofrac" target="_blank" rel="noopener noreferrer">Gofrac</a> - Go 语言分数库，支持基本算术</li><li><a href="https://github.com/VividCortex/Gohistogram" target="_blank" rel="noopener noreferrer">Gohistogram</a> - 数据流的近似直方图</li><li><a href="https://github.com/Gonum/matrix" target="_blank" rel="noopener noreferrer">Gonum/mat64</a> - 矩阵计算通用包。 mat64 提供了用于进行64位浮点基础线性代数操作的功能</li><li><a href="https://github.com/Gonum/plot" target="_blank" rel="noopener noreferrer">Gonum/plot</a> - Gonum/plot 提供了用于创建和绘制图表的 API</li><li><a href="https://github.com/gyuho/Goraph" target="_blank" rel="noopener noreferrer">Goraph</a> - 纯 Go 语言编写的图论库（数据结构，算法可视化）</li><li><a href="https://github.com/ematvey/Gostat" target="_blank" rel="noopener noreferrer">Gostat</a> - 统计库</li><li><a href="https://github.com/yourbasic/graph" target="_blank" rel="noopener noreferrer">graph</a> - 包含基础图算法的库</li><li><a href="https://github.com/ChristopherRabotin/ode" target="_blank" rel="noopener noreferrer">ode</a> - 普通微分方程 (ODE) 求解器。支持扩展状态及基于通道的迭代算法终止条件</li><li><a href="https://github.com/alixaxel/pagerank" target="_blank" rel="noopener noreferrer">pagerank</a> - Go 语言实现的加权网页排名（ PageRank）算法</li><li><a href="https://github.com/clayGod/PiHex" target="_blank" rel="noopener noreferrer">PiHex</a> - 贝利-波尔温-普劳夫公式（&quot;Bailey-Borwein-Plouffe&quot;）算法的实现，用于计算十六进制π</li><li><a href="https://github.com/montanaflynn/stats" target="_blank" rel="noopener noreferrer">stats</a> - 统计库，包含一些 Go 语言标准库中漏掉的常用函数</li><li><a href="https://github.com/nytlabs/streamtools" target="_blank" rel="noopener noreferrer">streamtools</a> - 通用图形化工具，用于处理流数据</li><li><a href="https://github.com/spate/vectormath" target="_blank" rel="noopener noreferrer">vectormath</a> - 给 Go 语言用的 Vectormath , 是对索尼的矢量数学库中 C 语言函数的改写,可以在 Bullet-2.79 源码中找到 (当前不活跃)</li></ul><h2 id="安全" tabindex="-1"><a class="header-anchor" href="#安全"><span>安全</span></a></h2><p><em>可以帮助你增强应用程序安全性的库</em></p><ul><li><a href="https://github.com/hlandau/acme" target="_blank" rel="noopener noreferrer">acmetool</a> — ACME (Let&#39;s Encrypt) 客户端工具，有自动延长功能.</li><li><a href="https://github.com/jaredfolkins/badactor" target="_blank" rel="noopener noreferrer">BadActor</a> - 一个驻留在内存中的，应用驱动的监控程序，受 fail2ban 的启发</li><li><a href="https://github.com/hillu/Go-yara" target="_blank" rel="noopener noreferrer">Go-yara</a> - <a href="https://github.com/plusvic/yara" target="_blank" rel="noopener noreferrer">YARA</a>的 Go 语言接口，号称是 &quot;对于恶意软件研究者（以及其他人）来说是模式匹配的瑞士军刀</li><li><a href="https://github.com/xenolf/leGo" target="_blank" rel="noopener noreferrer">leGo</a> - 纯 Go ACME 客户端库及命令行工具</li><li><a href="https://github.com/awnumar/memguard" target="_blank" rel="noopener noreferrer">memguard</a> - 一个用于处理内存中敏感数据的 Go 语言库</li><li><a href="https://github.com/hlandau/passlib" target="_blank" rel="noopener noreferrer">passlib</a> - 不过时的密码哈希库</li><li><a href="https://github.com/unrolled/secure" target="_blank" rel="noopener noreferrer">secure</a> - Go 语言 HTTP 中间件，为 Go 提供了一些安全功能</li><li><a href="https://github.com/elithrar/simple-scrypt" target="_blank" rel="noopener noreferrer">simple-scrypt</a> - Scrypt 库，具有简单、易懂的 API，同时具有内置的自动校准功能</li><li><a href="https://github.com/ssh-vault/ssh-vault" target="_blank" rel="noopener noreferrer">ssh-vault</a> - 利用 ssh 秘钥加解密</li></ul><h2 id="序列化" tabindex="-1"><a class="header-anchor" href="#序列化"><span>序列化</span></a></h2><p><em>用于进行二进制序列化的库和工具</em></p><ul><li><a href="https://github.com/PromonLogicalis/asn1" target="_blank" rel="noopener noreferrer">asn1</a> - Asn.1 BER 及 DER 编码库</li><li><a href="https://github.com/pascaldekloe/colfer" target="_blank" rel="noopener noreferrer">colfer</a> - 用于生成 Colfer 二进制格式代码</li><li><a href="https://github.com/glycerine/Go-capnproto" target="_blank" rel="noopener noreferrer">Go-capnproto</a> - Go 语言用的 Cap&#39;n Proto 库及解析器</li><li><a href="https://github.com/glycerine/bambam" target="_blank" rel="noopener noreferrer">bambam</a> - 用于 Go 语言生成 Cap&#39;n Proto schemas 的生成器</li><li><a href="https://github.com/uGorji/Go" target="_blank" rel="noopener noreferrer">Go-codec</a> - 高性能、多功能、规范化编码解码以及 rpc 库， 用于 msgpack, cbor 和 json，支持基于运行时的 OR 码生成</li><li><a href="https://github.com/GoGo/protobuf" target="_blank" rel="noopener noreferrer">GoGoprotobuf</a> - Go 语言的 Protocol Buffer 库</li><li><a href="https://github.com/Golang/protobuf" target="_blank" rel="noopener noreferrer">Goprotobuf</a> - 通过库和协议编译器插件使 Go 语言支持 Google的 protocol buffers.</li><li><a href="https://github.com/json-iterator/Go" target="_blank" rel="noopener noreferrer">jsoniter</a> -高性能，100% 兼容的&quot;encoding/json&quot; 替代品</li><li><a href="https://github.com/mitchellh/mapstructure" target="_blank" rel="noopener noreferrer">mapstructure</a> - 用于对原生键值对进行解码生成 Go 语言结构体</li><li><a href="https://github.com/yvasiyarov/php_session_decoder" target="_blank" rel="noopener noreferrer">php_session_decoder</a> - 用于协同 PHP session 格式数据和 PHP 序列化／反序列化函数工作的go语言库</li><li><a href="https://github.com/tuvistavie/structomap" target="_blank" rel="noopener noreferrer">structomap</a> - 用于从静态结构体简单、动态的生成键值对的库</li></ul><h2 id="服务器程序" tabindex="-1"><a class="header-anchor" href="#服务器程序"><span>服务器程序</span></a></h2><ul><li><a href="https://github.com/xyproto/algernon" target="_blank" rel="noopener noreferrer">algernon</a> - HTTP/2 web 服务器，支持 Lua、Markdown、GCSS 和 Amber.</li><li><a href="https://github.com/mholt/caddy" target="_blank" rel="noopener noreferrer">Caddy</a> - Caddy 是一个备选的 HTTP/2 web 服务器，配置简单，使用方便。</li><li><a href="https://www.consul.io/" target="_blank" rel="noopener noreferrer">consul</a> - Consul 是一个用于服务发现、监控和配置的工具</li><li><a href="https://github.com/cortesi/devd" target="_blank" rel="noopener noreferrer">devd</a> - 开发者使用的本地 web 服务器</li><li><a href="https://github.com/coreos/etcd" target="_blank" rel="noopener noreferrer">etcd</a> - 高可用性的键值存储，用于分享配置和服务发现</li><li><a href="https://github.com/minio/minio" target="_blank" rel="noopener noreferrer">minio</a> - Minio 是一个分布式对象存储服务器</li><li><a href="http://nsq.io/" target="_blank" rel="noopener noreferrer">nsq</a> - 一个实时的分布式消息平台</li><li><a href="https://github.com/sci4me/yakvs" target="_blank" rel="noopener noreferrer">yakvs</a> - 小型化、网络化、基于内存的键值存储</li></ul><h2 id="模板引擎" tabindex="-1"><a class="header-anchor" href="#模板引擎"><span>模板引擎</span></a></h2><p><em>模板库及工具</em></p><ul><li><a href="https://github.com/yosssi/ace" target="_blank" rel="noopener noreferrer">ace</a> - Ace 是一个 Go 语言的 HTML 模板引擎，受到了 Slim 和 Jade 的启发。 Ace 是对Gold的一种改进。</li><li><a href="https://github.com/eknkc/amber" target="_blank" rel="noopener noreferrer">amber</a> - Amber 是一个优雅的模板引擎，受到 HAML 和 Jade的启发</li><li><a href="https://github.com/dskinner/damsel" target="_blank" rel="noopener noreferrer">damsel</a> - 标记语言，通过css选择器实现了 html 框架 ，并可以通过 pkg html/template 等进行扩展</li><li><a href="https://github.com/benbjohnson/eGo" target="_blank" rel="noopener noreferrer">eGo</a> - 轻量级模板语言，让你可以使用 Go 语言来创建模板。模板会被转化为 Go 语言并编译</li><li><a href="https://github.com/valyala/fasttemplate" target="_blank" rel="noopener noreferrer">fasttemplate</a> - 简单快速的模板引擎。进行模板元素替换时，速度是<a href="http://Golang.org/pkg/text/template/" target="_blank" rel="noopener noreferrer">text/template</a>的十倍</li><li><a href="https://github.com/jung-kurt/Gofpdf" target="_blank" rel="noopener noreferrer">Gofpdf</a> - PDF 文档生成器，支持文本，绘图和图片</li><li><a href="https://github.com/dannyvankooten/grender" target="_blank" rel="noopener noreferrer">grender</a> - 对 html/template 进行了简单的封装，支持基于文件的模板可以利用其他模板文件进行扩展</li><li><a href="https://github.com/shiyanhui/hero" target="_blank" rel="noopener noreferrer">hero</a> Hero 是一个趁手的、快速的、强大的 Go 语言模板引擎</li><li><a href="https://github.com/CloudyKit/jet" target="_blank" rel="noopener noreferrer">jet</a> - Jet 模板引擎</li><li><a href="https://github.com/ziutek/kasia.Go" target="_blank" rel="noopener noreferrer">kasia.Go</a> - 一个用于HTML 和其他文本文件的模板系统，使用go语言实现</li><li><a href="https://github.com/osteele/liquid" target="_blank" rel="noopener noreferrer">liquid</a> - Go 语言实现的 Shopify Liquid 模板.</li><li><a href="https://github.com/hoisie/mustache" target="_blank" rel="noopener noreferrer">mustache</a> - Go 语言实现的 Mustache 模板语言</li><li><a href="https://github.com/flosch/ponGo2" target="_blank" rel="noopener noreferrer">ponGo2</a> - 类似 DjanGo 的模板引擎</li><li><a href="https://github.com/valyala/quicktemplate" target="_blank" rel="noopener noreferrer">quicktemplate</a> - 快速、强大且易用的模板引擎。将模板转化为 Go 语言并进行编译</li><li><a href="https://github.com/aymerick/raymond" target="_blank" rel="noopener noreferrer">raymond</a> - 使用 Go 语言实现的完整的 handlebars</li><li><a href="https://github.com/sipin/Gorazor" target="_blank" rel="noopener noreferrer">GoRazor</a> - Go 语言的 Razor 视图引擎</li><li><a href="https://github.com/robfig/soy" target="_blank" rel="noopener noreferrer">Soy</a> -  Go 语言实现的谷歌闭包模板(也就是 Soy templates) , 参见<a href="https://developers.Google.com/closure/templates/" target="_blank" rel="noopener noreferrer">official spec</a></li><li><a href="https://github.com/Gobuffalo/velvet" target="_blank" rel="noopener noreferrer">velvet</a> - 使用 Go 语言实现的完整的 handlebars</li></ul><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试"><span>测试</span></a></h2><p><em>测试及用于生成测试数据的库.</em></p><ul><li>测试框架 <ul><li><a href="https://github.com/Go-playground/assert" target="_blank" rel="noopener noreferrer">assert</a> - 基础断言库，用于对 Go 语言程序进行测试，提供了一些用于自定义断言的代码块</li><li><a href="https://github.com/cavaliercoder/badio" target="_blank" rel="noopener noreferrer">badio</a> - Go 语言 <code>testing/iotest</code> 包的扩展</li><li><a href="https://github.com/h2non/baloo" target="_blank" rel="noopener noreferrer">baloo</a> - 表达性强、多功能的、端到端的HTTP API 测试工具</li><li><a href="https://github.com/marioidival/bro" target="_blank" rel="noopener noreferrer">bro</a> - 监控目录中的文件并对其进行测试</li><li><a href="https://github.com/khaiql/dbcleaner" target="_blank" rel="noopener noreferrer">dbcleaner</a> - 清空数据库用于测试，受到<code>database_cleaner</code> 的启发</li><li><a href="https://github.com/viant/dsunit" target="_blank" rel="noopener noreferrer">dsunit</a> - 数据库测试，针对 SQL、 NoSQL、 结构化文件.</li><li><a href="https://github.com/verdverm/frisby" target="_blank" rel="noopener noreferrer">frisby</a> - REST API 测试框架</li><li><a href="http://onsi.github.io/ginkGo/" target="_blank" rel="noopener noreferrer">ginkGo</a> - BDD 测试框架</li><li><a href="https://github.com/msoap/Go-carpet" target="_blank" rel="noopener noreferrer">Go-carpet</a> - 用于在终端中查看测试覆盖率的工具</li><li><a href="https://github.com/zimmski/Go-mutesting" target="_blank" rel="noopener noreferrer">Go-mutesting</a> - Go 语言源代码突变测试（Mutation testing ）</li><li><a href="https://github.com/dnaeon/Go-vcr" target="_blank" rel="noopener noreferrer">Go-vcr</a> - 记录并重放 HTTP 交互，用于快速的、确定性的、准确的测试</li><li><a href="https://github.com/franela/Goblin" target="_blank" rel="noopener noreferrer">Goblin</a> - 类似 Mocha 的测试框架</li><li><a href="http://labix.org/Gocheck" target="_blank" rel="noopener noreferrer">Gocheck</a> - 更加高级的测试框架，用于替换 Gotest.</li><li><a href="https://github.com/smartystreets/Goconvey/" target="_blank" rel="noopener noreferrer">GoConvey</a> - BDD 风格的测试框架，具有 web 界面和计时刷新功能</li><li><a href="https://github.com/DATA-DOG/Godog" target="_blank" rel="noopener noreferrer">Godog</a> - 类似 Cucumber 或 Behat 的 BDD 框架</li><li><a href="https://github.com/appleboy/Gofight" target="_blank" rel="noopener noreferrer">Gofight</a> - 对 Go 语言的路由框架进行 API 测试</li><li><a href="http://onsi.github.io/Gomega/" target="_blank" rel="noopener noreferrer">Gomega</a> - 类似 Rspec 的 matcher/assertion 库</li><li><a href="https://github.com/orfjackal/Gospec" target="_blank" rel="noopener noreferrer">GoSpec</a> - BDD 风格的测试框架</li><li><a href="https://github.com/stesla/Gospecify" target="_blank" rel="noopener noreferrer">Gospecify</a> - 支持 BDD 语法 。对于任何使用过 rspec 等库的人来说应该非常熟悉</li><li><a href="https://github.com/pavlo/Gosuite" target="_blank" rel="noopener noreferrer">Gosuite</a> - 轻量级测试套，为 Go1.7&#39;s Subtests 带来了setup/teardown 功能</li><li><a href="https://github.com/rdrdr/hamcrest" target="_blank" rel="noopener noreferrer">Hamcrest</a> - fluent framework for declarative Matcher objects that, when applied to input values, produce self-describing results.</li><li><a href="https://github.com/gavv/httpexpect" target="_blank" rel="noopener noreferrer">httpexpect</a> - 简洁的、声明式的、易用的端到端HTTP 及 REST API 测试</li><li><a href="https://github.com/yookoala/restit" target="_blank" rel="noopener noreferrer">restit</a> - 帮助编写 RESTful API 集成测试的 Go 语言微型框架.</li><li><a href="https://github.com/Go-testfixtures/testfixtures" target="_blank" rel="noopener noreferrer">testfixtures</a> - 类似 Rails 的测试工具，用于测试数据库应用</li><li><a href="https://github.com/stretchr/testify" target="_blank" rel="noopener noreferrer">Testify</a> - 对标准测试包的扩展</li><li><a href="https://github.com/posener/wstest" target="_blank" rel="noopener noreferrer">wstest</a> - Websocket 客户端，用于对于 websocket HTTP.Handler 进行单元测试</li></ul></li><li>Mock <ul><li><a href="https://github.com/maxbrunsfeld/counterfeiter" target="_blank" rel="noopener noreferrer">counterfeiter</a> - 用于生成自包含 mock 对象的工具</li><li><a href="https://github.com/DATA-DOG/Go-sqlmock" target="_blank" rel="noopener noreferrer">Go-sqlmock</a> - Mock SQL ，用于测试数据库交互</li><li><a href="https://github.com/DATA-DOG/Go-txdb" target="_blank" rel="noopener noreferrer">Go-txdb</a> - 基于单事物的数据库驱动，主要用于测试目的</li><li><a href="https://github.com/h2non/Gock" target="_blank" rel="noopener noreferrer">Gock</a> - 多功能、易用 HTTP mock</li><li><a href="https://github.com/Golang/mock" target="_blank" rel="noopener noreferrer">Gomock</a> - 给 Go 语言用的 Mock框架</li><li><a href="https://github.com/seborama/Govcr" target="_blank" rel="noopener noreferrer">Govcr</a> - HTTP mock : 离线测试时记录和重放浏览器的动作</li><li><a href="https://github.com/Gojuno/minimock" target="_blank" rel="noopener noreferrer">minimock</a> - Mock 生成器</li><li><a href="https://github.com/tv42/mockhttp" target="_blank" rel="noopener noreferrer">mockhttp</a> - Go HTTP.ResponseWriter 使用的 Mock 对象</li></ul></li><li>Fuzzing and delta-debugging/reducing/shrinking <ul><li><a href="https://github.com/dvyukov/Go-fuzz" target="_blank" rel="noopener noreferrer">Go-fuzz</a> - 随机化测试系统</li><li><a href="https://github.com/Google/Gofuzz" target="_blank" rel="noopener noreferrer">Gofuzz</a> - 用于生成随机值来初始化 Go 语言对象的库</li><li><a href="https://github.com/zimmski/tavor" target="_blank" rel="noopener noreferrer">Tavor</a> - 通用模糊测试框架</li></ul></li><li>Selenium 及浏览器控制工具 <ul><li><a href="https://github.com/mafredri/cdp" target="_blank" rel="noopener noreferrer">cdp</a> - 类型安全的 Chrome debug协议的 Go 语言接口，可以用于浏览器或任何实现了该协议的其他待调试对象</li><li><a href="https://github.com/knq/chromedp" target="_blank" rel="noopener noreferrer">chromedp</a> - 用于驱动和测试 Chrome, Safari, Edge, Android Webviews, 以及其他支持 Chrome 调试协议的产品</li><li><a href="https://github.com/aandryashin/ggr" target="_blank" rel="noopener noreferrer">ggr</a> - 一个轻量级服务器，可以将 Selenium Wedriver 的请求路由或代理到多个 Selenium hubs.</li><li><a href="https://github.com/aandryashin/selenoid" target="_blank" rel="noopener noreferrer">selenoid</a> - Selenium hub 服务器的替代品，在容器中启动浏览器</li></ul></li></ul><h2 id="文本处理" tabindex="-1"><a class="header-anchor" href="#文本处理"><span>文本处理</span></a></h2><p><em>解析和操作文本的库</em></p><ul><li>特殊格式 <ul><li><a href="https://github.com/sbstjn/allot" target="_blank" rel="noopener noreferrer">allot</a> - 占位符及通配符文本解析</li><li><a href="https://github.com/CalebQ42/bbConvert" target="_blank" rel="noopener noreferrer">bbConvert</a> - 将 bbCode 转换为 HTML</li><li><a href="https://github.com/russross/blackfriday" target="_blank" rel="noopener noreferrer">blackfriday</a> - Markdown 解析器</li><li><a href="https://github.com/microcosm-cc/bluemonday" target="_blank" rel="noopener noreferrer">bluemonday</a> - HTML 清理工具</li><li><a href="https://github.com/editorconfig/editorconfig-core-Go" target="_blank" rel="noopener noreferrer">editorconfig-core-Go</a> - Go 语言用的Editorconfig 文件解析和操作库</li><li><a href="https://github.com/endeveit/enca" target="_blank" rel="noopener noreferrer">enca</a> - <a href="http://cihar.com/software/enca/" target="_blank" rel="noopener noreferrer">libenca</a>的极简的 cGo 接口</li><li><a href="https://github.com/alixaxel/genex" target="_blank" rel="noopener noreferrer">genex</a> - 计算并展开正则表达式为所有匹配的字符串</li><li><a href="https://Godoc.org/github.com/shurcooL/github_flavored_markdown" target="_blank" rel="noopener noreferrer">github_flavored_markdown</a> - GitHub 风格的 Markdown 渲染器 (使用 blackfriday) ，支持代码块高亮以及可点击的锚点</li><li><a href="https://github.com/dustin/Go-humanize" target="_blank" rel="noopener noreferrer">Go-humanize</a> - 时间、数字及内存大小格式化工具</li><li><a href="https://github.com/adrianmo/Go-nmea" target="_blank" rel="noopener noreferrer">Go-nmea</a> - NMEA 解析库</li><li><a href="https://github.com/jteeuwen/Go-pkg-rss" target="_blank" rel="noopener noreferrer">Go-pkg-rss</a> - 这个库可以读取 RSS 以及 Atom feeds，并且提供了一种缓存机制，遵守 feed 标准。</li><li><a href="https://github.com/mattn/Go-runewidth" target="_blank" rel="noopener noreferrer">Go-runewidth</a> - 用于获取字符或字符串固定宽度的函数</li><li><a href="https://github.com/mozillazg/Go-slugify" target="_blank" rel="noopener noreferrer">Go-slugify</a> - 生成漂亮的固定链接地址（slug），支持多种语言</li><li><a href="https://github.com/emersion/Go-vcard" target="_blank" rel="noopener noreferrer">Go-vcard</a> - 解析并且格式化vCard</li><li><a href="https://github.com/mmcdole/Gofeed" target="_blank" rel="noopener noreferrer">Gofeed</a> - 使用 Go 语言解析RSS 和 Atom</li><li><a href="https://github.com/awalterschulze/Gographviz" target="_blank" rel="noopener noreferrer">Gographviz</a> - 用以解析 Graphviz DOT 语言</li><li><a href="https://github.com/labstack/Gommon/tree/master/bytes" target="_blank" rel="noopener noreferrer">Gommon/bytes</a> - 格式化二进制为字符串</li><li><a href="https://github.com/polera/Gonameparts" target="_blank" rel="noopener noreferrer">Gonameparts</a> - 将人名解析为几个独立的部分</li><li><a href="https://github.com/andrewstuart/Goq" target="_blank" rel="noopener noreferrer">Goq</a> - 声明式 HTML 编组，使用结构标签和 jQuery 语法 (使用 GoQuery).</li><li><a href="https://github.com/PuerkitoBio/Goquery" target="_blank" rel="noopener noreferrer">GoQuery</a> - GoQuery 为 Go 语言带来了一组类似 jQuery 的语法和功能</li><li><a href="https://github.com/zach-klippenstein/Goregen" target="_blank" rel="noopener noreferrer">Goregen</a> - 根据正则表达式生成随机字符串</li><li><a href="https://github.com/leonelquinteros/Gotext" target="_blank" rel="noopener noreferrer">Gotext</a> - GNU gettext 工具</li><li><a href="https://github.com/endeveit/guesslanguage" target="_blank" rel="noopener noreferrer">guesslanguage</a> - 通过一个 unicode 文本来猜测该文本使用的语言</li><li><a href="https://github.com/facebookGo/inject" target="_blank" rel="noopener noreferrer">inject</a> - inject 提供来一个基于反射对注入器</li><li><a href="https://github.com/clbanning/mxj" target="_blank" rel="noopener noreferrer">mxj</a> - 将 XML 编解码为 JSON 或 map[string]interface{}; 通过点分路径和通配符来提取值。用于替代Replaces x2j 和 j2x 包.</li><li><a href="https://github.com/mvdan/sh" target="_blank" rel="noopener noreferrer">sh</a> - Shell 解析器及格式化工具</li><li><a href="https://github.com/Gosimple/slug" target="_blank" rel="noopener noreferrer">slug</a> - URL 友好的 slug 化工具，支持多种语言</li><li><a href="https://github.com/avelino/slugify" target="_blank" rel="noopener noreferrer">Slugify</a> - Go 语言静态地址生成器，可以处理字符串</li><li><a href="https://github.com/BurntSushi/toml" target="_blank" rel="noopener noreferrer">toml</a> - TOML 配置格式 format (encoder/decoder with reflection).(弃用）</li></ul></li><li>工具 <ul><li><a href="https://github.com/bndr/Gotabulate" target="_blank" rel="noopener noreferrer">Gotabulate</a> - 使用 Go 语言简单、美观的打印表格数据</li><li><a href="https://github.com/codemodus/kace" target="_blank" rel="noopener noreferrer">kace</a> - 通用大小写转换工具</li><li><a href="https://github.com/nproc/parseargs-Go" target="_blank" rel="noopener noreferrer">parseargs-Go</a> - 字符串参数解析器，能够理解引用及反斜杠</li><li><a href="https://github.com/codemodus/parth" target="_blank" rel="noopener noreferrer">parth</a> - URL 路径分割解析</li><li><a href="https://github.com/yourbasic/radix" target="_blank" rel="noopener noreferrer">radix</a> - 快速的字符串排序算法</li><li><a href="https://github.com/mvdan/xurls" target="_blank" rel="noopener noreferrer">xurls</a> - 从文本中提取 URL</li></ul></li></ul><h2 id="第三方-apis" tabindex="-1"><a class="header-anchor" href="#第三方-apis"><span>第三方 APIs</span></a></h2><p><em>用于访问第三方 APIs 的库</em></p><ul><li><a href="https://github.com/ngs/Go-amazon-product-advertising-api" target="_blank" rel="noopener noreferrer">amazon-product-advertising-api</a> - <a href="https://affiliate-program.amazon.com/gp/advertising/api/detail/main.html" target="_blank" rel="noopener noreferrer">Amazon Product Advertising API</a> 的 go 语言客户端</li><li><a href="https://github.com/ChimeraCoder/anaconda" target="_blank" rel="noopener noreferrer">anaconda</a> - Twitter 1.1 API 的 go 语言客户端</li><li><a href="https://github.com/aws/aws-sdk-Go" target="_blank" rel="noopener noreferrer">aws-sdk-Go</a> - AWS 提供的官方go语言 SDK</li><li><a href="https://github.com/naegelejd/brewerydb" target="_blank" rel="noopener noreferrer">brewerydb</a> - 用于访问 BreweryDB API的 Go 语言库</li><li><a href="https://github.com/andygrunwald/cachet" target="_blank" rel="noopener noreferrer">cachet</a> - <a href="https://cachethq.io/" target="_blank" rel="noopener noreferrer">Cachet (open source status page system)</a>的 Go 语言客户端</li><li><a href="https://github.com/jszwedko/Go-circleci" target="_blank" rel="noopener noreferrer">circleci</a> - 用于和 with CircleCI&#39;s API 进行交互的 Go 语言客户端</li><li><a href="https://github.com/samuelcouch/clarifai" target="_blank" rel="noopener noreferrer">clarifai</a> - 用语和 Clarifai API 交互的 Go 语言库</li><li><a href="https://github.com/bwmarrin/discordGo" target="_blank" rel="noopener noreferrer">discordGo</a> - Discord Chat API 的 Go 语言接口</li><li><a href="https://github.com/huandu/facebook" target="_blank" rel="noopener noreferrer">facebook</a> - 支持 Facebook Graph API 的库</li><li><a href="https://github.com/maddevsio/fcm" target="_blank" rel="noopener noreferrer">fcm</a> - Firebase Cloud Messaging 的 Go 语言库</li><li><a href="https://github.com/emiddleton/gads" target="_blank" rel="noopener noreferrer">gads</a> - Google Adwords 非官方 API</li><li><a href="https://github.com/bit4bit/gami" target="_blank" rel="noopener noreferrer">gami</a> - Asterisk Manager Interface 的 Go 语言库</li><li><a href="https://github.com/Aorioli/gcm" target="_blank" rel="noopener noreferrer">gcm</a> - Google Cloud Messaging 库</li><li><a href="https://github.com/codingsince1985/geo-Golang" target="_blank" rel="noopener noreferrer">geo-Golang</a> - 用于与 <a href="https://developers.Google.com/maps/documentation/geocoding/intro" target="_blank" rel="noopener noreferrer">Google Maps</a>, <a href="http://open.mapquestapi.com/geocoding/" target="_blank" rel="noopener noreferrer">MapQuest</a>, <a href="http://open.mapquestapi.com/nominatim/" target="_blank" rel="noopener noreferrer">Nominatim</a>, <a href="http://geocoder.opencagedata.com/api.html" target="_blank" rel="noopener noreferrer">OpenCage</a>, <a href="https://developer.here.com/rest-apis/documentation/geocoder" target="_blank" rel="noopener noreferrer">HERE</a>, <a href="https://msdn.microsoft.com/en-us/library/ff701715.aspx" target="_blank" rel="noopener noreferrer">Bing</a>, <a href="https://www.mapbox.com/developers/api/geocoding/" target="_blank" rel="noopener noreferrer">Mapbox</a>, 及 <a href="https://wiki.openstreetmap.org/wiki/Nominatim" target="_blank" rel="noopener noreferrer">OpenStreetMap</a> 地理编码 / 反编码 APIs 交互的库</li><li><a href="https://github.com/neuegram/ghost" target="_blank" rel="noopener noreferrer">ghost</a> - 用于和 Snapchat API 交互的库</li><li><a href="https://github.com/Google/Go-github" target="_blank" rel="noopener noreferrer">github</a> - 用于和 GitHub REST API v3 交互的库</li><li><a href="https://github.com/shurcooL/githubql" target="_blank" rel="noopener noreferrer">githubql</a> - 用于和GitHub GraphQL API v4 交互的库</li><li><a href="https://github.com/koffeinsource/Go-imgur" target="_blank" rel="noopener noreferrer">Go-imgur</a> - <a href="https://imgur.com" target="_blank" rel="noopener noreferrer">imgur</a> 的 Go 语言客户端</li><li><a href="https://github.com/andygrunwald/Go-jira" target="_blank" rel="noopener noreferrer">Go-jira</a> - <a href="https://www.atlassian.com/software/jira" target="_blank" rel="noopener noreferrer">Atlassian JIRA</a> 的 Go 语言客户端</li><li><a href="https://github.com/gambol99/Go-marathon" target="_blank" rel="noopener noreferrer">Go-marathon</a> - 用于和 Mesosphere&#39;s Marathon PAAS 交互的 Go 语言库</li><li><a href="https://github.com/nstratos/Go-myanimelist" target="_blank" rel="noopener noreferrer">Go-myanimelist</a> - 用于和 <a href="http://myanimelist.net/modules.php?Go=api" target="_blank" rel="noopener noreferrer">MyAnimeList API</a>交互的库</li><li><a href="https://github.com/toby3d/Go-telegraph" target="_blank" rel="noopener noreferrer">Go-telegraph</a> - Telegraph 发布平台 API 客户端</li><li><a href="https://github.com/olebedev/Go-tgbot" target="_blank" rel="noopener noreferrer">Go-tgbot</a> - 纯 Go 语言的Telegram 机器人 API 封装，通过 swagger 文件，基会话的路由和中间件</li><li><a href="https://github.com/andygrunwald/Go-trending" target="_blank" rel="noopener noreferrer">Go-trending</a> - 用于获取 Github 上面 <a href="https://github.com/trending" target="_blank" rel="noopener noreferrer">当前流行的代码库</a> 及 <a href="https://github.com/trending/developers" target="_blank" rel="noopener noreferrer">开发者</a></li><li><a href="https://github.com/knspriggs/Go-twitch" target="_blank" rel="noopener noreferrer">Go-twitch</a> - 用于和推特v3 API 进行交互的 Go 语言客户端</li><li><a href="https://github.com/dghubble/Go-twitter" target="_blank" rel="noopener noreferrer">Go-twitter</a> - 用于和推特v1.1 API 进行交互的 Go 语言客户端</li><li><a href="https://github.com/hbagdi/Go-unsplash" target="_blank" rel="noopener noreferrer">Go-unsplash</a> - <a href="https://unsplash.com" target="_blank" rel="noopener noreferrer">Unsplash.com</a> API 的 Go 语言客户端</li><li><a href="https://github.com/nishanths/Go-xkcd" target="_blank" rel="noopener noreferrer">Go-xkcd</a> - xkcd API 的 Go 语言客户端</li><li><a href="https://github.com/mitchellh/Goamz" target="_blank" rel="noopener noreferrer">Goamz</a> - <a href="https://launchpad.net/Goamz" target="_blank" rel="noopener noreferrer">Goamz</a> 的一个fork分支，添加了一些缺失的 API，用于调用特定的软件包。</li><li><a href="https://github.com/mamal72/Golyrics" target="_blank" rel="noopener noreferrer">Golyrics</a> - Golyrics 是一个 Go 语言库，用于从 Wikia 上获取歌词</li><li><a href="https://github.com/michiwend/Gomusicbrainz" target="_blank" rel="noopener noreferrer">GoMusicBrainz</a> - Go MusicBrainz WS2 客户端</li><li><a href="https://github.com/Google/Google-api-Go-client" target="_blank" rel="noopener noreferrer">Google</a> - 为go语言自动生成 Google api</li><li><a href="https://github.com/chonthu/Go-Google-analytics" target="_blank" rel="noopener noreferrer">Google-analytics</a> - Google 分析报告的一个简单的封装</li><li><a href="https://github.com/GoogleCloudPlatform/gcloud-Golang" target="_blank" rel="noopener noreferrer">Google-cloud</a> - Google Cloud APIs Go 语言客户端库</li><li><a href="https://github.com/ngs/Go-Google-email-audit-api" target="_blank" rel="noopener noreferrer">Google-email-audit-api</a> - <a href="https://developers.Google.com/admin-sdk/email-audit/" target="_blank" rel="noopener noreferrer">Google G Suite Email Audit API</a>的 Go 语言客户端库</li><li><a href="https://github.com/jsgilmore/Gostorm" target="_blank" rel="noopener noreferrer">Gostorm</a> - GoStorm 是一个 Go 语言库，实现了在 Go 语言里面编写 Spout 和 Bolt 的协议，用于和 Storm  shells 进行通信</li><li><a href="https://github.com/nikepan/Govkbot" target="_blank" rel="noopener noreferrer">Govkbot</a> - 简单的 Go <a href="https://vk.com" target="_blank" rel="noopener noreferrer">VK</a> 机器人库</li><li><a href="https://github.com/andybons/hipchat" target="_blank" rel="noopener noreferrer">hipchat</a> - 这个项目实行了Hipchat API 的 Go 语言客户端</li><li><a href="https://github.com/daneharrigan/hipchat" target="_blank" rel="noopener noreferrer">hipchat (xmpp)</a> - 通过使用 XMPP 与 HipChat 进行通信的库</li><li><a href="https://github.com/Medium/medium-sdk-Go" target="_blank" rel="noopener noreferrer">Medium</a> - Medium OAuth2 API 的 sdk</li><li><a href="https://github.com/andygrunwald/meGos" target="_blank" rel="noopener noreferrer">meGos</a> - 用于访问 <a href="http://mesos.apache.org/" target="_blank" rel="noopener noreferrer">Apache Mesos</a> 集群的客户端</li><li><a href="https://github.com/onrik/micha" target="_blank" rel="noopener noreferrer">micha</a> - 用于<a href="https://core.telegram.org/bots/api" target="_blank" rel="noopener noreferrer">Telegram bot api</a>的go语言库</li><li><a href="https://github.com/minio/minio-Go" target="_blank" rel="noopener noreferrer">minio-Go</a> - go 语言 Minio 客户端，用于 Amazon S3 兼容的云存储</li><li><a href="https://github.com/dukex/mixpanel" target="_blank" rel="noopener noreferrer">mixpanel</a> - Mixpanel 是一个用于追踪事件并发送 Mixpanel profile 的更新到 Mixpanel 的库</li><li><a href="https://github.com/mxpv/patreon-Go" target="_blank" rel="noopener noreferrer">patreon-Go</a> - Patreon API.</li><li><a href="https://github.com/logpacker/paypalsdk" target="_blank" rel="noopener noreferrer">paypal</a> - PayPal 支付 API</li><li><a href="https://github.com/playlyfe/playlyfe-Go-sdk" target="_blank" rel="noopener noreferrer">playlyfe</a> - Playlyfe Rest API 的 Go 语言 SDK</li><li><a href="https://github.com/gregdel/pushover" target="_blank" rel="noopener noreferrer">pushover</a> - Pushover API 的 Go 语言封装</li><li><a href="https://github.com/Omie/rrdaclient" target="_blank" rel="noopener noreferrer">rrdaclient</a> - 用于接入 statdns.com API 的库——RRDA API。通过HTTP协议进行 DNS查询</li><li><a href="https://github.com/rapito/Go-shopify" target="_blank" rel="noopener noreferrer">shopify</a> - 一个用于通过 Shopify API 进行增删改查的 Go 语言库</li><li><a href="https://github.com/nlopes/slack" target="_blank" rel="noopener noreferrer">slack</a> - Slack API</li><li><a href="https://github.com/sergiotapia/smiteGo" target="_blank" rel="noopener noreferrer">smite</a> - 对 Smite game API 的封装</li><li><a href="https://github.com/rapito/Go-spotify" target="_blank" rel="noopener noreferrer">spotify</a> - 用于接入 Spotify WEB API 的 Go 语言库</li><li><a href="https://github.com/sostronk/Go-steam" target="_blank" rel="noopener noreferrer">steam</a> - 用于与Steam服务器进行交互的库</li><li><a href="https://github.com/stripe/stripe-Go" target="_blank" rel="noopener noreferrer">stripe</a> - Stripe API 的 Go 语言客户端</li><li><a href="https://github.com/yanzay/tbot" target="_blank" rel="noopener noreferrer">tbot</a> - Telegram bot 服务器，有类似 net/http 的 api</li><li><a href="https://github.com/tucnak/telebot" target="_blank" rel="noopener noreferrer">telebot</a> - go语言编写的 Telegram bot 框架</li><li><a href="https://github.com/Syfaro/telegram-bot-api" target="_blank" rel="noopener noreferrer">telegram-bot-api</a> - 简洁的 Telegram bot 客户端.</li><li><a href="https://github.com/dietsche/textbelt" target="_blank" rel="noopener noreferrer">textbelt</a> - textbelt.com txt messaging API 的go语言客户端</li><li><a href="https://github.com/jbrodriguez/Go-tmdb" target="_blank" rel="noopener noreferrer">TheMovieDb</a> - 用于和 <a href="https://themoviedb.org" target="_blank" rel="noopener noreferrer">themoviedb.org</a> 通信的一个简单的 Go 语言软件包</li><li><a href="https://github.com/poorny/translate" target="_blank" rel="noopener noreferrer">translate</a> - Go 在线翻译包</li><li><a href="https://github.com/adlio/trello" target="_blank" rel="noopener noreferrer">Trello</a> - Trello API的 Go 语言封装</li><li><a href="https://github.com/mattcunningham/gumblr" target="_blank" rel="noopener noreferrer">tumblr</a> - Tumblr v2 API 的 Go 语言封装</li><li><a href="https://github.com/Go-playground/webhooks" target="_blank" rel="noopener noreferrer">webhooks</a> - GitHub 和 Bitbucket 的Webhook接收器</li><li><a href="https://github.com/Gojuno/Go-zooz" target="_blank" rel="noopener noreferrer">zooz</a> - Zooz API 的 Go 语言客户端</li></ul><h2 id="实用工具" tabindex="-1"><a class="header-anchor" href="#实用工具"><span>实用工具</span></a></h2><p><em>可以让你的生活变得更简单的实用工具.</em></p><ul><li><a href="https://github.com/bahlo/abutil" target="_blank" rel="noopener noreferrer">abutil</a> - 常用 Go 语言工具的集合（已弃用）</li><li><a href="https://github.com/topfreegames/apm" target="_blank" rel="noopener noreferrer">apm</a> - Go 语言进程管理工具具有HTTP API （已弃用）</li><li><a href="https://github.com/tmrts/boilr" target="_blank" rel="noopener noreferrer">boilr</a> - 一个超快的命令行工具，用于从模板文件生成项目</li><li><a href="https://github.com/rubyist/circuitbreaker" target="_blank" rel="noopener noreferrer">circuitbreaker</a> - Go 语言断路器模式</li><li><a href="http://github.com/onatm/clockwerk" target="_blank" rel="noopener noreferrer">clockwerk</a> - 使用简单、流畅的语法来调度周期性任务</li><li><a href="https://github.com/txgruppi/command" target="_blank" rel="noopener noreferrer">command</a> - 命令模式，支持线程安全的串行、并行调度</li><li><a href="https://github.com/rakyll/coop" target="_blank" rel="noopener noreferrer">coop</a> - Go 语言中常见的并发流程速查表</li><li><a href="https://github.com/jutkko/copy-pasta" target="_blank" rel="noopener noreferrer">copy-pasta</a> - 通用多工作站剪切板，使用类似 S3 的后端作为存储</li><li><a href="https://github.com/bcicen/ctop" target="_blank" rel="noopener noreferrer">ctop</a> - <a href="http://ctop.sh" target="_blank" rel="noopener noreferrer">类似Top</a>的接口 (例如 htop) ，用于容器数据收集</li><li><a href="https://github.com/vrecan/death" target="_blank" rel="noopener noreferrer">Death</a> - 利用信号管理应用程序的关闭</li><li><a href="https://github.com/ulule/deepcopier" target="_blank" rel="noopener noreferrer">Deepcopier</a> - 结构体拷贝</li><li><a href="https://github.com/derekparker/delve" target="_blank" rel="noopener noreferrer">delve</a> - Go 语言调试器</li><li><a href="https://github.com/kirillDanshin/dlog" target="_blank" rel="noopener noreferrer">dlog</a> - 编译时控制的日志，让你的 release 包变得更小而不需移除 debug 调用</li><li><a href="https://github.com/Luxurioust/excelize" target="_blank" rel="noopener noreferrer">excelize</a> - 用于读写 Microsoft Excel (XLSX) 文件的库</li><li><a href="https://github.com/digitalcrab/fastlz" target="_blank" rel="noopener noreferrer">fastlz</a> - <a href="http://fastlz.org/" target="_blank" rel="noopener noreferrer">FastLz</a> (免费，开源，可移植实时压缩库) 的一个封装</li><li><a href="https://github.com/h2non/filetype" target="_blank" rel="noopener noreferrer">filetype</a> - 通过数字签名来推测文件类型</li><li><a href="https://github.com/yaronsumel/filler" target="_blank" rel="noopener noreferrer">filler</a> - 使用 &quot;fill&quot; 标记来填充结构体的小工具</li><li><a href="https://github.com/junegunn/fzf" target="_blank" rel="noopener noreferrer">fzf</a> - 命令行模糊查找工具</li><li><a href="https://github.com/Go-playground/generate" target="_blank" rel="noopener noreferrer">generate</a> - 针对一个路径或环境变量，递归的执行 Go generate，可以通过正则表达式来进行过滤</li><li><a href="https://github.com/h2non/gentleman" target="_blank" rel="noopener noreferrer">gentleman</a> - 全功能、插件驱动的 HTTP 客户端库</li><li><a href="https://github.com/git-time-metric/gtm" target="_blank" rel="noopener noreferrer">git-time-metric</a> - 简单、无缝、轻量级的 Git 时间追踪工具</li><li><a href="https://github.com/tidwall/gjson" target="_blank" rel="noopener noreferrer">GJSON</a> - 一行代码获取 JSON</li><li><a href="https://github.com/asticode/Go-astitodo" target="_blank" rel="noopener noreferrer">Go-astitodo</a> - 解析你 Go 语言代码中的 TODOs（待办事项）</li><li><a href="https://github.com/wendiGo/Go-bind-plugin" target="_blank" rel="noopener noreferrer">Go-bind-plugin</a> - Go:generate 工具，用于构建 Go 语言插件(1.8 only)，并对导出的符号进行包装</li><li><a href="https://github.com/rk/Go-cron" target="_blank" rel="noopener noreferrer">Go-cron</a> - 简单的 Go 语言 Cron 库，可以以不同的时间间隔来执行闭包或函数，从一秒到某年某月某日都可以。主要针对的是 Web 应用或者长期运行的守护进程</li><li><a href="https://github.com/tj/Go-debug" target="_blank" rel="noopener noreferrer">Go-debug</a> - 条件调试日志，用于 Go 语言库和应用程序</li><li><a href="https://github.com/ungerik/Go-dry" target="_blank" rel="noopener noreferrer">Go-dry</a> - DRY (don&#39;t repeat yourself)</li><li><a href="https://github.com/thoas/Go-funk" target="_blank" rel="noopener noreferrer">Go-funk</a> - 现代 Go 语言工具库，提供了很多有用的工具 (map, find, contains, filter, chunk, reverse, ...)</li><li><a href="https://github.com/mozillazg/Go-httpheader" target="_blank" rel="noopener noreferrer">Go-httpheader</a> - 用于将结构体编码进 http 头的 Go 语言库</li><li><a href="https://github.com/beefsack/Go-rate" target="_blank" rel="noopener noreferrer">Go-rate</a> - Go 语言版本的限速器</li><li><a href="https://github.com/nicklaw5/Go-respond" target="_blank" rel="noopener noreferrer">Go-respond</a> - 用于处理常见 HTTP JSON 响应的库.</li><li><a href="https://github.com/ikeikeikeike/Go-sitemap-generator" target="_blank" rel="noopener noreferrer">Go-sitemap-generator</a> - XML 网站地图生成器</li><li><a href="https://github.com/uber/Go-torch" target="_blank" rel="noopener noreferrer">Go-torch</a> - 为 Go 语言程序生成火焰图</li><li><a href="https://github.com/sadlil/Go-trigger" target="_blank" rel="noopener noreferrer">Go-trigger</a> - Go 语言全局事件触发器，通过 id 和触发器，在程序的任何地方注册事件</li><li><a href="https://github.com/tobyhede/Go-underscore" target="_blank" rel="noopener noreferrer">Go-underscore</a> - 一些有用的 Go 语言工具的集合</li><li><a href="https://github.com/carlescere/Goback" target="_blank" rel="noopener noreferrer">Goback</a> - 一个 Go 语言的简单的指数补偿包</li><li><a href="https://github.com/VividCortex/Godaemon" target="_blank" rel="noopener noreferrer">Godaemon</a> - 用于编写守护进程的工具</li><li><a href="https://github.com/dropbox/Godropbox" target="_blank" rel="noopener noreferrer">Godropbox</a> - 用于编写 Go 语言服务／应用的库，来自 Dropbox.</li><li><a href="https://github.com/cosiner/Gohper" target="_blank" rel="noopener noreferrer">Gohper</a> - 多种能够帮助你进行软件开发的工具和模块</li><li><a href="https://github.com/elgs/Gojq" target="_blank" rel="noopener noreferrer">Gojq</a> - 通过 Go 语言进行 JSON 查询</li><li><a href="https://github.com/ChimeraCoder/Gojson" target="_blank" rel="noopener noreferrer">Gojson</a> - 通过 JSON 自动生成 Go 语言结构体</li><li><a href="https://github.com/msempere/Golarm" target="_blank" rel="noopener noreferrer">Golarm</a> - 告警（支持系统事件）</li><li><a href="https://github.com/mlimaloureiro/Golog" target="_blank" rel="noopener noreferrer">Golog</a> - 简单、轻量级的命令后工具，用于对你的计划任务进行跟踪</li><li><a href="https://github.com/bndr/Gopencils" target="_blank" rel="noopener noreferrer">Gopencils</a> - 简单小巧的 Go 语言库，能够很容易的使用各种 REST APIs.</li><li><a href="https://github.com/michiwend/Goplaceholder" target="_blank" rel="noopener noreferrer">Goplaceholder</a> - 一个小巧的 Go 语言库用于生成占位图片</li><li><a href="https://github.com/Goreleaser/Goreleaser" target="_blank" rel="noopener noreferrer">Goreleaser</a> - 尽可能快速的发布 Go 语言二进制文件</li><li><a href="https://github.com/wgliang/Goreporter" target="_blank" rel="noopener noreferrer">Goreporter</a> - 进行代码静态分析，单元测试，代码检视并生成代码质量报告的工具</li><li><a href="https://github.com/franela/Goreq" target="_blank" rel="noopener noreferrer">Goreq</a> - 简洁的 Go 语言 http 请求库（已弃用）</li><li><a href="https://github.com/smallnest/Goreq" target="_blank" rel="noopener noreferrer">Goreq</a> - 更加简化的 http客户端，基于 Gorequest.（已弃用）</li><li><a href="https://github.com/parnurzeal/Gorequest" target="_blank" rel="noopener noreferrer">Gorequest</a> - 简化的 http 客户端，具有丰富的特性</li><li><a href="https://github.com/linxGnu/Goseaweedfs" target="_blank" rel="noopener noreferrer">Goseaweedfs</a> - conseilSeaweedFS 客户端，几乎具有全部的特性</li><li><a href="https://github.com/subosito/Gotenv" target="_blank" rel="noopener noreferrer">Gotenv</a> - 从 <code>.env</code> 或者任何 <code>io.Reader</code>中加载环境变量</li><li><a href="https://github.com/fterrag/Goxlsxwriter" target="_blank" rel="noopener noreferrer">Goxlsxwriter</a> - 用于操作 XLSX (Microsoft Excel) 文件的 libxlsxwriter 库的 Go 语言接口</li><li><a href="https://github.com/levigross/grequests" target="_blank" rel="noopener noreferrer">grequests</a> - 简单优雅的 <code>net/HTTP</code> 封装，紧随 Python 的 requests 的步伐 （已弃用）</li><li><a href="https://github.com/roylee0704/gron" target="_blank" rel="noopener noreferrer">gron</a> - 使用简单的 Go 语言 API 和 Gron 调度器创建定时任务</li><li><a href="https://github.com/facebookGo/httpcontrol" target="_blank" rel="noopener noreferrer">httpcontrol</a> - httpcontrol 包，运行进行 HTTP 传输层超时和重传控制</li><li><a href="https://github.com/github/hub" target="_blank" rel="noopener noreferrer">hub</a> - 封装了 git 命令，提供了额外的功能用于在终端中和 Github 进行交互</li><li><a href="https://github.com/afex/hystrix-Go" target="_blank" rel="noopener noreferrer">hystrix-Go</a> - 实现 Hystrix 风格的、程序员预定义的 fallback 机制（熔断）</li><li><a href="https://github.com/immortal/immortal" target="_blank" rel="noopener noreferrer">immortal</a> - *nix 跨平台 (与操作系统无关的)监控程序</li><li><a href="https://github.com/mengzhuo/intrinsic" target="_blank" rel="noopener noreferrer">intrinsic</a> - 不需要编写任何汇编代码就能使用 x86 SIMD</li><li><a href="https://github.com/bamzi/jobrunner" target="_blank" rel="noopener noreferrer">JobRunner</a> - 智能的、多功能的定时任务调度器，具有任务队列和实时监控功能</li><li><a href="https://github.com/AmuzaTkts/jsonapi-errors" target="_blank" rel="noopener noreferrer">jsonapi-errors</a> -  JSON API errors 的 Go 语言接口.</li><li><a href="https://github.com/miolini/jsonf" target="_blank" rel="noopener noreferrer">jsonf</a> - 控制台工具，用于高亮及 JSON 查询功能</li><li><a href="https://github.com/ricardolonga/jsonGo" target="_blank" rel="noopener noreferrer">jsonGo</a> - 用于更加方便的构建 JSON 对象的 API</li><li><a href="https://github.com/RichardKnop/jsonhal" target="_blank" rel="noopener noreferrer">jsonhal</a> - 一个简单的 Go 语言软件包，用于将自定义结构体转换为 HAL 兼容的 JSON 响应</li><li><a href="https://github.com/Qntfy/kazaam" target="_blank" rel="noopener noreferrer">kazaam</a> - 用于传输任意 JSON 文件的 API</li><li><a href="https://github.com/jaschaephraim/lrserver" target="_blank" rel="noopener noreferrer">lrserver</a> - LiveReload 服务器</li><li><a href="https://github.com/minio/mc" target="_blank" rel="noopener noreferrer">mc</a> - Minio Client 提供了一组工具，用于操作 Amazon S3 兼容云存储和文件系统</li><li><a href="https://github.com/imdario/merGo" target="_blank" rel="noopener noreferrer">merGo</a> - 用于将结构体和map合并进 Go 语言的工具。对于配置默认值，避免杂乱的if语句很有帮助</li><li><a href="https://github.com/tdewolff/minify" target="_blank" rel="noopener noreferrer">minify</a> - 快速压缩 HTML, CSS, JS, XML, JSON 以及 SVG 文件格式</li><li><a href="https://github.com/tj/mmake" target="_blank" rel="noopener noreferrer">mmake</a> - 现代 Make 工具</li><li><a href="https://github.com/StabbyCutyou/moldova" target="_blank" rel="noopener noreferrer">moldova</a> - 基于输入目标生成随机数据的工具</li><li><a href="https://github.com/sanbornm/mp" target="_blank" rel="noopener noreferrer">mp</a> - 简单的命令行邮件解析器，当前支持标准输入并输出JSON.</li><li><a href="https://github.com/linxGnu/mssqlx" target="_blank" rel="noopener noreferrer">mssqlx</a> - HA 客户端，用于主-从 (或主-主) 数据库，集成了简单的、轻量级的轮询调度负载均衡。基于 sqlx.</li><li><a href="https://github.com/VividCortex/multitick" target="_blank" rel="noopener noreferrer">multitick</a> - 用于 aligned tickers 的多路复用</li><li><a href="https://github.com/e-dard/netbug" target="_blank" rel="noopener noreferrer">netbug</a> - 远程对你的服务进行性能分析</li><li><a href="https://github.com/inconshreveable/ngrok" target="_blank" rel="noopener noreferrer">ngrok</a> - 创建到 localhost 的隧道</li><li><a href="https://github.com/xta/okrun" target="_blank" rel="noopener noreferrer">okrun</a> - 当 Go 文件运行报错时尝试修复并运行</li><li><a href="https://github.com/adelowo/onecache" target="_blank" rel="noopener noreferrer">onecache</a> - 支持多种后端存储的缓存库(Redis, Memcached, 文件系统等)</li><li><a href="https://github.com/maruel/panicparse" target="_blank" rel="noopener noreferrer">panicparse</a> - 将类似的协程分组并对调用栈进行着色</li><li><a href="https://github.com/peco/peco" target="_blank" rel="noopener noreferrer">peco</a> - 简单的交互式过滤工具</li><li><a href="https://github.com/sethgrid/pester" target="_blank" rel="noopener noreferrer">pester</a> - Go HTTP 客户端，具有重传，补偿和并发功能</li><li><a href="https://github.com/VividCortex/pm" target="_blank" rel="noopener noreferrer">pm</a> - 基于 HTTP API 的进程管理 (i.e. Goroutine)</li><li><a href="https://github.com/pkg/profile" target="_blank" rel="noopener noreferrer">profile</a> - 一个简单的性能分析软件包</li><li><a href="https://github.com/zpatrick/rclient" target="_blank" rel="noopener noreferrer">rclient</a> - 可读性良好、灵活、易用的 REST APIs 客户端</li><li><a href="https://github.com/tockins/realize" target="_blank" rel="noopener noreferrer">realize</a> - Go 语言构建系统，可以监控文件变化并重新加载。运行，构建，监控文件并支持自定义路径</li><li><a href="https://github.com/mozillazg/request" target="_blank" rel="noopener noreferrer">request</a> - Go 语言版的 HTTP Requests for Humans™.</li><li><a href="https://github.com/abo/rerate" target="_blank" rel="noopener noreferrer">rerate</a> - 基于 Redis 的速率计数器和限速器</li><li><a href="https://github.com/ivpusic/rerun" target="_blank" rel="noopener noreferrer">rerun</a> - 当源码变化时，重新编译并重新运行 Go 语言编写的 app</li><li><a href="https://github.com/Go-resty/resty" target="_blank" rel="noopener noreferrer">resty</a> - 简单的 HTTP 和 REST 客户端，受到 Ruby rest-client 的启发</li><li><a href="https://github.com/kamilsk/retry" target="_blank" rel="noopener noreferrer">retry</a> - 基于上下文的功能机制，反复执行命令直到成功</li><li><a href="https://github.com/VividCortex/robustly" target="_blank" rel="noopener noreferrer">robustly</a> - 有弹性的执行函数，遇到错误时捕获并重新运行</li><li><a href="https://github.com/carlescere/scheduler" target="_blank" rel="noopener noreferrer">scheduler</a> - 从容的进行 Cronjobs 任务调度</li><li><a href="https://github.com/dghubble/sling" target="_blank" rel="noopener noreferrer">sling</a> - Go HTTP 请求构造器，用于 API 客户端</li><li><a href="https://github.com/briandowns/spinner" target="_blank" rel="noopener noreferrer">spinner</a> - 一个 Go 语言软件包，提供多种选项，方便在终端中创建加载动画</li><li><a href="https://github.com/jmoiron/sqlx" target="_blank" rel="noopener noreferrer">sqlx</a> - 为内建的数据库/sql 软件包提供一组扩展</li><li><a href="https://github.com/asdine/storm" target="_blank" rel="noopener noreferrer">Storm</a> - 一个用于 BoltDB 的简单又强大的工具</li><li><a href="https://github.com/Go-task/task" target="_blank" rel="noopener noreferrer">Task</a> - 简单来讲就是 &quot;Make&quot; 的替代品</li><li><a href="https://github.com/viant/toolbox" target="_blank" rel="noopener noreferrer">toolbox</a> - 切片, map, multimap, 结构体, 函数,数据转换工具。服务路由，宏求值和标记器</li><li><a href="https://github.com/alxrm/uGo" target="_blank" rel="noopener noreferrer">uGo</a> - uGo 是一个切片工具箱，有着和 Go 语言一致的语法</li><li><a href="https://github.com/esemplastic/unis" target="_blank" rel="noopener noreferrer">UNIS</a> - Go 语言字符串处理函数的通用架构</li><li><a href="https://github.com/knq/usql" target="_blank" rel="noopener noreferrer">usql</a> - usql 是一个通用的命令行接口，用于操作 sql 数据库</li><li><a href="https://github.com/shomali11/util" target="_blank" rel="noopener noreferrer">util</a> - 收集了很多有用的函数</li><li><a href="https://github.com/asciimoo/wuzz" target="_blank" rel="noopener noreferrer">wuzz</a> - 交互式命令行程序，用于进行 HTTP 检查</li><li><a href="https://github.com/monmohan/xferspdy" target="_blank" rel="noopener noreferrer">xferspdy</a> - Xferspdy 提供了二进制对比功能以及 Go 语言补丁库</li><li><a href="https://github.com/tealeg/xlsx" target="_blank" rel="noopener noreferrer">xlsx</a> - 简化了在 Go 语言程序中读取 xml 格式文件的操作</li></ul><h2 id="验证" tabindex="-1"><a class="header-anchor" href="#验证"><span>验证</span></a></h2><p><em>用于验证的库</em></p><ul><li><a href="https://github.com/asaskevich/Govalidator" target="_blank" rel="noopener noreferrer">Govalidator</a> - 数据验证及清晰工具，用于字符串，数字， 数组切片及结构体</li><li><a href="https://github.com/Go-ozzo/ozzo-validation" target="_blank" rel="noopener noreferrer">ozzo-validation</a> - 支持多种数据类型的验证 (结构体，字符串，键值对，数组切片等等)，具有可配置、可扩展的验证规则——使用常用代码结构定义，而非结构体标签</li><li><a href="https://github.com/markbates/validate" target="_blank" rel="noopener noreferrer">validate</a> - 提供了一个用于为 Go 语言英语程序编写验证工具的框架</li><li><a href="https://github.com/Go-playground/validator" target="_blank" rel="noopener noreferrer">validator</a> - Go 结构体及域验证，包括：跨域、跨结构体, Map, 切片和数组</li></ul><h2 id="版本控制" tabindex="-1"><a class="header-anchor" href="#版本控制"><span>版本控制</span></a></h2><p><em>用于版本控制的库</em></p><ul><li><a href="https://github.com/rjeczalik/gh" target="_blank" rel="noopener noreferrer">gh</a> - 用于 GitHub Webhooks 的可编程服务器以及 net/HTTP 中间件</li><li><a href="https://github.com/libgit2/git2Go" target="_blank" rel="noopener noreferrer">git2Go</a> - libgit2 的 Go 语言接口</li><li><a href="https://github.com/sourcegraph/Go-vcs" target="_blank" rel="noopener noreferrer">Go-vcs</a> - 通过 Go 语言来操作和检视 VCS 代码仓库</li><li><a href="https://github.com/beyang/hGo" target="_blank" rel="noopener noreferrer">hGo</a> - HGo 是一个 Go 语言软件包集合，提供了对本地 Mercurial 仓库的读取能力.</li></ul><h2 id="视频" tabindex="-1"><a class="header-anchor" href="#视频"><span>视频</span></a></h2><p><em>用于操作视频的库</em></p><ul><li><a href="https://github.com/3d0c/gmf" target="_blank" rel="noopener noreferrer">gmf</a> - FFmpeg av* 库的 Go 语言接口.</li><li><a href="https://github.com/asticode/Go-astisub" target="_blank" rel="noopener noreferrer">Go-astisub</a> - 使用 Go 语言操作字幕(.srt, .stl, .ttml, .webvtt, .ssa/.ass, teletext, .smi, etc.).</li><li><a href="https://github.com/giorgisio/Goav" target="_blank" rel="noopener noreferrer">Goav</a> - 易用的 FFmpeg Go 语言接口</li><li><a href="https://github.com/ziutek/gst" target="_blank" rel="noopener noreferrer">gst</a> - GStreamer 的 Go 语言接口</li><li><a href="https://github.com/korandiz/v4l" target="_blank" rel="noopener noreferrer">v4l</a> - Linux 下使用的视频截图库，Go 语言编写</li></ul><h2 id="web-框架" tabindex="-1"><a class="header-anchor" href="#web-框架"><span>Web 框架</span></a></h2><p><em>全栈 web 框架</em></p><ul><li><a href="https://aahframework.org" target="_blank" rel="noopener noreferrer">aah</a> - 可扩展、高性能、快速发布的 Go 语言 web 框架</li><li><a href="https://github.com/sheng/air" target="_blank" rel="noopener noreferrer">Air</a> - 理想的 RESTful web 框架</li><li><a href="https://github.com/astaxie/beeGo" target="_blank" rel="noopener noreferrer">BeeGo</a> - beeGo 是一个开源的、高性能的 Go 语言 web 框架</li><li><a href="http://Gobuffalo.io" target="_blank" rel="noopener noreferrer">Buffalo</a> - 为 Go 语言带来堪比 Rails 的高生产效率</li><li><a href="https://github.com/labstack/echo" target="_blank" rel="noopener noreferrer">Echo</a> - 高性能、极简的 Go 语言 web 框架</li><li><a href="https://github.com/zpatrick/fireball" target="_blank" rel="noopener noreferrer">Fireball</a> - 感觉更加自然的 web 框架</li><li><a href="https://github.com/jabong/florest-core" target="_blank" rel="noopener noreferrer">Florest</a> - 高性能的、基于工作流的 REST API 框架</li><li><a href="https://github.com/Go-gem/gem" target="_blank" rel="noopener noreferrer">Gem</a> - 简单快速的 web 框架，对 REST API 很友好</li><li><a href="https://github.com/gin-Gonic/gin" target="_blank" rel="noopener noreferrer">Gin</a> - Gin 是一个 Go 语言编写的 web 框架！提供了一组类似 martini 的 API ，具有更好的性能（40倍）。如果你需要高性能和高生产率，这个框架很适合你</li><li><a href="https://github.com/NYTimes/gizmo" target="_blank" rel="noopener noreferrer">Gizmo</a> - 纽约时报正在使用对微服务工具集</li><li><a href="https://github.com/ant0ine/Go-json-rest" target="_blank" rel="noopener noreferrer">Go-json-rest</a> - 快速、简单的创建 RESTful JSON API.</li><li><a href="https://github.com/codehack/Go-relax" target="_blank" rel="noopener noreferrer">Go-relax</a> - 具有可插拔组建的框架，用于构建 RESTful API&#39;s.</li><li><a href="https://github.com/ungerik/Go-rest" target="_blank" rel="noopener noreferrer">Go-rest</a> - Go 语言 REST 框架中的小恶魔</li><li><a href="https://github.com/raphael/Goa" target="_blank" rel="noopener noreferrer">Goa</a> - 用于开发微服务的框架，基于 Ruby 的 Praxis 的设计</li><li><a href="https://github.com/dinever/Golf" target="_blank" rel="noopener noreferrer">Golf</a> - Golf 是一个快速、简单、轻量级的 Go 语言微型 web 框架。具有强大的功能且没有标准库以外的依赖</li><li><a href="https://github.com/rainycape/Gondola" target="_blank" rel="noopener noreferrer">Gondola</a> - 用于快速编写高性能网站的框架</li><li><a href="https://github.com/mustafaakin/Gongular" target="_blank" rel="noopener noreferrer">Gongular</a> - 快速 Go web 框架，支持输入映射／验证以及依赖注入</li><li><a href="https://github.com/Go-macaron/macaron" target="_blank" rel="noopener noreferrer">Macaron</a> - Macaron 是一个高效的模块化设计的web框架</li><li><a href="https://github.com/paulbellamy/manGo" target="_blank" rel="noopener noreferrer">manGo</a> - ManGo 是一个模块化 web 应用框架，受到 Rack 和 PEP333 的启发</li><li><a href="https://github.com/clayGod/microservice" target="_blank" rel="noopener noreferrer">Microservice</a> - 用于创建微服务的框架，使用 Go 语言编写</li><li><a href="https://github.com/ivpusic/neo" target="_blank" rel="noopener noreferrer">neo</a> - 是一个极小且快速的 Go 语言 web 框架，具有及其简单的 API</li><li><a href="https://github.com/resoursea/api" target="_blank" rel="noopener noreferrer">Resoursea</a> - 用于快速编写基于资源对服务的 REST 框架</li><li><a href="http://rest-layer.io" target="_blank" rel="noopener noreferrer">REST Layer</a> - 用于构建在数据库之上构建 REST/GraphQL API 且大多数配置都可以通过代码完成</li><li><a href="https://github.com/revel/revel" target="_blank" rel="noopener noreferrer">Revel</a> - go语言高生产率框架</li><li><a href="https://github.com/Goanywhere/rex" target="_blank" rel="noopener noreferrer">rex</a> - Rex 是一个用于进行模块化开发的库，基于Gorilla/mux 完全兼容大多数的 <code>net/HTTP</code>.</li><li><a href="https://github.com/jaybill/sawsij" target="_blank" rel="noopener noreferrer">sawsij</a> - 轻量级、开源的 web 框架，用于构建高性能、数据驱动的web应用</li><li><a href="https://github.com/lunny/tanGo" target="_blank" rel="noopener noreferrer">tanGo</a> - 微型的、支持插件的 web 框架</li><li><a href="https://github.com/rcrowley/Go-tigertonic" target="_blank" rel="noopener noreferrer">tigertonic</a> - 用于构建 JSON web 服务的 Go 语言框架，受到 Dropwizard 的启发</li><li><a href="https://github.com/pilu/traffic" target="_blank" rel="noopener noreferrer">traffic</a> - 受到 Sinatra 启发的 Go 语言 web 框架</li><li><a href="https://github.com/gernest/utron" target="_blank" rel="noopener noreferrer">utron</a> - 轻量级的go语言 MVC 框架</li><li><a href="https://github.com/nbari/violetear" target="_blank" rel="noopener noreferrer">violetear</a> - Go HTTP 路由库</li><li><a href="https://github.com/yarf-framework/yarf" target="_blank" rel="noopener noreferrer">YARF</a> - 快速的微型框架，用于快速、简单地构建 REST APIs 以及 web 服务</li><li><a href="https://github.com/cosiner/zerver" target="_blank" rel="noopener noreferrer">Zerver</a> - Zerver 是一个富有表达力的、模块化的、全功能的 RESTful 框架.</li></ul><h2 id="windows" tabindex="-1"><a class="header-anchor" href="#windows"><span>Windows</span></a></h2><ul><li><a href="https://github.com/Gonutz/d3d9" target="_blank" rel="noopener noreferrer">d3d9</a> - Direct3D9 的 Go 语言接口</li><li><a href="https://github.com/Go-ole/Go-ole" target="_blank" rel="noopener noreferrer">Go-ole</a> - 为 Go 语言实现的 Win32 OLE</li></ul><h2 id="xml" tabindex="-1"><a class="header-anchor" href="#xml"><span>XML</span></a></h2><p><em>Libraries and tools for manipulating XML.</em></p><ul><li><a href="https://github.com/jteeuwen/Go-pkg-xmlx" target="_blank" rel="noopener noreferrer">Go-pkg-xmlx</a> - 对 Go 语言 XML 标准库的扩展。维护来一个节点树，允许前进和后退浏览以及一些简单的单／多节点搜索函数</li><li><a href="https://github.com/xml-comp/xml-comp" target="_blank" rel="noopener noreferrer">XML-Comp</a> - 简单的命令行 XML 比较工具，可以生成关于目录、文件和标签对差异信息</li><li><a href="https://github.com/shabbyrobe/xmlwriter" target="_blank" rel="noopener noreferrer">xmlwriter</a> - Procedural XML 生成 API 基于 libxml2 的 xmlwriter 模块.</li><li><a href="https://github.com/antchfx/xpath" target="_blank" rel="noopener noreferrer">xpath</a> - XPath 库</li><li><a href="https://github.com/antchfx/xquery" target="_blank" rel="noopener noreferrer">xquery</a> - XQuery 使你可以从 HTML/XML文档中抽取数据和求值，使用 XPath 表达式</li></ul><h3 id="中间件" tabindex="-1"><a class="header-anchor" href="#中间件"><span>中间件</span></a></h3><h4 id="中间件-1" tabindex="-1"><a class="header-anchor" href="#中间件-1"><span>中间件</span></a></h4><ul><li><a href="https://github.com/rs/cors" target="_blank" rel="noopener noreferrer">CORS</a> - 非常方便地向你的 api 中添加 CORS 功能</li><li><a href="https://github.com/rs/formjson" target="_blank" rel="noopener noreferrer">formjson</a> - 将 JSON 输入看作说一个标准的表单 POST 来处理</li><li><a href="https://github.com/ulule/limiter" target="_blank" rel="noopener noreferrer">Limiter</a> - 超级简单的限速中间件</li><li><a href="https://github.com/didip/tollbooth" target="_blank" rel="noopener noreferrer">Tollbooth</a> - HTTP 请求限速中间件</li><li><a href="https://github.com/sebest/xff" target="_blank" rel="noopener noreferrer">XFF</a> - 处理 <code>X-Forwarded-For</code> 头的中间件</li></ul><h4 id="用于创建-http-中间件的库" tabindex="-1"><a class="header-anchor" href="#用于创建-http-中间件的库"><span>用于创建 HTTP 中间件的库</span></a></h4><ul><li><a href="https://github.com/justinas/alice" target="_blank" rel="noopener noreferrer">alice</a> - 用于连接中间件的库，简单无痛苦</li><li><a href="https://github.com/codemodus/catena" target="_blank" rel="noopener noreferrer">catena</a> - HTTP.Handler wrapper catenation (和chain具有相同的 API ).</li><li><a href="https://github.com/codemodus/chain" target="_blank" rel="noopener noreferrer">chain</a> - Handler wrapper chaining with scoped data (net/context-based &quot;middleware&quot;).</li><li><a href="https://github.com/Go-on/wrap" target="_blank" rel="noopener noreferrer">Go-wrap</a> - 小型中间件库，用于net/HTTP.</li><li><a href="https://github.com/alioygur/Gores" target="_blank" rel="noopener noreferrer">Gores</a> - 用于处理 HTML, JSON, XML 等。对于 RESTful APIs 很有用。</li><li><a href="https://github.com/carbocation/interpose" target="_blank" rel="noopener noreferrer">interpose</a> - 极简的 net/HTTP 中间件</li><li><a href="https://github.com/stephens2424/muxchain" target="_blank" rel="noopener noreferrer">muxchain</a> - 用于net/HTTP的轻量级中间件</li><li><a href="https://github.com/urfave/negroni" target="_blank" rel="noopener noreferrer">negroni</a> - 符合语言习惯的 HTTP 中间件库</li><li><a href="https://github.com/unrolled/render" target="_blank" rel="noopener noreferrer">render</a> - 用于轻松渲染 JSON, XML, 及 HTML 模板响应的库</li><li><a href="https://github.com/InVisionApp/rye" target="_blank" rel="noopener noreferrer">rye</a> - 小型 Go 语言中间件库 ，支持 JWT, CORS, Statsd, 及 Go 1.7 context</li><li><a href="https://github.com/thoas/stats" target="_blank" rel="noopener noreferrer">stats</a> - Go 语言中间件，用于存储web应用的多种信息</li><li><a href="https://github.com/volatile/core" target="_blank" rel="noopener noreferrer">Volatile</a> - 极简的go语言中间件技术栈，强调灵活性、优秀实践及简洁代码</li></ul><h3 id="路由" tabindex="-1"><a class="header-anchor" href="#路由"><span>路由</span></a></h3><ul><li><a href="https://github.com/gernest/alien" target="_blank" rel="noopener noreferrer">alien</a> - 轻量级、超快速的 HTTP 路由，来自外星科技</li><li><a href="https://github.com/Go-zoo/bone" target="_blank" rel="noopener noreferrer">Bone</a> - 轻量级快速 Fast HTTP Multiplexer.</li><li><a href="https://github.com/clayGod/Bxog" target="_blank" rel="noopener noreferrer">Bxog</a> - 为go语言编写的简单快速点 HTTP 路由。能够配合多种不同复杂度、长度和嵌套的路由工作。同时它能够根据接收到的参数创建 URL</li><li><a href="https://github.com/Go-chi/chi" target="_blank" rel="noopener noreferrer">chi</a> - 小巧、快速、具有丰富表达力的 HTTP 路由，基于net/context.</li><li><a href="https://github.com/buaazp/fasthttprouter" target="_blank" rel="noopener noreferrer">fasthttprouter</a> - 从<code>httprouter</code> fork出来的高性能路由，是第一个适配 <code>fasthttp</code>的路由</li><li><a href="https://github.com/Gocraft/web" target="_blank" rel="noopener noreferrer">Gocraft/web</a> - Mux 及中间件包</li><li><a href="https://github.com/Goji/Goji" target="_blank" rel="noopener noreferrer">Goji</a> - Goji 是一个极简的、灵活的HTTP 请求数据分选器，支持 <code>net/context</code>.</li><li><a href="https://github.com/vardius/Gorouter" target="_blank" rel="noopener noreferrer">GoRouter</a> - GoRouter 是一个服务器/API 微型框架、HTTP 请求路由 router, 数据分选器，提供了支持<code>net/context</code>的中间件</li><li><a href="https://github.com/Gowww/router" target="_blank" rel="noopener noreferrer">Gowww/router</a> - 超快的HTTP 路由，完全兼容 net/HTTP.Handler 接口.</li><li><a href="https://github.com/julienschmidt/httprouter" target="_blank" rel="noopener noreferrer">httprouter</a> - 高性能路由。使用这个库和标准http处理工具可以构建一个非常高性能大web框架</li><li><a href="https://github.com/dimfeld/httptreemux" target="_blank" rel="noopener noreferrer">httptreemux</a> - 高速，灵活，基于树的 HTTP 路由。受到了 httprouter 的启发</li><li><a href="https://github.com/Go-playground/lars" target="_blank" rel="noopener noreferrer">lars</a> - 树一个轻量级、快速、可扩展、零分配的HTTP路由，用于创建定制化的框架</li><li><a href="https://github.com/imdario/medeina" target="_blank" rel="noopener noreferrer">medeina</a> - Medeina是一个HTTP路由树，基于 HttpRouter 。基于 Roda 和 Cuba.</li><li><a href="https://github.com/Gorilla/mux" target="_blank" rel="noopener noreferrer">mux</a> - 强大的 URL 路由和分发库</li><li><a href="https://github.com/Go-ozzo/ozzo-routing" target="_blank" rel="noopener noreferrer">ozzo-routing</a> - 一个极快的go语言http路由，支持正则路由匹配。完全支持创建 RESTful APIs.</li><li><a href="https://github.com/bmizerany/pat" target="_blank" rel="noopener noreferrer">pat</a> - Sinatra 风格的模式 muxer ，用于go语言 net/http库，由 Sinatra的作者编写。</li><li><a href="https://github.com/Go-playground/pure" target="_blank" rel="noopener noreferrer">pure</a> - 是一个轻量级http路由，严格符合标准&quot;net/HTTP&quot;实现</li><li><a href="https://github.com/VividCortex/siesta" target="_blank" rel="noopener noreferrer">Siesta</a> - 具有可组合性的框架，用于编写中间件和 handlers</li><li><a href="https://github.com/husobee/vestiGo" target="_blank" rel="noopener noreferrer">vestiGo</a> - 高性能、独立的、符合 HTTP 标准的 URL 路由，用于构建go语言web应用</li><li><a href="https://github.com/rs/xmux" target="_blank" rel="noopener noreferrer">xmux</a> - 高性能 muxer，基于 <code>httprouter</code> ，支持 <code>net/context</code></li><li><a href="https://github.com/daryl/zeus" target="_blank" rel="noopener noreferrer">zeus</a> - 非常简单快速的http路由</li></ul><h1 id="工具" tabindex="-1"><a class="header-anchor" href="#工具"><span>工具</span></a></h1><p><em>Go语言软件及插件</em></p><h2 id="代码分析" tabindex="-1"><a class="header-anchor" href="#代码分析"><span>代码分析</span></a></h2><ul><li><a href="https://github.com/bradleyfalzon/apicompat" target="_blank" rel="noopener noreferrer">apicompat</a> - 检测一个go语言项目最近的变化，用于监测不能向后兼容的改动</li><li><a href="https://github.com/mibk/dupl" target="_blank" rel="noopener noreferrer">dupl</a> - 用于检测重复代码的工具</li><li><a href="https://github.com/kisielk/errcheck" target="_blank" rel="noopener noreferrer">errcheck</a> - Errcheck 是一个用于检测go语言程序中未处理错误的程序</li><li><a href="https://github.com/davecheney/gcvis" target="_blank" rel="noopener noreferrer">gcvis</a> - 实时地将 Go 语言垃圾回收进行可视化</li><li><a href="https://github.com/alecthomas/Gometalinter" target="_blank" rel="noopener noreferrer">Go Metalinter</a> - Metalinter 会自动应用全部的静态分析工具，并生成形式一致的分析报告</li><li><a href="https://github.com/qiniu/checkstyle" target="_blank" rel="noopener noreferrer">Go-checkstyle</a> checkstyle是一个代码风格检查工具，类似 java checkstyle 。这个工具就是受到 java checkstyle 和 Golint 的启发</li><li><a href="https://github.com/roblaszczak/Go-cleanarch" target="_blank" rel="noopener noreferrer">Go-cleanarch</a> - Go-cleanarch 用于检查代码是否符合简洁架构的相关法则，比如依赖法则以及你的Go语言项目中各个库的交互情况</li><li><a href="https://github.com/firstrow/Go-outdated" target="_blank" rel="noopener noreferrer">Go-outdated</a> - 这是一个命令行程序，用于显示过时的库</li><li><a href="https://github.com/yuroyoro/Goast-viewer" target="_blank" rel="noopener noreferrer">Goast-viewer</a> - 基于 Web 的 Golang AST 可视化工具.</li><li><a href="http://Gocover.io/" target="_blank" rel="noopener noreferrer">GoCover.io</a> - GoCover.io 可以查看任何go语言软件包的代码覆盖率</li><li><a href="https://Godoc.org/Golang.org/x/tools/cmd/Goimports" target="_blank" rel="noopener noreferrer">Goimports</a> - 用于自动修复，添加，删除你的 Go 语言项目的 import</li><li><a href="https://github.com/Golang/lint" target="_blank" rel="noopener noreferrer">GoLint</a> - Golint 是一个针对 Go 语言源码的 lint 工具</li><li><a href="http://Go-lint.appspot.com/" target="_blank" rel="noopener noreferrer">Golint online</a> - 使用golint对GitHub, Bitbucket 以及 Google Project Hosting上面的 Go 语言源文件进行静态分析</li><li><a href="https://sourcegraph.com/github.com/sqs/Goreturns" target="_blank" rel="noopener noreferrer">Goreturns</a> - 添加零值 return 语句以符合函数返回值类型</li><li><a href="https://github.com/dominikh/Go-tools/tree/master/cmd/Gosimple" target="_blank" rel="noopener noreferrer">Gosimple</a> - Gosimple 是一个针对 Go 语言的lint工具，专注于简化代码</li><li><a href="https://github.com/shurcooL/Gostatus" target="_blank" rel="noopener noreferrer">Gostatus</a> - 命令行工具，查看当前 Go 语言软件包仓库的状态</li><li><a href="https://github.com/mvdan/interfacer" target="_blank" rel="noopener noreferrer">interfacer</a> - 可以提供接口类型建议的 Lint 工具</li><li><a href="https://github.com/surullabs/lint" target="_blank" rel="noopener noreferrer">lint</a> - 将lint作为go语言测试的一部分来执行</li><li><a href="https://github.com/dominikh/Go-tools/tree/master/cmd/staticcheck" target="_blank" rel="noopener noreferrer">staticcheck</a> - staticcheck is <code>Go vet</code> on steroids, applying a ton of static analysis checks you might be used to from tools like ReSharper for C#.</li><li><a href="https://github.com/mdempsky/unconvert" target="_blank" rel="noopener noreferrer">unconvert</a> - 从go语言代码中移除不必要的类型转换</li><li><a href="https://github.com/dominikh/Go-tools/tree/master/cmd/unused" target="_blank" rel="noopener noreferrer">unused</a> - unused 会检查 Go 语言代码中没有用到的常量，变量，函数和类型</li><li><a href="https://github.com/mccoyst/validate" target="_blank" rel="noopener noreferrer">validate</a> - 自动验证结构体类型</li></ul><h2 id="编辑器插件" tabindex="-1"><a class="header-anchor" href="#编辑器插件"><span>编辑器插件</span></a></h2><ul><li><a href="https://plugins.jetbrains.com/plugin/9568-Go" target="_blank" rel="noopener noreferrer">Go plugin for JetBrains IDEs</a> - JetBrains IDEs 使用的 Go 语言插件</li><li><a href="https://github.com/Go-lang-plugin-org/Go-lang-idea-plugin" target="_blank" rel="noopener noreferrer">Go-lang-idea-plugin</a> (废弃) - IntelliJ (JetBrains) IDEA 之前使用的插件，现在已经被上面的官方插件所取代</li><li><a href="https://github.com/dominikh/Go-mode.el" target="_blank" rel="noopener noreferrer">Go-mode</a> - GNU/Emacs的 Go 语言模式</li><li><a href="https://github.com/joefitzgerald/Go-plus" target="_blank" rel="noopener noreferrer">Go-plus</a> - 供Atom 使用的自动补全、格式化、语法检查、lint 及 Vetting 的软件包</li><li><a href="https://github.com/GoClipse/Goclipse" target="_blank" rel="noopener noreferrer">Goclipse</a> - Eclipse 的 Go 语言插件</li><li><a href="https://github.com/nsf/Gocode" target="_blank" rel="noopener noreferrer">Gocode</a> - go语言自动补全</li><li><a href="https://github.com/DisposaBoy/GoSublime" target="_blank" rel="noopener noreferrer">GoSublime</a> - SublimeText 2 使用的 Go 语言插件，支持代码补全以及一些类似 IDE 的特性</li><li><a href="https://github.com/velour/velour" target="_blank" rel="noopener noreferrer">velour</a> - acme 编辑器使用的 IRC 客户端</li><li><a href="https://github.com/rjohnsondev/vim-compiler-Go" target="_blank" rel="noopener noreferrer">vim-compiler-Go</a> - Vim插件，在保存时高亮语法错误</li><li><a href="https://github.com/fatih/vim-Go" target="_blank" rel="noopener noreferrer">vim-Go</a> - Vim 使用的 Go 语言开发插件</li><li><a href="https://github.com/Microsoft/vscode-Go" target="_blank" rel="noopener noreferrer">vscode-Go</a> - Visual Studio Code (VS Code) 使用的一个扩展，为 Go 语言提供了支持</li><li><a href="https://github.com/eaburns/Watch" target="_blank" rel="noopener noreferrer">Watch</a> - 当文件变动时，在 acme 窗口中执行命令</li></ul><h2 id="go-语言工具" tabindex="-1"><a class="header-anchor" href="#go-语言工具"><span>Go 语言工具</span></a></h2><ul><li><a href="https://github.com/songgao/colorGo" target="_blank" rel="noopener noreferrer">colorGo</a> - 对 <code>Go</code> 命令进行了封装，用于为<code>Go build</code>的输出结果添加颜色</li><li><a href="https://github.com/KyleBanks/depth" target="_blank" rel="noopener noreferrer">depth</a> - 通过分析导入的库，将某个包的依赖关系用树状结构进行显示</li><li><a href="https://getgb.io/" target="_blank" rel="noopener noreferrer">gb</a> - 一个简单易用的基于项目的构建工具，用于 Go 语言</li><li><a href="https://github.com/TrueFurby/Go-callvis" target="_blank" rel="noopener noreferrer">Go-callvis</a> - 使用 dot 语言将你的 Go 语言程序函数调用关系可视化</li><li><a href="https://github.com/skelterjohn/Go-pkg-complete" target="_blank" rel="noopener noreferrer">Go-pkg-complete</a> - Bash 代码补全，用于Go 和 wGo.</li><li><a href="https://github.com/Go-swagger/Go-swagger" target="_blank" rel="noopener noreferrer">Go-swagger</a> - 为 Go 语言实现的Swagger 2.0， Swagger 是一个简单但强大的工具，用于展示你的 RESTful API.</li><li><a href="https://github.com/OctoLinker/browser-extension" target="_blank" rel="noopener noreferrer">OctoLinker</a> - 使用 github 的浏览器插件 OctoLinker 高效浏览 Go 语言文件</li><li><a href="https://github.com/galeone/rts" target="_blank" rel="noopener noreferrer">rts</a> - RTS（是response to struct的缩写）用于根据服务器的响应生成 Go 语言结构体</li></ul><h2 id="软件包" tabindex="-1"><a class="header-anchor" href="#软件包"><span>软件包</span></a></h2><p><em>使用 Go 语言编写的软件</em></p><h3 id="devops-工具" tabindex="-1"><a class="header-anchor" href="#devops-工具"><span>DevOps 工具</span></a></h3><ul><li><a href="https://github.com/smira/aptly" target="_blank" rel="noopener noreferrer">aptly</a> - aptly 是一个 Debian 库管理工具</li><li><a href="https://github.com/Luxurioust/aurora" target="_blank" rel="noopener noreferrer">aurora</a> - 跨平台、基于web的 Beanstalkd 队列服务器控制台</li><li><a href="https://github.com/soniah/awsenv" target="_blank" rel="noopener noreferrer">awsenv</a> - 加载 Amazon (AWS) 环境变量作为 profile 文件</li><li><a href="https://github.com/eleme/banshee" target="_blank" rel="noopener noreferrer">Banshee</a> - 异常检测系统，用于周期性数据测量</li><li><a href="https://github.com/codesenberg/bombardier" target="_blank" rel="noopener noreferrer">bombardier</a> - 快速的、跨平台的HTTP 基准工具.</li><li><a href="https://github.com/bosun-monitor/bosun" target="_blank" rel="noopener noreferrer">bosun</a> - 时间序列告警框架</li><li><a href="https://github.com/liudng/doGo" target="_blank" rel="noopener noreferrer">doGo</a> - 监控源文件中的变化并自动编译和执行</li><li><a href="https://github.com/appleboy/drone-jenkins" target="_blank" rel="noopener noreferrer">drone-jenkins</a> - 触发下游 Jenkins 任务， 可以通过二进制文件、 docker 或者 Drone CI来使用</li><li><a href="https://github.com/appleboy/drone-scp" target="_blank" rel="noopener noreferrer">drone-scp</a> - 通过 SSH 拷贝文件及可执行程序,可以通过二进制文件、 docker 或者 Drone CI来使用</li><li><a href="https://github.com/chrismckenzie/dropship" target="_blank" rel="noopener noreferrer">Dropship</a> - 通过 cdn 部署代码的工具</li><li><a href="https://github.com/appleboy/easyssh-proxy" target="_blank" rel="noopener noreferrer">easyssh-proxy</a> - 一个用于通过 ssh 远程执行命令以及通过<code>ProxyCommand</code> 来进行 SCP 下载</li><li><a href="https://github.com/Go-gitea/gitea" target="_blank" rel="noopener noreferrer">Gitea</a> - Gogs的fork，完全社区驱动</li><li><a href="https://github.com/rcrowley/Go-metrics" target="_blank" rel="noopener noreferrer">Go Metrics</a> - Coda Hale 的 Metrics library的 Go 语言接口: <a href="https://github.com/codahale/metrics" target="_blank" rel="noopener noreferrer">https://github.com/codahale/metrics</a>.</li><li><a href="https://github.com/sanbornm/Go-selfupdate" target="_blank" rel="noopener noreferrer">Go-selfupdate</a> - 让你的 Go 语言程序可以自我更新</li><li><a href="https://github.com/cryptojuice/Gobrew" target="_blank" rel="noopener noreferrer">Gobrew</a> - Gobrew 让你可以在不同版本的 Go 语言之间轻松切换</li><li><a href="https://github.com/sirnewton01/Godbg" target="_blank" rel="noopener noreferrer">Godbg</a> - 基于 Web 的前端 gdb 应用程序</li><li><a href="https://Gogs.io/" target="_blank" rel="noopener noreferrer">Gogs</a> - 自我托管的Git服务</li><li><a href="https://github.com/inconshreveable/Gonative" target="_blank" rel="noopener noreferrer">Gonative</a> - 为 Go 语言创建可以在多平台进行交叉编译的工具，使用 CGo-enabled 标准库</li><li><a href="https://github.com/ahmetalpbalkan/Govvv" target="_blank" rel="noopener noreferrer">Govvv</a> - 对“Go build”进行了封装，用于轻松的向 Go 语言二进制文件中添加版本信息</li><li><a href="https://github.com/mitchellh/Gox" target="_blank" rel="noopener noreferrer">Gox</a> - 非常简单的 Go 语言交叉编译工具</li><li><a href="https://github.com/laher/Goxc" target="_blank" rel="noopener noreferrer">Goxc</a> - Go 语言构建工具，专注于交叉编译和打包</li><li><a href="https://github.com/yaronsumel/grapes" target="_blank" rel="noopener noreferrer">grapes</a> - 一款轻量级工具，用于通过 ssh 发送命令</li><li><a href="https://github.com/moovweb/gvm" target="_blank" rel="noopener noreferrer">GVM</a> - GVM 提供了用于管理 Go 语言版本的接口</li><li><a href="https://github.com/rakyll/hey" target="_blank" rel="noopener noreferrer">Hey</a> - Hey 是一个微型程序，用于向 web 应用发送一些載荷</li><li><a href="https://github.com/ajvb/kala" target="_blank" rel="noopener noreferrer">kala</a> - 极简、现代的、高效的任务调度</li><li><a href="https://github.com/kubernetes/kubernetes" target="_blank" rel="noopener noreferrer">kubernetes</a> - 来自 Google 的容器集群管理器</li><li><a href="https://github.com/moby/moby" target="_blank" rel="noopener noreferrer">Moby</a> - 为容器生态系统创建的一个合作项目，用于构建基于容器的系统</li><li><a href="https://github.com/emicklei/mora" target="_blank" rel="noopener noreferrer">Mora</a> - REST 服务器，用于获取 MonGoDB 文件和元数据</li><li><a href="https://github.com/ostrost/ostent" target="_blank" rel="noopener noreferrer">ostent</a> - 收集并显示系统数据，可以作 Graphite 和／或 InfluxDB 的中继</li><li><a href="https://github.com/mitchellh/packer" target="_blank" rel="noopener noreferrer">Packer</a> - Packer 通过单一的配置文件，为不同的平台创建独立机器镜像</li><li><a href="https://github.com/bengadbois/pewpew" target="_blank" rel="noopener noreferrer">Pewpew</a> - 灵活的 HTTP 命令行压力测试 工具</li><li><a href="https://github.com/alouche/rodent" target="_blank" rel="noopener noreferrer">Rodent</a> - Rodent 帮助你管理 Go 语言版本，项目病追踪依赖</li><li><a href="https://github.com/rlmcpherson/s3Gof3r" target="_blank" rel="noopener noreferrer">s3Gof3r</a> - 为了从 Amazon S3中高速存取大型对象而特别优化的库</li><li><a href="https://github.com/scaleway/scaleway-cli" target="_blank" rel="noopener noreferrer">Scaleway-cli</a> - 通过命令行来管理 BareMetal 服务器 (和使用 Docker 一样容易).</li><li><a href="https://github.com/ChristopherRabotin/sg" target="_blank" rel="noopener noreferrer">sg</a> - 对一组 HTTP 端点 (比如 ab)进行了基准测试， with possibility to use the reponse code and data between each call for specific server stress based on its previous response.</li><li><a href="https://github.com/sanathp/statusok" target="_blank" rel="noopener noreferrer">StatusOK</a> - 监控你的网站和 REST APIs。如果你的服务器挂了或是响应时间超过预期，则会通过 Slack, E-mail 来通知你</li><li><a href="https://github.com/tsenart/vegeta" target="_blank" rel="noopener noreferrer">Vegeta</a> - HTTP 加载测试工具和库</li><li><a href="https://github.com/adnanh/webhook" target="_blank" rel="noopener noreferrer">webhook</a> - 允许用户创建 HTTP 端点，在服务器上执行命令</li><li><a href="https://wide.b3log.org/login" target="_blank" rel="noopener noreferrer">Wide</a> - 基于 Web 的 IDE，为使用 Go 语言的团队设计</li><li><a href="https://github.com/masterzen/winrm-cli" target="_blank" rel="noopener noreferrer">winrm-cli</a> - 命令行工具，可以远程在 windows 机器上执行命令</li></ul><h3 id="其他软件" tabindex="-1"><a class="header-anchor" href="#其他软件"><span>其他软件</span></a></h3><ul><li><a href="https://github.com/crufter/borg" target="_blank" rel="noopener noreferrer">borg</a> - 基于终端的搜索引擎，用于搜索 bash 代码 片段</li><li><a href="https://github.com/tejo/boxed" target="_blank" rel="noopener noreferrer">boxed</a> - 基于Dropbox 的博客引擎</li><li><a href="https://github.com/rafael-santiaGo/cherry" target="_blank" rel="noopener noreferrer">Cherry</a> - Go 语言实现的一个微型网络聊天服务器</li><li><a href="https://github.com/Gocircuit/circuit" target="_blank" rel="noopener noreferrer">Circuit</a> - Circuit 是一个可编程的 PaaS 以及 IaaS,用于管理、发现以及编排各种云端应用的服务及主机</li><li><a href="https://github.com/tylertreat/Comcast" target="_blank" rel="noopener noreferrer">Comcast</a> - 模拟不佳的网络连接</li><li><a href="https://github.com/kelseyhightower/confd" target="_blank" rel="noopener noreferrer">confd</a> - 使用 etcd 或 consul 的模板及数据管理本地应用的配置文件</li><li><a href="https://github.com/skibish/ddns" target="_blank" rel="noopener noreferrer">DDNS</a> - 个人 DDNS 客户端，使用 Digital Ocean DNS 作为后端</li><li><a href="http://www.docker.com/" target="_blank" rel="noopener noreferrer">Docker</a> - 一个为开发者和系统管理员提供的分布式应用开放平台</li><li><a href="https://github.com/documize/community" target="_blank" rel="noopener noreferrer">Documize</a> - 现代维基百科软件，可以继承 SaaS 工具提供的数据</li><li><a href="https://github.com/coreos/fleet" target="_blank" rel="noopener noreferrer">fleet</a> - 分布式初始化系统</li><li><a href="https://github.com/shurcooL/Go-Package-Store#Go-package-store-" target="_blank" rel="noopener noreferrer">Go Package Store</a> - 一个可以显示你的 GoPATH 路径下 Go 软件包的更新的应用</li><li><a href="https://github.com/Goccmack/Gocc" target="_blank" rel="noopener noreferrer">Gocc</a> - Gocc 是一个用 Go 语言编写的 Go 语言编辑器工具集</li><li><a href="https://github.com/diankong/GoDocTooltip" target="_blank" rel="noopener noreferrer">GoDocTooltip</a> - 一个Chrome 浏览器扩展，可以在浏览 Go 语言文档时以工具提示的方式显示函数的描述信息</li><li><a href="https://www.jetbrains.com/go/" target="_blank" rel="noopener noreferrer">Gogland</a> - 跨平台、全功能 Go 语言集成开发环境</li><li><a href="https://github.com/buger/Gor" target="_blank" rel="noopener noreferrer">Gor</a> - Http 流量复制工具，用于将生产环境的流量在开发环境实施重现</li><li><a href="http://ambrevar.bitbucket.org/hsync/" target="_blank" rel="noopener noreferrer">hsync</a> - 文件系统同步工具</li><li><a href="http://GohuGo.io/" target="_blank" rel="noopener noreferrer">huGo</a> - 快速、现代的静态 web 引擎</li><li><a href="https://github.com/dimiro1/ipe" target="_blank" rel="noopener noreferrer">ipe</a> - 开源 Pusher 服务器，Go 语言编写，兼容 Pusher 客户端，由 Go 语言编写</li><li><a href="https://github.com/yazgazan/jaydiff" target="_blank" rel="noopener noreferrer">JayDiff</a> - Go 语言编写的JSON对比工具</li><li><a href="https://jujucharms.com/" target="_blank" rel="noopener noreferrer">Juju</a> - 服务部署及编排工具，，支持 EC2, Azure, Openstack, MAAS 等等</li><li><a href="https://github.com/jeffail/leaps" target="_blank" rel="noopener noreferrer">Leaps</a> - 结对编程服务，使用操作变换来避免冲突。</li><li><a href="http://limetext.org/" target="_blank" rel="noopener noreferrer">limetext</a> Lime Text 是一个强大又优雅的编辑器，主要使用 Go 语言开发，意在成为 Sublime Text的继承者。</li><li><a href="https://github.com/visualfc/liteide" target="_blank" rel="noopener noreferrer">LiteIDE</a> - LiteIDE 是一个简单、开源、跨平台的 Go 语言 IDE</li><li><a href="https://github.com/quii/mockingjay-server" target="_blank" rel="noopener noreferrer">mockingjay</a> - 伪 HTTP 服务器，通过单一配置文件创建消费驱动。同时你还可以让服务器搞点事情，以进行更加符合现实情况的性能测试</li><li><a href="https://github.com/mehrdadrad/mylg" target="_blank" rel="noopener noreferrer">myLG</a> - Go 语言编写的命令行网络诊断工具</li><li><a href="https://github.com/unix4fun/naclpipe" target="_blank" rel="noopener noreferrer">naclpipe</a> - 简单的基于NaCL EC25519 的加密管道工具</li><li><a href="https://github.com/fogleman/nes" target="_blank" rel="noopener noreferrer">nes</a> - Go 语言编写的任天堂娱乐系统(NES)模拟器</li><li><a href="https://github.com/noraesae/orange-cat" target="_blank" rel="noopener noreferrer">orange-cat</a> - Go 语言编写的 Markdown 预览工具</li><li><a href="https://github.com/pointlander/peg" target="_blank" rel="noopener noreferrer">peg</a> - Peg（Parsing Expression Grammar）是一个 Packrat parser generator 的实现</li><li><a href="https://github.com/zachlatta/postman" target="_blank" rel="noopener noreferrer">Postman</a> - 一个批量发送邮件的命令行工具</li><li><a href="https://github.com/restic/restic" target="_blank" rel="noopener noreferrer">restic</a> - 解耦备份程序</li><li><a href="https://github.com/coreos/rkt" target="_blank" rel="noopener noreferrer">rkt</a> - App 容器运行时，集成了初始化系统，和其他容器兼容，比如 Docker，并且支持其他执行引擎，例如 KVM</li><li><a href="https://github.com/chrislusf/seaweedfs" target="_blank" rel="noopener noreferrer">Seaweed File System</a> - 快速、简单、可扩展的分布式文件系统，具有O(1)的磁盘查找效率</li><li><a href="https://github.com/msoap/shell2http" target="_blank" rel="noopener noreferrer">shell2http</a> - 通过 HTTP 服务器执行 shell 命令行(用于原型验证或远程控制).</li><li><a href="https://github.com/intelsdi-x/snap" target="_blank" rel="noopener noreferrer">snap</a> - 强大的遥测框架</li><li><a href="https://github.com/pressly/sup" target="_blank" rel="noopener noreferrer">Stack Up</a> - Stack Up 是一个超级简单的开发工具，就好比是服务器网络的 ‘make’ 工具</li><li><a href="https://syncthing.net/" target="_blank" rel="noopener noreferrer">syncthing</a> - 开源、去中心化的文件同步工具和协议</li><li><a href="https://github.com/kyleterry/tenyks" target="_blank" rel="noopener noreferrer">Tenyks</a> - 面向服务的 IRC 机器人，使用 Redis 和 JSON 来发送消息</li><li><a href="https://github.com/blogcin/ToTo" target="_blank" rel="noopener noreferrer">toto</a> - Go 语言编写的简单代理服务器，可以和浏览器一起使用</li><li><a href="https://github.com/shopify/toxiproxy" target="_blank" rel="noopener noreferrer">toxiproxy</a> - 模拟网络和系统状态的代理，用于自动化测试</li><li><a href="https://tsuru.io/" target="_blank" rel="noopener noreferrer">tsuru</a> - 可扩展的、开源的 SAAS 软件</li><li><a href="https://github.com/VerizonDigital/vflow" target="_blank" rel="noopener noreferrer">vFlow</a> - 高性能、可扩展、可靠的 IPFIX, sFlow 和 Netflow 集合.</li><li><a href="https://github.com/ian-kent/websysd" target="_blank" rel="noopener noreferrer">websysd</a> - 基于 web 的进程管理工具(类似 Marathon 或 Upstart).</li><li><a href="https://github.com/wellington/wellington" target="_blank" rel="noopener noreferrer">wellington</a> - Sass 项目管理工具， 通过支持一些功能（例如Compass）扩展了这门语言</li></ul><h1 id="资源" tabindex="-1"><a class="header-anchor" href="#资源"><span>资源</span></a></h1><p><em>可以找到新的 Go 语言库和软件的地方</em></p><h2 id="基准测试" tabindex="-1"><a class="header-anchor" href="#基准测试"><span>基准测试</span></a></h2><ul><li><a href="https://github.com/davecheney/autobench" target="_blank" rel="noopener noreferrer">autobench</a> - 用于比较各个不同版本 Go 语言之间的性能的框架</li><li><a href="https://github.com/mrLSD/Go-benchmark-app" target="_blank" rel="noopener noreferrer">Go-benchmark-app</a> - 强大的 HTTP 基准测试工具，集成来 Аb, Wrk, Siege 工具。收集来统计数据以及多种参数用于基准测试和结果比较</li><li><a href="https://github.com/tylertreat/Go-benchmarks" target="_blank" rel="noopener noreferrer">Go-benchmarks</a> - 一些基准程序的大杂烩。用于比较一些语言特性以及它们的替代方法.</li><li><a href="https://github.com/julienschmidt/Go-HTTP-routing-benchmark" target="_blank" rel="noopener noreferrer">Go-HTTP-routing-benchmark</a> - Go HTTP 请求路由基准和比较</li><li><a href="https://github.com/hgfischer/Go-type-assertion-benchmark" target="_blank" rel="noopener noreferrer">Go-type-assertion-benchmark</a> - 对在 Go 语言中使用断言的两种方法进行了性能测试</li><li><a href="https://github.com/smallnest/Go-web-framework-benchmark" target="_blank" rel="noopener noreferrer">Go-web-framework-benchmark</a> - Go web 框架基准</li><li><a href="https://github.com/alecthomas/Go_serialization_benchmarks" target="_blank" rel="noopener noreferrer">Go_serialization_benchmarks</a> - Go 语言序列化方法基准测试</li><li><a href="https://github.com/PuerkitoBio/Gocostmodel" target="_blank" rel="noopener noreferrer">Gocostmodel</a> - Go 语言基础操作基准测试</li><li><a href="https://github.com/amscanne/Golang-micro-benchmarks" target="_blank" rel="noopener noreferrer">Golang-micro-benchmarks</a> - 一些go语言微基准测试的集合，目的是比较各种语言特性。</li><li><a href="https://github.com/tyler-smith/Golang-sql-benchmark" target="_blank" rel="noopener noreferrer">Golang-sql-benchmark</a> - 对一些流行的 Go database/SQL 工具进行基准测试</li><li><a href="https://github.com/feyeleanor/GoSpeed" target="_blank" rel="noopener noreferrer">Gospeed</a> - Go 语言微型基准测试工具，用于测试语言结构的速度</li><li><a href="https://github.com/jimrobinson/kvbench" target="_blank" rel="noopener noreferrer">kvbench</a> - 键值数据库基准测试</li><li><a href="https://github.com/atemerev/skynet" target="_blank" rel="noopener noreferrer">skynet</a> - Skynet 1M 线程微基准</li><li><a href="https://github.com/fawick/speedtest-resize" target="_blank" rel="noopener noreferrer">speedtest-resize</a> - 比较了 Go 语言的多种图片缩放算法</li></ul><h2 id="会议" tabindex="-1"><a class="header-anchor" href="#会议"><span>会议</span></a></h2><ul><li><a href="http://www.capitalGolang.com" target="_blank" rel="noopener noreferrer">Capital Go</a> - 美国华盛顿</li><li><a href="http://www.dotGo.eu" target="_blank" rel="noopener noreferrer">dotGo</a> - 法国巴黎</li><li><a href="http://Gocon.connpass.com/" target="_blank" rel="noopener noreferrer">GoCon</a> - 日本东京</li><li><a href="http://Golanguk.com/" target="_blank" rel="noopener noreferrer">GolangUK</a> - 英国伦敦</li><li><a href="http://Gopherchina.org" target="_blank" rel="noopener noreferrer">GopherChina</a> - 中国上海</li><li><a href="http://www.Gophercon.com/" target="_blank" rel="noopener noreferrer">GopherCon</a> - 美国丹佛</li><li><a href="https://Gopherconbr.org" target="_blank" rel="noopener noreferrer">GopherCon Brazil</a> - 巴西弗洛里亚诺波利斯</li><li><a href="http://www.Gophercon.ae/" target="_blank" rel="noopener noreferrer">GopherCon Dubai</a> - 迪拜</li><li><a href="http://www.Gophercon.in/" target="_blank" rel="noopener noreferrer">GopherCon India</a> - 印度普纳</li><li><a href="https://Gophercon.sg" target="_blank" rel="noopener noreferrer">GopherCon Singapore</a> - 新加坡丰树商业城</li><li><a href="http://GothamGo.com/" target="_blank" rel="noopener noreferrer">GothamGo</a> - 美国纽约</li></ul><h2 id="e-books" tabindex="-1"><a class="header-anchor" href="#e-books"><span>E-Books</span></a></h2><ul><li><a href="https://leanpub.com/GoNotebook/read" target="_blank" rel="noopener noreferrer">A Go Developer&#39;s Notebook</a></li><li><a href="http://www.Golang-book.com/" target="_blank" rel="noopener noreferrer">An Introduction to Programming in Go</a></li><li><a href="https://www.gitbook.com/book/astaxie/build-web-application-with-Golang/details" target="_blank" rel="noopener noreferrer">Build Web Application with Golang</a></li><li><a href="https://www.gitbook.com/book/codegangsta/building-web-apps-with-Go/details" target="_blank" rel="noopener noreferrer">Building Web Apps With Go</a></li><li><a href="http://Golangbootcamp.com" target="_blank" rel="noopener noreferrer">Go Bootcamp</a></li><li><a href="https://github.com/dariubs/GoBooks" target="_blank" rel="noopener noreferrer">GoBooks</a> - Go 语言书籍列表</li><li><a href="https://www.miek.nl/downloads/Go/Learning-Go-latest.pdf" target="_blank" rel="noopener noreferrer">Learning Go</a></li><li><a href="https://jan.newmarch.name/Go/" target="_blank" rel="noopener noreferrer">Network Programming With Go</a></li><li><a href="http://www.Gopl.io/" target="_blank" rel="noopener noreferrer">The Go Programming Language</a></li><li><a href="https://github.com/thewhitetulip/web-dev-Golang-anti-textbook/" target="_blank" rel="noopener noreferrer">Web Application with Go the Anti-Textbook</a></li></ul><h2 id="twitter" tabindex="-1"><a class="header-anchor" href="#twitter"><span>Twitter</span></a></h2><ul><li><a href="https://twitter.com/Golang" target="_blank" rel="noopener noreferrer">@Golang</a></li><li><a href="https://twitter.com/Golang_news" target="_blank" rel="noopener noreferrer">@Golang_news</a></li><li><a href="https://twitter.com/Golangflow" target="_blank" rel="noopener noreferrer">@Golangflow</a></li><li><a href="https://twitter.com/Golangweekly" target="_blank" rel="noopener noreferrer">@Golangweekly</a></li></ul><h2 id="网站" tabindex="-1"><a class="header-anchor" href="#网站"><span>网站</span></a></h2><ul><li><a href="https://Go.libhunt.com" target="_blank" rel="noopener noreferrer">Awesome Go @LibHunt</a> - Your Go-to Go Toolbox.</li><li><a href="https://github.com/lukasz-madon/awesome-remote-job" target="_blank" rel="noopener noreferrer">Awesome Remote Job</a> - 一个发布远程工作的列表。上面有很多人都在寻找 Go 语言程序员</li><li><a href="https://github.com/bayandin/awesome-awesomeness" target="_blank" rel="noopener noreferrer">awesome-awesomeness</a> - 汇集了其他 Awesome 系列列表的聚合列表</li><li><a href="https://flipboard.com/section/the-Golang-magazine-bVP7nS" target="_blank" rel="noopener noreferrer">Flipboard - Go Magazine</a> - 汇集了 Go 语言的教程和文章</li><li><a href="http://blog.Golang.org" target="_blank" rel="noopener noreferrer">Go Blog</a> - Go 语言官方博客</li><li><a href="http://Golang-challenge.org/" target="_blank" rel="noopener noreferrer">Go Challenge</a> - 通过解题来学习 Go 语言，同时获得专家们的反馈</li><li><a href="https://forum.Golangbridge.org" target="_blank" rel="noopener noreferrer">Go Forum</a> - 讨论 Go 的论坛.</li><li><a href="https://www.Goin5minutes.com/" target="_blank" rel="noopener noreferrer">Go In 5 Minutes</a> - 5 分钟分享如何做好一件事</li><li><a href="https://github.com/Golang/Go/wiki/Projects" target="_blank" rel="noopener noreferrer">Go Projects</a> - Go 语言社区 wiki 列表中的项目</li><li><a href="https://github.com/ninedraft/Gocryforhelp" target="_blank" rel="noopener noreferrer">Gocryforhelp</a> - 汇集了一些需要帮助的 Go 语言项目。一个开始你的开源之路的好地方</li><li><a href="https://Godoc.org/" target="_blank" rel="noopener noreferrer">Godoc.org</a> - 开源 Go 语言软件包的文档库.</li><li><a href="http://Golangflow.io" target="_blank" rel="noopener noreferrer">Golang Flow</a> - 不断更新的博客、新闻、软件等等</li><li><a href="https://Golangnews.com" target="_blank" rel="noopener noreferrer">Golang News</a> - 关于 Go 语言编程的一些链接.</li><li><a href="https://github.com/mholt/Golang-graphics" target="_blank" rel="noopener noreferrer">Golang-graphics</a> - 关于 Go 语言的图片及艺术作品</li><li><a href="https://groups.Google.com/forum/#!forum/Golang-nuts" target="_blank" rel="noopener noreferrer">Golang-nuts</a> - Go 邮件列表</li><li><a href="https://plus.Google.com/communities/114112804251407510571" target="_blank" rel="noopener noreferrer">Google Plus Community</a> - Go 语言爱好者的 Google+ 社区</li><li><a href="https://Gowalker.org" target="_blank" rel="noopener noreferrer">Gowalker.org</a> - Go 语言项目 API 文档</li><li><a href="https://www.reddit.com/r/Golang" target="_blank" rel="noopener noreferrer">r/Golang</a> - Go 语言新闻</li><li><a href="https://github.com/trending?l=Go" target="_blank" rel="noopener noreferrer">Trending Go repositories on GitHub today</a> - 一个寻找 Go 语言新库和软件的好地方</li></ul><h3 id="教程" tabindex="-1"><a class="header-anchor" href="#教程"><span>教程</span></a></h3><ul><li><a href="http://tour.Golang.org/" target="_blank" rel="noopener noreferrer">A Tour of Go</a> - 一个交互式的 Go 语言教程</li><li><a href="https://github.com/astaxie/build-web-application-with-Golang" target="_blank" rel="noopener noreferrer">Build web application with Golang</a> - Go 语言电子书，讲解如何编写一个 web 应用</li><li><a href="https://semaphoreci.com/community/tutorials/building-Go-web-applications-and-microservices-using-gin" target="_blank" rel="noopener noreferrer">Building Go Web Applications and Microservices Using Gin</a> - 学习 Gin 以及了解如何使用 Gin 帮你减少模板代码并建立一个请求处理流水线</li><li><a href="https://Gobyexample.com/" target="_blank" rel="noopener noreferrer">Go By Example</a> - 通过带注解的例程帮助你动手实践学习 Go 语言</li><li><a href="https://github.com/a8m/Go-lang-cheat-sheet" target="_blank" rel="noopener noreferrer">Go Cheat Sheet</a> - Go 参考手册</li><li><a href="http://Go-database-sql.org/" target="_blank" rel="noopener noreferrer">Go database/sql tutorial</a> - 介绍数据库及 sql</li><li><a href="https://Golangbot.com/learn-Golang-series/" target="_blank" rel="noopener noreferrer">Golangbot</a> - Go 语言初学者教程</li><li><a href="https://semaphoreci.com/community/tutorials/how-to-use-Godog-for-behavior-driven-development-in-Go" target="_blank" rel="noopener noreferrer">How to Use Godog for Behavior-driven Development in Go</a> - 学习使用 Godog — 一个行为驱动型开发框架，用于构建和测试 Go 语言应用</li><li><a href="https://github.com/mkaz/working-with-Go" target="_blank" rel="noopener noreferrer">Working with Go</a> - 为有经验的程序员提供的 Go 语言教程</li></ul>`,218)]))}const p=r(l,[["render",n]]),g=JSON.parse('{"path":"/go-tutor/basics/golang-tips.html","title":"golang常用技巧","lang":"zh-CN","frontmatter":{"description":"golang常用技巧 gomodule速查表 https://encore.dev/guide/go.mod 我找到的 https://github.com/filebrowser/filebrowser.git 好用的库 读取配置文件 ： https://github.com/spf13/viper 命令行颜色显示： color 工具库： https...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/go-tutor/basics/golang-tips.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"golang常用技巧"}],["meta",{"property":"og:description","content":"golang常用技巧 gomodule速查表 https://encore.dev/guide/go.mod 我找到的 https://github.com/filebrowser/filebrowser.git 好用的库 读取配置文件 ： https://github.com/spf13/viper 命令行颜色显示： color 工具库： https..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-07-29T07:25:09.000Z"}],["meta",{"property":"article:modified_time","content":"2022-07-29T07:25:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"golang常用技巧\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-07-29T07:25:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"gomodule速查表","slug":"gomodule速查表","link":"#gomodule速查表","children":[]},{"level":2,"title":"我找到的","slug":"我找到的","link":"#我找到的","children":[]},{"level":2,"title":"好用的库","slug":"好用的库","link":"#好用的库","children":[]},{"level":2,"title":"添加swagger","slug":"添加swagger","link":"#添加swagger","children":[]},{"level":2,"title":"后端框架","slug":"后端框架","link":"#后端框架","children":[]},{"level":2,"title":"音频和音乐","slug":"音频和音乐","link":"#音频和音乐","children":[]},{"level":2,"title":"认证和授权","slug":"认证和授权","link":"#认证和授权","children":[]},{"level":2,"title":"命令行","slug":"命令行","link":"#命令行","children":[{"level":3,"title":"标准命令行交互","slug":"标准命令行交互","link":"#标准命令行交互","children":[]},{"level":3,"title":"高级控制台界面","slug":"高级控制台界面","link":"#高级控制台界面","children":[]}]},{"level":2,"title":"配置","slug":"配置","link":"#配置","children":[]},{"level":2,"title":"持续集成","slug":"持续集成","link":"#持续集成","children":[]},{"level":2,"title":"CSS 预处理器","slug":"css-预处理器","link":"#css-预处理器","children":[]},{"level":2,"title":"数据结构","slug":"数据结构","link":"#数据结构","children":[]},{"level":2,"title":"数据库","slug":"数据库","link":"#数据库","children":[]},{"level":2,"title":"数据库驱动","slug":"数据库驱动","link":"#数据库驱动","children":[]},{"level":2,"title":"日期和时间","slug":"日期和时间","link":"#日期和时间","children":[]},{"level":2,"title":"分布式系统","slug":"分布式系统","link":"#分布式系统","children":[]},{"level":2,"title":"电子邮件","slug":"电子邮件","link":"#电子邮件","children":[]},{"level":2,"title":"嵌入式脚本语言","slug":"嵌入式脚本语言","link":"#嵌入式脚本语言","children":[]},{"level":2,"title":"文件","slug":"文件","link":"#文件","children":[]},{"level":2,"title":"财经","slug":"财经","link":"#财经","children":[]},{"level":2,"title":"表单","slug":"表单","link":"#表单","children":[]},{"level":2,"title":"游戏开发","slug":"游戏开发","link":"#游戏开发","children":[]},{"level":2,"title":"代码生成与泛型","slug":"代码生成与泛型","link":"#代码生成与泛型","children":[]},{"level":2,"title":"Go 编译器","slug":"go-编译器","link":"#go-编译器","children":[]},{"level":2,"title":"协程","slug":"协程","link":"#协程","children":[]},{"level":2,"title":"GUI","slug":"gui","link":"#gui","children":[]},{"level":2,"title":"硬件","slug":"硬件","link":"#硬件","children":[]},{"level":2,"title":"图像","slug":"图像","link":"#图像","children":[]},{"level":2,"title":"物联网","slug":"物联网","link":"#物联网","children":[]},{"level":2,"title":"日志","slug":"日志","link":"#日志","children":[]},{"level":2,"title":"机器学习","slug":"机器学习","link":"#机器学习","children":[]},{"level":2,"title":"消息","slug":"消息","link":"#消息","children":[]},{"level":2,"title":"杂项","slug":"杂项","link":"#杂项","children":[]},{"level":2,"title":"自然语言处理","slug":"自然语言处理","link":"#自然语言处理","children":[]},{"level":2,"title":"网络","slug":"网络","link":"#网络","children":[]},{"level":2,"title":"OpenGL","slug":"opengl","link":"#opengl","children":[]},{"level":2,"title":"ORM","slug":"orm","link":"#orm","children":[]},{"level":2,"title":"包管理","slug":"包管理","link":"#包管理","children":[]},{"level":2,"title":"查询语言","slug":"查询语言","link":"#查询语言","children":[]},{"level":2,"title":"资源嵌入","slug":"资源嵌入","link":"#资源嵌入","children":[]},{"level":2,"title":"科学及数据分析","slug":"科学及数据分析","link":"#科学及数据分析","children":[]},{"level":2,"title":"安全","slug":"安全","link":"#安全","children":[]},{"level":2,"title":"序列化","slug":"序列化","link":"#序列化","children":[]},{"level":2,"title":"服务器程序","slug":"服务器程序","link":"#服务器程序","children":[]},{"level":2,"title":"模板引擎","slug":"模板引擎","link":"#模板引擎","children":[]},{"level":2,"title":"测试","slug":"测试","link":"#测试","children":[]},{"level":2,"title":"文本处理","slug":"文本处理","link":"#文本处理","children":[]},{"level":2,"title":"第三方 APIs","slug":"第三方-apis","link":"#第三方-apis","children":[]},{"level":2,"title":"实用工具","slug":"实用工具","link":"#实用工具","children":[]},{"level":2,"title":"验证","slug":"验证","link":"#验证","children":[]},{"level":2,"title":"版本控制","slug":"版本控制","link":"#版本控制","children":[]},{"level":2,"title":"视频","slug":"视频","link":"#视频","children":[]},{"level":2,"title":"Web 框架","slug":"web-框架","link":"#web-框架","children":[]},{"level":2,"title":"Windows","slug":"windows","link":"#windows","children":[]},{"level":2,"title":"XML","slug":"xml","link":"#xml","children":[{"level":3,"title":"中间件","slug":"中间件","link":"#中间件","children":[{"level":4,"title":"中间件","slug":"中间件-1","link":"#中间件-1","children":[]},{"level":4,"title":"用于创建 HTTP 中间件的库","slug":"用于创建-http-中间件的库","link":"#用于创建-http-中间件的库","children":[]}]},{"level":3,"title":"路由","slug":"路由","link":"#路由","children":[]}]},{"level":2,"title":"代码分析","slug":"代码分析","link":"#代码分析","children":[]},{"level":2,"title":"编辑器插件","slug":"编辑器插件","link":"#编辑器插件","children":[]},{"level":2,"title":"Go 语言工具","slug":"go-语言工具","link":"#go-语言工具","children":[]},{"level":2,"title":"软件包","slug":"软件包","link":"#软件包","children":[{"level":3,"title":"DevOps 工具","slug":"devops-工具","link":"#devops-工具","children":[]},{"level":3,"title":"其他软件","slug":"其他软件","link":"#其他软件","children":[]}]},{"level":2,"title":"基准测试","slug":"基准测试","link":"#基准测试","children":[]},{"level":2,"title":"会议","slug":"会议","link":"#会议","children":[]},{"level":2,"title":"E-Books","slug":"e-books","link":"#e-books","children":[]},{"level":2,"title":"Twitter","slug":"twitter","link":"#twitter","children":[]},{"level":2,"title":"网站","slug":"网站","link":"#网站","children":[{"level":3,"title":"教程","slug":"教程","link":"#教程","children":[]}]}],"git":{"createdTime":1647861419000,"updatedTime":1659079509000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":6,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":82.17,"words":24650},"filePathRelative":"go-tutor/basics/golang-tips.md","localizedDate":"2022年3月21日","autoDesc":true}');export{p as comp,g as data};
