import{_ as s,c as e,a as n,o as p}from"./app-C8DxhDIZ.js";const t={};function l(i,a){return p(),e("div",null,a[0]||(a[0]=[n(`<h1 id="进程管理工具" tabindex="-1"><a class="header-anchor" href="#进程管理工具"><span>进程管理工具</span></a></h1><div class="hint-container tip"><p class="hint-container-title">提示</p><p>这一节我们介绍进程管理工具；</p><p>使用进程管理工具，我们可以查询程序当前的运行状态，或终止一个进程；</p><p>任何进程都与文件关联；我们会用到lsof工具（list opened files），作用是列举系统中已经被打开的文件。在linux环境中，任何事物都是文件，设备是文件，目录是文件，甚至sockets也是文件。用好lsof命令，对日常的linux管理非常有帮助。</p></div><h2 id="查询进程" tabindex="-1"><a class="header-anchor" href="#查询进程"><span>查询进程</span></a></h2><p>查询正在运行的进程信息 :</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">ps</span> <span class="token parameter variable">-ef</span></span>
<span class="line"></span></code></pre></div><p>eg:查询归属于用户colin115的进程 :</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> colin115</span>
<span class="line"><span class="token function">ps</span> <span class="token parameter variable">-lu</span> colin115</span>
<span class="line"></span></code></pre></div><p>查询进程ID（适合只记得部分进程字段） :</p><pre><code>$pgrep 查找进程

eg:查询进程名中含有re的进程
[/home/weber#]pgrep -l re
2 kthreadd
28 ecryptfs-kthrea
29515 redis-server
</code></pre><p>以完整的格式显示所有的进程 :</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">ps</span> <span class="token parameter variable">-ajx</span></span>
<span class="line"></span></code></pre></div><p>显示进程信息，并实时更新 :</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">top</span></span>
<span class="line"></span></code></pre></div><p>查看端口占用的进程状态： :</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">lsof</span> <span class="token parameter variable">-i:3306</span></span>
<span class="line"></span></code></pre></div><p>查看用户username的进程所打开的文件 :</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">lsof</span> <span class="token parameter variable">-u</span> username</span>
<span class="line"></span></code></pre></div><p>查询init进程当前打开的文件 :</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">lsof</span> <span class="token parameter variable">-c</span> init</span>
<span class="line"></span></code></pre></div><p>查询指定的进程ID(23295)打开的文件： :</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">lsof</span> <span class="token parameter variable">-p</span> <span class="token number">23295</span></span>
<span class="line"></span></code></pre></div><p>查询指定目录下被进程开启的文件（使用+D 递归目录）： :</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">lsof</span> +d mydir1/</span>
<span class="line"></span></code></pre></div><h2 id="终止进程" tabindex="-1"><a class="header-anchor" href="#终止进程"><span>终止进程</span></a></h2><p>杀死指定PID的进程 (PID为Process ID) :</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">kill</span> PID</span>
<span class="line"></span></code></pre></div><p>杀死相关进程 :</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token number">3434</span></span>
<span class="line"></span></code></pre></div><p>杀死job工作 (job为job number) :</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">kill</span> %job</span>
<span class="line"></span></code></pre></div><h2 id="进程监控" tabindex="-1"><a class="header-anchor" href="#进程监控"><span>进程监控</span></a></h2><p>查看系统中使用CPU、使用内存最多的进程； :</p><pre><code>$top
(-&gt;)P
</code></pre><p>输入top命令后，进入到交互界面；接着输入字符命令后显示相应的进程状态：</p><p>对于进程，平时我们最常想知道的就是哪些进程占用CPU最多，占用内存最多。以下两个命令就可以满足要求:</p><pre><code>P：根据CPU使用百分比大小进行排序。
M：根据驻留内存大小进行排序。
i：使top不显示任何闲置或者僵死进程。
</code></pre><p>这里介绍最使用的几个选项,对于更详细的使用，详见 <code>top</code>{.interpreted-text role=&quot;ref&quot;} ;</p><h2 id="分析线程栈" tabindex="-1"><a class="header-anchor" href="#分析线程栈"><span>分析线程栈</span></a></h2><p>使用命令pmap，来输出进程内存的状况，可以用来分析线程堆栈； :</p><pre><code>$pmap PID

eg:
[/home/weber#]ps -fe| grep redis
weber    13508 13070  0 08:14 pts/0    00:00:00 grep --color=auto redis
weber    29515     1  0  2013 ?        02:55:59 ./redis-server redis.conf
[/home/weber#]pmap 29515
29515:   ./redis-server redis.conf
08048000    768K r-x--  /home/weber/soft/redis-2.6.16/src/redis-server
08108000      4K r----  /home/weber/soft/redis-2.6.16/src/redis-server
08109000     12K rw---  /home/weber/soft/redis-2.6.16/src/redis-server
</code></pre><h2 id="综合运用" tabindex="-1"><a class="header-anchor" href="#综合运用"><span>综合运用</span></a></h2><p>将用户colin115下的所有进程名以av_开头的进程终止:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"></span>
<span class="line"><span class="token function">ps</span> <span class="token parameter variable">-u</span> colin115 <span class="token operator">|</span>  <span class="token function">awk</span> <span class="token string">&#39;/av_/ {print &quot;kill -9 &quot; $1}&#39;</span> <span class="token operator">|</span> <span class="token function">sh</span></span>
<span class="line"></span></code></pre></div><p>将用户colin115下所有进程名中包含HOST的进程终止:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">ps</span> -fe<span class="token operator">|</span> <span class="token function">grep</span> colin115<span class="token operator">|</span><span class="token function">grep</span> HOST <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">kill</span> -9<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>ps top lsof kill pmap</p>`,47)]))}const o=s(t,[["render",l]]),c=JSON.parse('{"path":"/linux-tutor/base/05_process_manage.html","title":"进程管理工具","lang":"zh-CN","frontmatter":{"description":"进程管理工具 提示 这一节我们介绍进程管理工具； 使用进程管理工具，我们可以查询程序当前的运行状态，或终止一个进程； 任何进程都与文件关联；我们会用到lsof工具（list opened files），作用是列举系统中已经被打开的文件。在linux环境中，任何事物都是文件，设备是文件，目录是文件，甚至sockets也是文件。用好lsof命令，对日常的l...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/linux-tutor/base/05_process_manage.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"进程管理工具"}],["meta",{"property":"og:description","content":"进程管理工具 提示 这一节我们介绍进程管理工具； 使用进程管理工具，我们可以查询程序当前的运行状态，或终止一个进程； 任何进程都与文件关联；我们会用到lsof工具（list opened files），作用是列举系统中已经被打开的文件。在linux环境中，任何事物都是文件，设备是文件，目录是文件，甚至sockets也是文件。用好lsof命令，对日常的l..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-07-10T12:31:56.000Z"}],["meta",{"property":"article:modified_time","content":"2022-07-10T12:31:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"进程管理工具\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-07-10T12:31:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"查询进程","slug":"查询进程","link":"#查询进程","children":[]},{"level":2,"title":"终止进程","slug":"终止进程","link":"#终止进程","children":[]},{"level":2,"title":"进程监控","slug":"进程监控","link":"#进程监控","children":[]},{"level":2,"title":"分析线程栈","slug":"分析线程栈","link":"#分析线程栈","children":[]},{"level":2,"title":"综合运用","slug":"综合运用","link":"#综合运用","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1653565176000,"updatedTime":1657456316000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":2,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":2.38,"words":715},"filePathRelative":"linux-tutor/base/05_process_manage.md","localizedDate":"2022年5月26日","autoDesc":true}');export{o as comp,c as data};
