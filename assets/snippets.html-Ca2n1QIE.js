import{_ as s,c as a,a as p,o as t}from"./app-C8DxhDIZ.js";const e={};function l(o,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="代码片段" tabindex="-1"><a class="header-anchor" href="#代码片段"><span>代码片段</span></a></h1><h1 id="安卓代码片段" tabindex="-1"><a class="header-anchor" href="#安卓代码片段"><span>安卓代码片段</span></a></h1><h2 id="获取navhost" tabindex="-1"><a class="header-anchor" href="#获取navhost"><span>获取navhost</span></a></h2><p>标签使用<code>androidx.fragment.app.FragmentContainerView</code>会闪退,因为oncreated生命周期还未初始化 下面的代码可以解决 android文档原文-&gt;<a href="https://developer.android.google.cn/guide/navigation/navigation-getting-started?hl=zh-cn#java" target="_blank" rel="noopener noreferrer">链接</a></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"></span>
<span class="line"><span class="token class-name">NavHostFragment</span> navHostFragment <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">NavHostFragment</span><span class="token punctuation">)</span> <span class="token function">getSupportFragmentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findFragmentById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>nav_host_fragment_activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">NavController</span> navController <span class="token operator">=</span> navHostFragment<span class="token punctuation">.</span><span class="token function">getNavController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h2 id="fragment实例添加argument" tabindex="-1"><a class="header-anchor" href="#fragment实例添加argument"><span>fragment实例添加argument</span></a></h2><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">    <span class="token keyword">companion</span> <span class="token keyword">object</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">/**</span>
<span class="line">         * Use this factory method to create a new instance of</span>
<span class="line">         * this fragment using the provided parameters.</span>
<span class="line">         *</span>
<span class="line">         * @param param1 Parameter 1.</span>
<span class="line">         * @param param2 Parameter 2.</span>
<span class="line">         * @return A new instance of fragment RequestFragment.</span>
<span class="line">         */</span></span>
<span class="line">        <span class="token comment">// TODO: Rename and change types and number of parameters</span></span>
<span class="line">        <span class="token annotation builtin">@JvmStatic</span></span>
<span class="line">        <span class="token keyword">fun</span> <span class="token function">newInstance</span><span class="token punctuation">(</span>param1<span class="token operator">:</span> String<span class="token punctuation">,</span> param2<span class="token operator">:</span> String<span class="token punctuation">)</span> <span class="token operator">=</span></span>
<span class="line">            <span class="token function">RequestFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">{</span></span>
<span class="line">                arguments <span class="token operator">=</span> <span class="token function">Bundle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">putString</span><span class="token punctuation">(</span>ARG_PARAM1<span class="token punctuation">,</span> param1<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token function">putString</span><span class="token punctuation">(</span>ARG_PARAM2<span class="token punctuation">,</span> param2<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fragment添加menu" tabindex="-1"><a class="header-anchor" href="#fragment添加menu"><span>fragment添加menu</span></a></h2><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">val</span> menuHost <span class="token operator">=</span> <span class="token function">requireActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        menuHost<span class="token punctuation">.</span><span class="token function">addMenuProvider</span><span class="token punctuation">(</span><span class="token keyword">object</span> <span class="token operator">:</span> MenuProvider <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreateMenu</span><span class="token punctuation">(</span>menu<span class="token operator">:</span> Menu<span class="token punctuation">,</span> menuInflater<span class="token operator">:</span> MenuInflater<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                menuInflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>menu<span class="token punctuation">.</span>menu_main<span class="token punctuation">,</span> menu<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onMenuItemSelected</span><span class="token punctuation">(</span>menuItem<span class="token operator">:</span> MenuItem<span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">when</span> <span class="token punctuation">(</span>menuItem<span class="token punctuation">.</span>itemId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>action_settings <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                        Toaster<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;menu&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                        <span class="token keyword">return</span> <span class="token boolean">true</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">                    <span class="token keyword">else</span> <span class="token operator">-&gt;</span> <span class="token keyword">return</span> <span class="token boolean">false</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="如何获取android设备唯一id" tabindex="-1"><a class="header-anchor" href="#如何获取android设备唯一id"><span>如何获取Android设备唯一ID？</span></a></h1><h3 id="问题" tabindex="-1"><a class="header-anchor" href="#问题"><span>问题</span></a></h3><p>每一个android设备都有唯一ID吗？如果有？怎么用java最简单取得呢？</p><h3 id="回答1-最佳" tabindex="-1"><a class="header-anchor" href="#回答1-最佳"><span>回答1（最佳）</span></a></h3><p>如何取得android唯一码？</p><p>好处：</p><ul><li>1.不需要特定权限.</li><li>2.在99.5% Android装置（包括root过的）上，即API =&gt; 9，保证唯一性.</li><li>3.重装app之后仍能取得相同唯一值.</li></ul><p>伪代码：</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">if API =&gt; 9/10: (99.5% of devices)</span>
<span class="line"></span>
<span class="line">return unique ID containing serial id (rooted devices may be different)</span>
<span class="line"></span>
<span class="line">else</span>
<span class="line"></span>
<span class="line">return unique ID of build information (may overlap data - API &lt; 9)</span>
<span class="line"></span></code></pre></div><p>代码:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Return pseudo unique ID</span>
<span class="line"> * <span class="token keyword">@return</span> ID</span>
<span class="line"> */</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getUniquePsuedoID</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// If all else fails, if the user does have lower than API 9 (lower</span></span>
<span class="line">    <span class="token comment">// than Gingerbread), has reset their device or &#39;Secure.ANDROID_ID&#39;</span></span>
<span class="line">    <span class="token comment">// returns &#39;null&#39;, then simply the ID returned will be solely based</span></span>
<span class="line">    <span class="token comment">// off their Android device information. This is where the collisions</span></span>
<span class="line">    <span class="token comment">// can happen.</span></span>
<span class="line">    <span class="token comment">// Thanks http://www.pocketmagic.net/?p=1662!</span></span>
<span class="line">    <span class="token comment">// Try not to use DISPLAY, HOST or ID - these items could change.</span></span>
<span class="line">    <span class="token comment">// If there are collisions, there will be overlapping data</span></span>
<span class="line">    <span class="token class-name">String</span> m_szDevIDShort <span class="token operator">=</span> <span class="token string">&quot;35&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token class-name">Build</span><span class="token punctuation">.</span><span class="token constant">BOARD</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token class-name">Build</span><span class="token punctuation">.</span><span class="token constant">BRAND</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token class-name">Build</span><span class="token punctuation">.</span><span class="token constant">CPU_ABI</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token class-name">Build</span><span class="token punctuation">.</span><span class="token constant">DEVICE</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token class-name">Build</span><span class="token punctuation">.</span><span class="token constant">MANUFACTURER</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token class-name">Build</span><span class="token punctuation">.</span><span class="token constant">MODEL</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token class-name">Build</span><span class="token punctuation">.</span><span class="token constant">PRODUCT</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Thanks to @Roman SL!</span></span>
<span class="line">    <span class="token comment">// http://stackoverflow.com/a/4789483/950427</span></span>
<span class="line">    <span class="token comment">// Only devices with API &gt;= 9 have android.os.Build.SERIAL</span></span>
<span class="line">    <span class="token comment">// http://developer.android.com/reference/android/os/Build.html#SERIAL</span></span>
<span class="line">    <span class="token comment">// If a user upgrades software or roots their device, there will be a duplicate entry</span></span>
<span class="line">    <span class="token class-name">String</span> serial <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">        serial <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span>Build</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getField</span><span class="token punctuation">(</span><span class="token string">&quot;SERIAL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Go ahead and return the serial for api =&gt; 9</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">UUID</span><span class="token punctuation">(</span>m_szDevIDShort<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> serial<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> exception<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// String needs to be initialized</span></span>
<span class="line">        serial <span class="token operator">=</span> <span class="token string">&quot;serial&quot;</span><span class="token punctuation">;</span> <span class="token comment">// some value</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Thanks @Joe!</span></span>
<span class="line">    <span class="token comment">// http://stackoverflow.com/a/2853253/950427</span></span>
<span class="line">    <span class="token comment">// Finally, combine the values we have found by using the UUID class to create a unique identifier</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">UUID</span><span class="token punctuation">(</span>m_szDevIDShort<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> serial<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="回答2" tabindex="-1"><a class="header-anchor" href="#回答2"><span>回答2</span></a></h3><p>好处：</p><ul><li>1.不需要特定权限.</li><li>2.在100% Android装置（包括root过的）上，保证唯一性.</li></ul><p>坏处</p><ul><li>1.重装app之后不能取得相同唯一值.</li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> uniqueID <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">PREF_UNIQUE_ID</span> <span class="token operator">=</span> <span class="token string">&quot;PREF_UNIQUE_ID&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">id</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>uniqueID <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">SharedPreferences</span> sharedPrefs <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getSharedPreferences</span><span class="token punctuation">(</span></span>
<span class="line">                <span class="token constant">PREF_UNIQUE_ID</span><span class="token punctuation">,</span> <span class="token class-name">Context</span><span class="token punctuation">.</span><span class="token constant">MODE_PRIVATE</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        uniqueID <span class="token operator">=</span> sharedPrefs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token constant">PREF_UNIQUE_ID</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>uniqueID <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            uniqueID <span class="token operator">=</span> <span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">Editor</span> editor <span class="token operator">=</span> sharedPrefs<span class="token punctuation">.</span><span class="token function">edit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            editor<span class="token punctuation">.</span><span class="token function">putString</span><span class="token punctuation">(</span><span class="token constant">PREF_UNIQUE_ID</span><span class="token punctuation">,</span> uniqueID<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            editor<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> uniqueID<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="回答3-需要有电话卡" tabindex="-1"><a class="header-anchor" href="#回答3-需要有电话卡"><span>回答3（需要有电话卡）</span></a></h3><p>好处： 1.重装app之后仍能取得相同唯一值.</p><p>代码：</p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token keyword">final</span> <span class="token class-name">TelephonyManager</span> tm <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TelephonyManager</span><span class="token punctuation">)</span> <span class="token function">getBaseContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSystemService</span><span class="token punctuation">(</span><span class="token class-name">Context</span><span class="token punctuation">.</span><span class="token constant">TELEPHONY_SERVICE</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">final</span> <span class="token class-name">String</span> tmDevice<span class="token punctuation">,</span> tmSerial<span class="token punctuation">,</span> androidId<span class="token punctuation">;</span></span>
<span class="line">    tmDevice <span class="token operator">=</span> <span class="token string">&quot;&quot;</span> <span class="token operator">+</span> tm<span class="token punctuation">.</span><span class="token function">getDeviceId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    tmSerial <span class="token operator">=</span> <span class="token string">&quot;&quot;</span> <span class="token operator">+</span> tm<span class="token punctuation">.</span><span class="token function">getSimSerialNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    androidId <span class="token operator">=</span> <span class="token string">&quot;&quot;</span> <span class="token operator">+</span> <span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>provider<span class="token punctuation">.</span></span>Settings<span class="token punctuation">.</span>Secure</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>provider<span class="token punctuation">.</span></span>Settings<span class="token punctuation">.</span>Secure</span><span class="token punctuation">.</span><span class="token constant">ANDROID_ID</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">UUID</span> deviceUuid <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UUID</span><span class="token punctuation">(</span>androidId<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>tmDevice<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">|</span> tmSerial<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">String</span> deviceId <span class="token operator">=</span> deviceUuid<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>谨记：要取得以下权限</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&lt;uses-permission android:name=&quot;android.permission.READ_PHONE_STATE&quot; /&gt;</span>
<span class="line"></span></code></pre></div><p>stackoverflow链接： <a href="http://stackoverflow.com/questions/2785485/is-there-a-unique-android-device-id" target="_blank" rel="noopener noreferrer">http://stackoverflow.com/questions/2785485/is-there-a-unique-android-device-id</a></p><h2 id="activity显示返回按钮" tabindex="-1"><a class="header-anchor" href="#activity显示返回按钮"><span>activity显示返回按钮</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">oncreated中</span>
<span class="line">  ActionBar actionBar = this.getSupportActionBar();</span>
<span class="line">        actionBar.setTitle(&quot;搜索功能&quot;);</span>
<span class="line">        actionBar.setDisplayHomeAsUpEnabled(true);</span>
<span class="line">        </span>
<span class="line">        </span>
<span class="line">        然后</span>
<span class="line">       @Override</span>
<span class="line">    public boolean onOptionsItemSelected(MenuItem item) {</span>
<span class="line">        if(item.getItemId() == android.R.id.home)</span>
<span class="line">        {</span>
<span class="line">            finish();</span>
<span class="line">            return true;</span>
<span class="line">        }</span>
<span class="line">        return super.onOptionsItemSelected(item);</span>
<span class="line">    }     </span>
<span class="line">    </span>
<span class="line">    </span>
<span class="line">    </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="显示返回键" tabindex="-1"><a class="header-anchor" href="#显示返回键"><span>显示返回键</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"></span>
<span class="line"> //不要使用navController.getGraph() 不然会出现返回键</span>
<span class="line">        appBarConfiguration = AppBarConfiguration.Builder(</span>
<span class="line">           navController.graph</span>
<span class="line">        )</span>
<span class="line">            .build()</span>
<span class="line">        setupActionBarWithNavController(this, navController, appBarConfiguration)</span>
<span class="line"></span></code></pre></div><h2 id="kotlin用法" tabindex="-1"><a class="header-anchor" href="#kotlin用法"><span>kotlin用法</span></a></h2><h3 id="接口实现" tabindex="-1"><a class="header-anchor" href="#接口实现"><span>接口实现</span></a></h3><p>java</p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token annotation punctuation">@Override</span></span>
<span class="line">            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            </span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>kotlin</p><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">object</span> <span class="token operator">:</span> View<span class="token punctuation">.</span><span class="token function">OnClickListener</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onClick</span><span class="token punctuation">(</span>v<span class="token operator">:</span> View<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">       </span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">     button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span> <span class="token punctuation">{</span></span>
<span class="line">     </span>
<span class="line">     <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="使用代码实现view布局" tabindex="-1"><a class="header-anchor" href="#使用代码实现view布局"><span>使用代码实现view布局</span></a></h2><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">  <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreateView</span><span class="token punctuation">(</span>  </span>
<span class="line">    inflater<span class="token operator">:</span> LayoutInflater<span class="token punctuation">,</span>  </span>
<span class="line">    container<span class="token operator">:</span> ViewGroup<span class="token operator">?</span><span class="token punctuation">,</span>  </span>
<span class="line">    savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span>  </span>
<span class="line">  <span class="token punctuation">)</span><span class="token operator">:</span> View<span class="token operator">?</span> <span class="token punctuation">{</span>  </span>
<span class="line">  </span>
<span class="line">    <span class="token keyword">val</span> lvRoot <span class="token operator">=</span> <span class="token function">LinearLayout</span><span class="token punctuation">(</span><span class="token function">requireContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">{</span>  </span>
<span class="line">      orientation <span class="token operator">=</span> LinearLayout<span class="token punctuation">.</span>VERTICAL  </span>
<span class="line">      layoutParams <span class="token operator">=</span> <span class="token function">LayoutParams</span><span class="token punctuation">(</span>LayoutParams<span class="token punctuation">.</span>MATCH_PARENT<span class="token punctuation">,</span> LayoutParams<span class="token punctuation">.</span>MATCH_PARENT<span class="token punctuation">)</span>  </span>
<span class="line">      <span class="token function">addView</span><span class="token punctuation">(</span><span class="token function">Button</span><span class="token punctuation">(</span><span class="token function">requireContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">{</span>  </span>
<span class="line">        text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;thi is button&quot;</span></span>  </span>
<span class="line">        layoutParams <span class="token operator">=</span> <span class="token function">LayoutParams</span><span class="token punctuation">(</span>LayoutParams<span class="token punctuation">.</span>WRAP_CONTENT<span class="token punctuation">,</span> LayoutParams<span class="token punctuation">.</span>WRAP_CONTENT<span class="token punctuation">)</span>  </span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span>  </span>
<span class="line">    <span class="token punctuation">}</span>  </span>
<span class="line">    <span class="token keyword">val</span> tv1 <span class="token operator">=</span> <span class="token function">TextView</span><span class="token punctuation">(</span><span class="token function">requireContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">{</span>  </span>
<span class="line">      text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;thi is text&quot;</span></span>  </span>
<span class="line">      layoutParams <span class="token operator">=</span> <span class="token function">LayoutParams</span><span class="token punctuation">(</span>LayoutParams<span class="token punctuation">.</span>WRAP_CONTENT<span class="token punctuation">,</span> LayoutParams<span class="token punctuation">.</span>WRAP_CONTENT<span class="token punctuation">)</span>  </span>
<span class="line">    <span class="token punctuation">}</span>  </span>
<span class="line">    <span class="token keyword">val</span> tv2 <span class="token operator">=</span> <span class="token function">TextView</span><span class="token punctuation">(</span><span class="token function">requireContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">{</span>  </span>
<span class="line">      text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;thi is text3333322222222&quot;</span></span>  </span>
<span class="line">      layoutParams <span class="token operator">=</span> <span class="token function">LayoutParams</span><span class="token punctuation">(</span>LayoutParams<span class="token punctuation">.</span>WRAP_CONTENT<span class="token punctuation">,</span> LayoutParams<span class="token punctuation">.</span>WRAP_CONTENT<span class="token punctuation">)</span>  </span>
<span class="line">    <span class="token punctuation">}</span>  </span>
<span class="line">  </span>
<span class="line">    lvRoot<span class="token punctuation">.</span><span class="token function">addView</span><span class="token punctuation">(</span>tv1<span class="token punctuation">)</span>  </span>
<span class="line">    lvRoot<span class="token punctuation">.</span><span class="token function">addView</span><span class="token punctuation">(</span>tv2<span class="token punctuation">)</span>  </span>
<span class="line"><span class="token comment">//    _binding = FragmentLineLayoutBinding.inflate(inflater, container, false)  </span></span>
<span class="line"><span class="token comment">//    return binding.root  </span></span>
<span class="line">    <span class="token keyword">return</span> lvRoot<span class="token punctuation">.</span>rootView  </span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="kotlin-compose" tabindex="-1"><a class="header-anchor" href="#kotlin-compose"><span>kotlin compose</span></a></h1><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Intent  </span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Bundle  </span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>activity<span class="token punctuation">.</span>ComponentActivity  </span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>activity<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>setContent  </span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>foundation<span class="token punctuation">.</span>clickable  </span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>foundation<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>Box  </span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>foundation<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>Column  </span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>foundation<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>fillMaxWidth  </span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>foundation<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>padding  </span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>foundation<span class="token punctuation">.</span>lazy<span class="token punctuation">.</span>LazyColumn  </span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>foundation<span class="token punctuation">.</span>lazy<span class="token punctuation">.</span>items  </span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>material3<span class="token punctuation">.</span>ExperimentalMaterial3Api  </span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>material3<span class="token punctuation">.</span>MaterialTheme  </span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>material3<span class="token punctuation">.</span>Scaffold  </span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>material3<span class="token punctuation">.</span>Text  </span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>material3<span class="token punctuation">.</span>TopAppBar  </span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>ui<span class="token punctuation">.</span>Modifier  </span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>ui<span class="token punctuation">.</span>draw<span class="token punctuation">.</span>drawBehind  </span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>ui<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span>Offset  </span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>ui<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>Color  </span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>ui<span class="token punctuation">.</span>platform<span class="token punctuation">.</span>LocalContext  </span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>ui<span class="token punctuation">.</span>unit<span class="token punctuation">.</span>dp  </span>
<span class="line"><span class="token keyword">import</span> cn<span class="token punctuation">.</span>yzq<span class="token punctuation">.</span>simpleKt<span class="token punctuation">.</span>simple<span class="token punctuation">.</span>ui<span class="token punctuation">.</span>cat<span class="token punctuation">.</span>CatActivity  </span>
<span class="line">  </span>
<span class="line">  </span>
<span class="line"><span class="token keyword">class</span> HomeListActivity <span class="token operator">:</span> <span class="token function">ComponentActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  </span>
<span class="line">  </span>
<span class="line">  <span class="token annotation builtin">@OptIn</span><span class="token punctuation">(</span>ExperimentalMaterial3Api<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span>  </span>
<span class="line">  <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  </span>
<span class="line">    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span>  </span>
<span class="line">    setContent <span class="token punctuation">{</span>  </span>
<span class="line">      <span class="token keyword">val</span> ctx <span class="token operator">=</span> LocalContext<span class="token punctuation">.</span>current  </span>
<span class="line">      MaterialTheme <span class="token punctuation">{</span>  </span>
<span class="line">        <span class="token keyword">val</span> btns <span class="token operator">=</span> <span class="token function">listOf</span><span class="token punctuation">(</span>  </span>
<span class="line">          <span class="token function">MyIntent</span><span class="token punctuation">(</span>  </span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;main&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;main desc&quot;</span></span><span class="token punctuation">,</span>  </span>
<span class="line">          <span class="token punctuation">)</span> <span class="token punctuation">{</span>  </span>
<span class="line">            ctx<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>  </span>
<span class="line">              <span class="token function">Intent</span><span class="token punctuation">(</span>  </span>
<span class="line">                ctx<span class="token punctuation">,</span>  </span>
<span class="line">                MainActivity<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">.</span>java  </span>
<span class="line">              <span class="token punctuation">)</span>  </span>
<span class="line">            <span class="token punctuation">)</span>  </span>
<span class="line">          <span class="token punctuation">}</span><span class="token punctuation">,</span>  </span>
<span class="line">          <span class="token function">MyIntent</span><span class="token punctuation">(</span>  </span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;cat activity&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;cat desc&quot;</span></span><span class="token punctuation">,</span>  </span>
<span class="line">          <span class="token punctuation">)</span> <span class="token punctuation">{</span>  </span>
<span class="line">            ctx<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>  </span>
<span class="line">              <span class="token function">Intent</span><span class="token punctuation">(</span>  </span>
<span class="line">                ctx<span class="token punctuation">,</span>  </span>
<span class="line">                CatActivity<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">.</span>java  </span>
<span class="line">              <span class="token punctuation">)</span>  </span>
<span class="line">            <span class="token punctuation">)</span>  </span>
<span class="line">          <span class="token punctuation">}</span><span class="token punctuation">,</span>  </span>
<span class="line">  </span>
<span class="line">          <span class="token punctuation">)</span>  </span>
<span class="line">        <span class="token function">Scaffold</span><span class="token punctuation">(</span>topBar <span class="token operator">=</span> <span class="token punctuation">{</span>  </span>
<span class="line">          <span class="token function">TopAppBar</span><span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token punctuation">{</span>  </span>
<span class="line">            <span class="token function">Text</span><span class="token punctuation">(</span>  </span>
<span class="line">              <span class="token string-literal singleline"><span class="token string">&quot;首页&quot;</span></span><span class="token punctuation">,</span>  </span>
<span class="line">              color <span class="token operator">=</span> Color<span class="token punctuation">.</span>White<span class="token punctuation">,</span>  </span>
<span class="line">              modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>horizontal <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span>  </span>
<span class="line">            <span class="token punctuation">)</span>  </span>
<span class="line">          <span class="token punctuation">}</span><span class="token punctuation">)</span>  </span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  </span>
<span class="line">          <span class="token function">Box</span><span class="token punctuation">(</span>modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  </span>
<span class="line">            <span class="token function">LazyColumn</span><span class="token punctuation">(</span>content <span class="token operator">=</span> <span class="token punctuation">{</span>  </span>
<span class="line">  </span>
<span class="line">              <span class="token function">items</span><span class="token punctuation">(</span>btns<span class="token punctuation">)</span> <span class="token punctuation">{</span> col <span class="token operator">-&gt;</span>  </span>
<span class="line">                <span class="token function">Column</span><span class="token punctuation">(</span>modifier <span class="token operator">=</span> Modifier  </span>
<span class="line">                  <span class="token punctuation">.</span><span class="token function">drawBehind</span> <span class="token punctuation">{</span>  </span>
<span class="line">  </span>
<span class="line">                    <span class="token keyword">val</span> strokeWidth <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">*</span> density  </span>
<span class="line">                    <span class="token keyword">val</span> y <span class="token operator">=</span> size<span class="token punctuation">.</span>height <span class="token operator">-</span> strokeWidth <span class="token operator">/</span> <span class="token number">2</span>  </span>
<span class="line">  </span>
<span class="line">                    <span class="token function">drawLine</span><span class="token punctuation">(</span>  </span>
<span class="line">                      Color<span class="token punctuation">.</span>LightGray<span class="token punctuation">,</span>  </span>
<span class="line">                      <span class="token function">Offset</span><span class="token punctuation">(</span><span class="token number">0f</span><span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span>  </span>
<span class="line">                      <span class="token function">Offset</span><span class="token punctuation">(</span>size<span class="token punctuation">.</span>width<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span>  </span>
<span class="line">                      strokeWidth  </span>
<span class="line">                    <span class="token punctuation">)</span>  </span>
<span class="line">                  <span class="token punctuation">}</span>  </span>
<span class="line">                  <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span>  </span>
<span class="line">                  <span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  </span>
<span class="line">                  <span class="token punctuation">.</span><span class="token function">clickable</span> <span class="token punctuation">{</span>  </span>
<span class="line">                    col<span class="token punctuation">.</span><span class="token function">intent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  </span>
<span class="line">                  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  </span>
<span class="line">                  <span class="token function">Text</span><span class="token punctuation">(</span>text <span class="token operator">=</span> col<span class="token punctuation">.</span>title<span class="token punctuation">)</span>  </span>
<span class="line">                  <span class="token function">Text</span><span class="token punctuation">(</span>text <span class="token operator">=</span> col<span class="token punctuation">.</span>description<span class="token punctuation">,</span> color <span class="token operator">=</span> Color<span class="token punctuation">.</span>LightGray<span class="token punctuation">)</span>  </span>
<span class="line">                <span class="token punctuation">}</span>  </span>
<span class="line">  </span>
<span class="line">              <span class="token punctuation">}</span>  </span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">)</span>  </span>
<span class="line">          <span class="token punctuation">}</span>        <span class="token punctuation">}</span>  </span>
<span class="line">  </span>
<span class="line">  </span>
<span class="line">      <span class="token punctuation">}</span>  </span>
<span class="line">    <span class="token punctuation">}</span>  </span>
<span class="line">  </span>
<span class="line">  <span class="token punctuation">}</span>  </span>
<span class="line"><span class="token punctuation">}</span>  </span>
<span class="line">  </span>
<span class="line"><span class="token keyword">class</span> <span class="token function">MyIntent</span><span class="token punctuation">(</span><span class="token keyword">val</span> title<span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token keyword">val</span> description<span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token keyword">val</span> intent<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>获取权限</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">package</span> ab<span class="token punctuation">.</span>yzq<span class="token punctuation">.</span>img<span class="token punctuation">.</span>screen</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> ab<span class="token punctuation">.</span>yzq<span class="token punctuation">.</span>img<span class="token punctuation">.</span>ScaffoldView</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>Manifest</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>pm<span class="token punctuation">.</span>PackageManager</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>activity<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>rememberLauncherForActivityResult</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>activity<span class="token punctuation">.</span>result<span class="token punctuation">.</span>contract<span class="token punctuation">.</span>ActivityResultContracts</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>foundation<span class="token punctuation">.</span>lazy<span class="token punctuation">.</span>LazyColumn</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>material<span class="token punctuation">.</span>Button</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>material<span class="token punctuation">.</span>Text</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span>Composable</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>ui<span class="token punctuation">.</span>platform<span class="token punctuation">.</span>LocalContext</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContextCompat</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>navigation<span class="token punctuation">.</span>NavHostController</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>elvishew<span class="token punctuation">.</span>xlog<span class="token punctuation">.</span>XLog</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>hjq<span class="token punctuation">.</span>toast<span class="token punctuation">.</span>Toaster</span>
<span class="line"></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">HomeScreen</span><span class="token punctuation">(</span>navHostController<span class="token operator">:</span> NavHostController<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> ctx<span class="token operator">=</span> LocalContext<span class="token punctuation">.</span>current</span>
<span class="line">    <span class="token keyword">val</span> requestPermissionLauncher <span class="token operator">=</span></span>
<span class="line">        <span class="token function">rememberLauncherForActivityResult</span><span class="token punctuation">(</span></span>
<span class="line">            ActivityResultContracts<span class="token punctuation">.</span><span class="token function">RequestPermission</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span> isGranted<span class="token operator">:</span> Boolean <span class="token operator">-&gt;</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>isGranted<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">// Permission is granted. Continue the action or workflow in your</span></span>
<span class="line">                <span class="token comment">// app.</span></span>
<span class="line">                Toaster<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;获取权限</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">Manifest<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>READ_EXTERNAL_STORAGE</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">成功&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                Toaster<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;获取权限</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">Manifest<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>READ_EXTERNAL_STORAGE</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">失败&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token comment">// Explain to the user that the feature is unavailable because the</span></span>
<span class="line">                <span class="token comment">// feature requires a permission that the user has denied. At the</span></span>
<span class="line">                <span class="token comment">// same time, respect the user&#39;s decision. Don&#39;t link to system</span></span>
<span class="line">                <span class="token comment">// settings in an effort to convince the user to change their</span></span>
<span class="line">                <span class="token comment">// decision.</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">ScaffoldView</span><span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;首页&quot;</span></span><span class="token punctuation">,</span> navController <span class="token operator">=</span> navHostController<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">LazyColumn</span><span class="token punctuation">(</span>content <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">            item <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">Button</span><span class="token punctuation">(</span>onClick <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">                    <span class="token keyword">when</span> <span class="token punctuation">(</span>PackageManager<span class="token punctuation">.</span>PERMISSION_GRANTED<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                        ContextCompat<span class="token punctuation">.</span><span class="token function">checkSelfPermission</span><span class="token punctuation">(</span></span>
<span class="line">                            ctx<span class="token punctuation">,</span></span>
<span class="line">                            Manifest<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>READ_EXTERNAL_STORAGE</span>
<span class="line">                        <span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">                            <span class="token comment">// Some works that require permission</span></span>
<span class="line">                            XLog<span class="token punctuation">.</span><span class="token function">enableBorder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;权限已经获取了&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">}</span></span>
<span class="line">                        <span class="token keyword">else</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                            <span class="token comment">// Asking for permission</span></span>
<span class="line">                           requestPermissionLauncher<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span>Manifest<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>READ_EXTERNAL_STORAGE<span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">}</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">Text</span><span class="token punctuation">(</span>text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;hhh&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="安卓用法" tabindex="-1"><a class="header-anchor" href="#安卓用法"><span>安卓用法</span></a></h1><p>在其他Fragment中取得PreferenceFragmentCompat组件的设定值(设置界面的配置信息)</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">SharedPreferences preferences= PreferenceManager.getDefaultSharedPreferences(getContext());</span>
<span class="line">        boolean flag=preferences.getBoolean(&quot;english&quot;,true);</span>
<span class="line">        String random=preferences.getString(&quot;randomNum&quot;,&quot;0000&quot;);</span>
<span class="line">        Set&lt;String&gt; s=preferences.getStringSet(&quot;multi_select_list_preference&quot;,null);</span>
<span class="line">        Log.i(&quot;lee&quot;, &quot;onCreateView: &quot;+flag+random+s);</span>
<span class="line"></span></code></pre></div><p>关闭lint和test</p><p>kotlin</p><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"></span>
<span class="line">tasks<span class="token punctuation">.</span><span class="token function">configureEach</span> <span class="token punctuation">{</span> task <span class="token operator">-&gt;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>task<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;lint&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//this is for speed up build</span></span>
<span class="line">        task<span class="token punctuation">.</span>enabled <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>task<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Test&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//this is what you need</span></span>
<span class="line">        task<span class="token punctuation">.</span>enabled <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>groovy</p><div class="language-groovy line-numbers-mode" data-highlighter="prismjs" data-ext="groovy" data-title="groovy"><pre><code><span class="line"></span>
<span class="line">gradle<span class="token punctuation">.</span>taskGraph<span class="token punctuation">.</span>whenReady <span class="token punctuation">{</span></span>
<span class="line">    tasks<span class="token punctuation">.</span>each <span class="token punctuation">{</span> task <span class="token operator">-&gt;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>task<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;test&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">            task<span class="token punctuation">.</span>enabled <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">或者</span>
<span class="line">tasks<span class="token punctuation">.</span>configureEach <span class="token punctuation">{</span> task <span class="token operator">-&gt;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>task<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;lint&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//this is for speed up build</span></span>
<span class="line">        task<span class="token punctuation">.</span>enabled <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>task<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;Test&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//this is what you need</span></span>
<span class="line">        task<span class="token punctuation">.</span>enabled <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="compose实现下边框" tabindex="-1"><a class="header-anchor" href="#compose实现下边框"><span>compose实现下边框</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"></span>
<span class="line"> .drawBehind {</span>
<span class="line"></span>
<span class="line">                        val strokeWidth = 1 * density</span>
<span class="line">                        val y = size.height - strokeWidth / 2</span>
<span class="line"></span>
<span class="line">                        drawLine(</span>
<span class="line">                            Color.LightGray,</span>
<span class="line">                            Offset(0f, y),</span>
<span class="line">                            Offset(size.width, y),</span>
<span class="line">                            strokeWidth</span>
<span class="line">                        )</span>
<span class="line">                    }</span>
<span class="line"></span></code></pre></div><h2 id="动态添加组件" tabindex="-1"><a class="header-anchor" href="#动态添加组件"><span>动态添加组件</span></a></h2><h3 id="flowlayout" tabindex="-1"><a class="header-anchor" href="#flowlayout"><span>flowlayout</span></a></h3><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.constraintlayout.widget.ConstraintLayout</span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/constraintLayout<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.constraintlayout.helper.widget.Flow</span></span>
<span class="line">      <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/flow<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0dp<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>horizontal<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token attr-name"><span class="token namespace">app:</span>flow_wrapMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>chain<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintBottom_toBottomOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintEnd_toEndOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintStart_toStartOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>androidx.constraintlayout.widget.ConstraintLayout</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>kotlin</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">   <span class="token function">onCreated</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">val</span> btns <span class="token operator">=</span> <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token function">NavIntent</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;打电话&quot;</span></span><span class="token punctuation">,</span><span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">val</span> intent <span class="token operator">=</span> <span class="token function">Intent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">{</span></span>
<span class="line">                    action <span class="token operator">=</span> Intent<span class="token punctuation">.</span>ACTION_DIAL</span>
<span class="line">                    <span class="token keyword">data</span> <span class="token operator">=</span> Uri<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;tel:18856967709&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token function">NavIntent</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;share&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;des&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">val</span> sendIntent<span class="token operator">:</span> Intent <span class="token operator">=</span> <span class="token function">Intent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">{</span></span>
<span class="line">                action <span class="token operator">=</span> Intent<span class="token punctuation">.</span>ACTION_SEND</span>
<span class="line">                <span class="token function">putExtra</span><span class="token punctuation">(</span>Intent<span class="token punctuation">.</span>EXTRA_TEXT<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;This is my text to send.&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                type <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;text/plain&quot;</span></span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            <span class="token keyword">val</span> shareIntent <span class="token operator">=</span> Intent<span class="token punctuation">.</span><span class="token function">createChooser</span><span class="token punctuation">(</span>sendIntent<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token function">startActivity</span><span class="token punctuation">(</span>shareIntent<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token function">NavIntent</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;分享富文本&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">val</span> contentUri <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;hhttt&quot;</span></span></span>
<span class="line">            <span class="token keyword">val</span> share <span class="token operator">=</span> Intent<span class="token punctuation">.</span><span class="token function">createChooser</span><span class="token punctuation">(</span><span class="token function">Intent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">{</span></span>
<span class="line">                action <span class="token operator">=</span> Intent<span class="token punctuation">.</span>ACTION_SEND</span>
<span class="line">                <span class="token function">putExtra</span><span class="token punctuation">(</span>Intent<span class="token punctuation">.</span>EXTRA_TEXT<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;https://developer.android.com/training/sharing/&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">                <span class="token comment">// (Optional) Here you&#39;re setting the title of the content</span></span>
<span class="line">                <span class="token function">putExtra</span><span class="token punctuation">(</span>Intent<span class="token punctuation">.</span>EXTRA_TITLE<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;Introducing content previews&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">                <span class="token comment">// (Optional) Here you&#39;re passing a content URI to an image to be displayed</span></span>
<span class="line">                <span class="token keyword">data</span> <span class="token operator">=</span> Uri<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>contentUri<span class="token punctuation">)</span></span>
<span class="line">                flags <span class="token operator">=</span> Intent<span class="token punctuation">.</span>FLAG_GRANT_READ_URI_PERMISSION</span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token function">startActivity</span><span class="token punctuation">(</span>share<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token function">NavIntent</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;get share appas&quot;</span></span><span class="token punctuation">,</span><span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">val</span> apps<span class="token operator">=</span>  FileUtil<span class="token punctuation">.</span><span class="token function">getShareApps</span><span class="token punctuation">(</span><span class="token function">requireContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            apps<span class="token punctuation">.</span><span class="token function">forEach</span> <span class="token punctuation">{</span></span>
<span class="line">                XLog<span class="token punctuation">.</span><span class="token function">enableBorder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        btns<span class="token punctuation">.</span><span class="token function">forEachIndexed</span> <span class="token punctuation">{</span> index<span class="token punctuation">,</span> i <span class="token operator">-&gt;</span></span>
<span class="line">            <span class="token keyword">val</span> btn <span class="token operator">=</span> <span class="token function">Button</span><span class="token punctuation">(</span><span class="token function">requireContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            btn<span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">{</span></span>
<span class="line">                text <span class="token operator">=</span> i<span class="token punctuation">.</span>title</span>
<span class="line">                isAllCaps <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">                id<span class="token operator">=</span>View<span class="token punctuation">.</span><span class="token function">generateViewId</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            btn<span class="token punctuation">.</span><span class="token function">setOnClickListener</span> <span class="token punctuation">{</span> i<span class="token punctuation">.</span><span class="token function">evt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">            activityIntentBinding<span class="token punctuation">.</span>intentBtnGroup<span class="token punctuation">.</span><span class="token function">addView</span><span class="token punctuation">(</span>btn<span class="token punctuation">,</span>index<span class="token punctuation">)</span></span>
<span class="line">            activityIntentBinding<span class="token punctuation">.</span>intentFlow<span class="token punctuation">.</span><span class="token function">addView</span><span class="token punctuation">(</span>btn<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,64)]))}const i=s(e,[["render",l]]),u=JSON.parse('{"path":"/android-tips/snippets.html","title":"代码片段","lang":"zh-CN","frontmatter":{"description":"代码片段 安卓代码片段 获取navhost 标签使用androidx.fragment.app.FragmentContainerView会闪退,因为oncreated生命周期还未初始化 下面的代码可以解决 android文档原文->链接 fragment实例添加argument fragment添加menu 如何获取Android设备唯一ID？ 问题...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/android-tips/snippets.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"代码片段"}],["meta",{"property":"og:description","content":"代码片段 安卓代码片段 获取navhost 标签使用androidx.fragment.app.FragmentContainerView会闪退,因为oncreated生命周期还未初始化 下面的代码可以解决 android文档原文->链接 fragment实例添加argument fragment添加menu 如何获取Android设备唯一ID？ 问题..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-25T05:00:38.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-25T05:00:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"代码片段\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-25T05:00:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"获取navhost","slug":"获取navhost","link":"#获取navhost","children":[]},{"level":2,"title":"fragment实例添加argument","slug":"fragment实例添加argument","link":"#fragment实例添加argument","children":[]},{"level":2,"title":"fragment添加menu","slug":"fragment添加menu","link":"#fragment添加menu","children":[{"level":3,"title":"问题","slug":"问题","link":"#问题","children":[]},{"level":3,"title":"回答1（最佳）","slug":"回答1-最佳","link":"#回答1-最佳","children":[]},{"level":3,"title":"回答2","slug":"回答2","link":"#回答2","children":[]},{"level":3,"title":"回答3（需要有电话卡）","slug":"回答3-需要有电话卡","link":"#回答3-需要有电话卡","children":[]}]},{"level":2,"title":"activity显示返回按钮","slug":"activity显示返回按钮","link":"#activity显示返回按钮","children":[]},{"level":2,"title":"显示返回键","slug":"显示返回键","link":"#显示返回键","children":[]},{"level":2,"title":"kotlin用法","slug":"kotlin用法","link":"#kotlin用法","children":[{"level":3,"title":"接口实现","slug":"接口实现","link":"#接口实现","children":[]}]},{"level":2,"title":"使用代码实现view布局","slug":"使用代码实现view布局","link":"#使用代码实现view布局","children":[]},{"level":2,"title":"compose实现下边框","slug":"compose实现下边框","link":"#compose实现下边框","children":[]},{"level":2,"title":"动态添加组件","slug":"动态添加组件","link":"#动态添加组件","children":[{"level":3,"title":"flowlayout","slug":"flowlayout","link":"#flowlayout","children":[]}]}],"git":{"createdTime":1687669238000,"updatedTime":1687669238000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":1,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":5.2,"words":1560},"filePathRelative":"android-tips/snippets.md","localizedDate":"2023年6月25日","autoDesc":true}');export{i as comp,u as data};
