import{_ as a,c as s,a as t,o as p}from"./app-C8DxhDIZ.js";const e={};function o(c,n){return p(),s("div",null,n[0]||(n[0]=[t(`<h1 id="redis使用" tabindex="-1"><a class="header-anchor" href="#redis使用"><span>Redis使用</span></a></h1><p>不还意思没有rediswindows版本,需要memurai</p><h2 id="推荐使用" tabindex="-1"><a class="header-anchor" href="#推荐使用"><span>推荐使用</span></a></h2><p><a href="https://github.com/tporadowski/redis/releases" target="_blank" rel="noopener noreferrer">https://github.com/tporadowski/redis/releases</a></p><h2 id="memurai" tabindex="-1"><a class="header-anchor" href="#memurai"><span>memurai</span></a></h2><p><a href="https://www.memurai.com/get-memurai" target="_blank" rel="noopener noreferrer">https://www.memurai.com/get-memurai</a> 这个不行的话使用winget</p><h2 id="redis工具推荐" tabindex="-1"><a class="header-anchor" href="#redis工具推荐"><span>redis工具推荐</span></a></h2><p>官方管理工具</p><ul><li><p><a href="https://download.redisinsight.redis.com/latest/RedisInsight-v2-win-installer.exe" target="_blank" rel="noopener noreferrer">redisinsight</a> 用这个</p></li><li><p><a href="https://github.com/zkteco-home/redis-windows" target="_blank" rel="noopener noreferrer">https://github.com/zkteco-home/redis-windows</a></p></li><li><p><a href="https://github.com/tporadowski/redis" target="_blank" rel="noopener noreferrer">https://github.com/tporadowski/redis</a><br> 也可以用memurai</p></li><li><p><a href="https://www.memurai.com/get-memurai" target="_blank" rel="noopener noreferrer">https://www.memurai.com/get-memurai</a></p></li><li><p><a href="https://gitee.com/quick123official/quick_redis_blog" target="_blank" rel="noopener noreferrer">https://gitee.com/quick123official/quick_redis_blog</a></p></li></ul><h3 id="redisclient" tabindex="-1"><a class="header-anchor" href="#redisclient"><span>RedisClient</span></a></h3><p><strong>是否收费</strong>：免费 <strong>项目介绍</strong>：Java 编写的 Redis 连接客户端，功能丰富，并且是免费的。 <strong>支持平台</strong>：Windows <strong>项目地址</strong>：<a href="https://github.com/caoxinyu/RedisClient" target="_blank" rel="noopener noreferrer">https://github.com/caoxinyu/RedisClient</a></p><h3 id="redisstudio" tabindex="-1"><a class="header-anchor" href="#redisstudio"><span>RedisStudio</span></a></h3><p><strong>是否收费</strong>：免费 <strong>项目介绍</strong>：一款 C++ 编写的 Redis 管理工具，比较老，好久没更新了。 <strong>支持平台</strong>：Windows <strong>项目地址</strong>：<a href="https://github.com/cinience/RedisStudio" target="_blank" rel="noopener noreferrer">https://github.com/cinience/RedisStudio</a></p><h3 id="anotherredisdesktopmanager" tabindex="-1"><a class="header-anchor" href="#anotherredisdesktopmanager"><span>AnotherRedisDesktopManager</span></a></h3><p><strong>是否收费</strong>：免费 <strong>项目介绍</strong>：一款基于 NodeJS 开发的 Redis 桌面管理器，它的特点就是相对来说比较稳定，在数据量比较大的时候不会崩溃。 <strong>支持平台</strong>：Windows、Mac OS、Linux <strong>项目地址</strong>：<a href="https://github.com/qishibo/AnotherRedisDesktopManager" target="_blank" rel="noopener noreferrer">https://github.com/qishibo/AnotherRedisDesktopManager</a></p><h2 id="其他-redis-可视化工具" tabindex="-1"><a class="header-anchor" href="#其他-redis-可视化工具"><span>其他 Redis 可视化工具</span></a></h2><ul><li>Medis：<a href="https://github.com/luin/medis" target="_blank" rel="noopener noreferrer">https://github.com/luin/medis</a></li><li>phpRedisAdmin：<a href="https://github.com/ErikDubbelboer/phpRedisAdmin" target="_blank" rel="noopener noreferrer">https://github.com/ErikDubbelboer/phpRedisAdmin</a></li><li>PyRedisAdmin：<a href="https://github.com/JoneXiong/PyRedisAdmin" target="_blank" rel="noopener noreferrer">https://github.com/JoneXiong/PyRedisAdmin</a></li><li>Go-Redis：<a href="https://github.com/alphazero/Go-Redis" target="_blank" rel="noopener noreferrer">https://github.com/alphazero/Go-Redis</a></li><li>RedisLive：<a href="https://github.com/nkrode/RedisLive" target="_blank" rel="noopener noreferrer">https://github.com/nkrode/RedisLive</a></li><li>TreeDMS ：<a href="http://www.treesoft.cn/dms.html" target="_blank" rel="noopener noreferrer">http://www.treesoft.cn/dms.html</a></li><li><a href="https://github.com/tiny-craft/tiny-rdm" target="_blank" rel="noopener noreferrer">tinyrdm</a></li><li><a href="https://github.com/dromara/RedisFront" target="_blank" rel="noopener noreferrer">redis-front</a></li></ul><p><a href="https://www.zhihu.com/question/57728399" target="_blank" rel="noopener noreferrer">https://www.zhihu.com/question/57728399</a></p><p><a href="https://github.com/cc20110101/RedisView" target="_blank" rel="noopener noreferrer">https://github.com/cc20110101/RedisView</a><a href="https://github.com/qishibo/AnotherRedisDesktopManager/" target="_blank" rel="noopener noreferrer">https://github.com/qishibo/AnotherRedisDesktopManager/</a></p><h2 id="springboot使用redis存储乱码" tabindex="-1"><a class="header-anchor" href="#springboot使用redis存储乱码"><span>springboot使用redis存储乱码</span></a></h2><p>需要配置一下redisTemplate</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisConfig</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">StringRedisTemplate</span> <span class="token function">redisTemplate</span><span class="token punctuation">(</span><span class="token class-name">RedisConnectionFactory</span> factory<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">StringRedisTemplate</span> redisTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringRedisTemplate</span><span class="token punctuation">(</span>factory<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">ObjectMapper</span> om <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        om<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">DeserializationFeature</span><span class="token punctuation">.</span><span class="token constant">FAIL_ON_UNKNOWN_PROPERTIES</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        om<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span><span class="token class-name">PropertyAccessor</span><span class="token punctuation">.</span><span class="token constant">ALL</span><span class="token punctuation">,</span> <span class="token class-name">JsonAutoDetect<span class="token punctuation">.</span>Visibility</span><span class="token punctuation">.</span><span class="token constant">ANY</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        om<span class="token punctuation">.</span><span class="token function">deactivateDefaultTyping</span><span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token class-name">Jackson2JsonRedisSerializer</span> jackson2JsonRedisSerializer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Jackson2JsonRedisSerializer</span><span class="token punctuation">(</span>om<span class="token punctuation">,</span></span>
<span class="line">        <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//设置完这个可以直接将对象以json格式存入redis中，但是取出来的时候要用JSON.parseArray(Json.toJsonString(object),Object.class)解析一下</span></span>
<span class="line">        redisTemplate<span class="token punctuation">.</span><span class="token function">setValueSerializer</span><span class="token punctuation">(</span>jackson2JsonRedisSerializer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        redisTemplate<span class="token punctuation">.</span><span class="token function">setHashValueSerializer</span><span class="token punctuation">(</span>jackson2JsonRedisSerializer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//调用后完成设置</span></span>
<span class="line">        redisTemplate<span class="token punctuation">.</span><span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> redisTemplate<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="redis常用的数据类型" tabindex="-1"><a class="header-anchor" href="#redis常用的数据类型"><span>Redis常用的数据类型</span></a></h2><ul><li>String</li><li>Hash</li><li>List</li><li>Set</li><li>zSet</li><li>Sorted set</li></ul><h2 id="string类型" tabindex="-1"><a class="header-anchor" href="#string类型"><span>String类型</span></a></h2><p><strong>判断是否有key所对应的值，有则返回true，没有则返回false</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">hasKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>有则取出key值所对应的值</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>删除单个key值</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>批量删除key</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span> <span class="token comment">//其中keys:Collection&lt;K&gt; keys</span></span>
<span class="line"></span></code></pre></div><p><strong>将当前传入的key值序列化为byte[]类型</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">dump</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>设置过期时间</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">expire</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token keyword">long</span> timeout<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">expire</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> timeout<span class="token punctuation">,</span> unit<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"> <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">expireAt</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">Date</span> date<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">expireAt</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> date<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p><strong>查找匹配的key值，返回一个Set集合类型</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getPatternKey</span><span class="token punctuation">(</span><span class="token class-name">String</span> pattern<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p><strong>修改redis中key的名称</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">renameKey</span><span class="token punctuation">(</span><span class="token class-name">String</span> oldKey<span class="token punctuation">,</span> <span class="token class-name">String</span> newKey<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    redisTemplate<span class="token punctuation">.</span><span class="token function">rename</span><span class="token punctuation">(</span>oldKey<span class="token punctuation">,</span> newKey<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p><strong>返回传入key所存储的值的类型</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token class-name">DataType</span> <span class="token function">getKeyType</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p><strong>如果旧值存在时，将旧值改为新值</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">renameOldKeyIfAbsent</span><span class="token punctuation">(</span><span class="token class-name">String</span> oldKey<span class="token punctuation">,</span> <span class="token class-name">String</span> newKey<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">renameIfAbsent</span><span class="token punctuation">(</span>oldKey<span class="token punctuation">,</span> newKey<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p><strong>从redis中随机取出一个key</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">randomKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>返回当前key所对应的剩余过期时间</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"> <span class="token keyword">public</span> <span class="token class-name">Long</span> <span class="token function">getExpire</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">getExpire</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p><strong>返回剩余过期时间并且指定时间单位</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token class-name">Long</span> <span class="token function">getExpire</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">getExpire</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> unit<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p><strong>将key持久化保存</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">persistKey</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">persist</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p><strong>将当前数据库的key移动到指定redis中数据库当中</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">moveToDbIndex</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token keyword">int</span> dbIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> dbIndex<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p><strong>设置当前的key以及value值</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>设置当前的key以及value值并且设置过期时间</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> timeout<span class="token punctuation">,</span> unit<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>返回key中字符串的子字符</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getCharacterRange</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token keyword">long</span> start<span class="token punctuation">,</span> <span class="token keyword">long</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p><strong>将旧的key设置为value，并且返回旧的key</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">setKeyAsValue</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">String</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAndSet</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p><strong>批量获取值</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"> <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">multiGet</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> keys<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">multiGet</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p><strong>在原有的值基础上新增字符串到末尾</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>以增量的方式将double值存储在变量中</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"> <span class="token keyword">public</span> <span class="token class-name">Double</span> <span class="token function">incrByDouble</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token keyword">double</span> increment<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> increment<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p><strong>通过increment(K key, long delta)方法以增量方式存储long值（正值则自增，负值则自减）</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token class-name">Long</span> <span class="token function">incrBy</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token keyword">long</span> increment<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> increment<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p><strong>如果对应的map集合名称不存在，则添加否则不做修改</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">Map</span> valueMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </span>
<span class="line">valueMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;valueMap1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;map1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </span>
<span class="line">valueMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;valueMap2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;map2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </span>
<span class="line">valueMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;valueMap3&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;map3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </span>
<span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">multiSetIfAbsent</span><span class="token punctuation">(</span>valueMap<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p><strong>设置map集合到redis</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">Map</span> valueMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </span>
<span class="line">valueMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;valueMap1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;map1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </span>
<span class="line">valueMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;valueMap2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;map2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </span>
<span class="line">valueMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;valueMap3&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;map3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </span>
<span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">multiSet</span><span class="token punctuation">(</span>valueMap<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p><strong>获取字符串的长度</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>用 value 参数覆写给定 key 所储存的字符串值，从偏移量 offset 开始</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> offset<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>重新设置key对应的值，如果存在返回false，否则返回true</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setIfAbsent</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>将值 value 关联到 key,并将 key 的过期时间设为 timeout</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> timeout<span class="token punctuation">,</span> unit<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>将二进制第offset位值变为value</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setBit</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> offset<span class="token punctuation">,</span> value<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>对key所储存的字符串值，获取指定偏移量上的位(bit)</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBit</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> offset<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h2 id="hash类型" tabindex="-1"><a class="header-anchor" href="#hash类型"><span>Hash类型</span></a></h2><p>Redis hash 是一个string类型的field和value的映射表，hash特别适合用于存储对象。 Redis 中每个 hash 可以存储 2^32 - 1 键值对（40多亿）。</p><p><strong>获取变量中的指定map键是否有值,如果存在该map键则获取值，没有则返回null。</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> field<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>获取变量中的键值对</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">hGetAll</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p><strong>新增hashMap值</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> hashKey<span class="token punctuation">,</span> value<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>以map集合的形式添加键值对</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">hPutAll</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> maps<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putAll</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> maps<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p><strong>仅当hashKey不存在时才设置</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">hashPutIfAbsent</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">String</span> hashKey<span class="token punctuation">,</span> <span class="token class-name">String</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putIfAbsent</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> hashKey<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p><strong>删除一个或者多个hash表字段</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token class-name">Long</span> <span class="token function">hashDelete</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> fields<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> fields<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p><strong>查看hash表中指定字段是否存在</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hashExists</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">String</span> field<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasKey</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> field<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p><strong>给哈希表key中的指定字段的整数值加上增量increment</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token class-name">Long</span> <span class="token function">hashIncrBy</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">Object</span> field<span class="token punctuation">,</span> <span class="token keyword">long</span> increment<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> field<span class="token punctuation">,</span> increment<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"> <span class="token keyword">public</span> <span class="token class-name">Double</span> <span class="token function">hIncrByDouble</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">Object</span> field<span class="token punctuation">,</span> <span class="token keyword">double</span> delta<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> field<span class="token punctuation">,</span> delta<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p><strong>获取所有hash表中字段</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>获取hash表中字段的数量</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>获取hash表中存在的所有的值</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">hValues</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p><strong>匹配获取键值对，ScanOptions.NONE为获取全部键对</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token class-name">Cursor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">hashScan</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">ScanOptions</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scan</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h2 id="list类型" tabindex="-1"><a class="header-anchor" href="#list类型"><span>List类型</span></a></h2><p><strong>通过索引获取列表中的元素</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> index<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>获取列表指定范围内的元素(start开始位置, 0是开始位置，end 结束位置, -1返回所有)</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>存储在list的头部，即添加一个就把它放在最前面的索引处</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">leftPush</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>把多个值存入List中(value可以是多个值，也可以是一个Collection value)</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">leftPushAll</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>List存在的时候再加入</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">leftPushIfPresent</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>如果pivot处值存在则在pivot前面添加</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">leftPush</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> pivot<span class="token punctuation">,</span> value<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>按照先进先出的顺序来添加(value可以是多个值，或者是Collection var2)</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rightPush</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rightPushAll</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>在pivot元素的右边添加值</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rightPush</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> pivot<span class="token punctuation">,</span> value<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>设置指定索引处元素的值</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> index<span class="token punctuation">,</span> value<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>移除并获取列表中第一个元素(如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止)</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">leftPop</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">leftPop</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> timeout<span class="token punctuation">,</span> unit<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>移除并获取列表最后一个元素</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rightPop</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rightPop</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> timeout<span class="token punctuation">,</span> unit<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>从一个队列的右边弹出一个元素并将这个元素放入另一个指定队列的最左边</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rightPopAndLeftPush</span><span class="token punctuation">(</span>sourceKey<span class="token punctuation">,</span> destinationKey<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rightPopAndLeftPush</span><span class="token punctuation">(</span>sourceKey<span class="token punctuation">,</span> destinationKey<span class="token punctuation">,</span> timeout<span class="token punctuation">,</span> unit<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>删除集合中值等于value的元素(index=0, 删除所有值等于value的元素; index&gt;0, 从头部开始删除第一个值等于value的元素; index&lt;0, 从尾部开始删除第一个值等于value的元素)</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> index<span class="token punctuation">,</span> value<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>将List列表进行剪裁</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>获取当前key的List列表长度</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h2 id="set类型" tabindex="-1"><a class="header-anchor" href="#set类型"><span>Set类型</span></a></h2><p><strong>添加元素</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> values<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>移除元素(单个值、多个值)</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> values<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>删除并且返回一个随机的元素</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>获取集合的大小</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>判断集合是否包含value</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isMember</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>获取两个集合的交集(key对应的无序集合与otherKey对应的无序集合求交集)</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intersect</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> otherKey<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>获取多个集合的交集(Collection var2)</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intersect</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> otherKeys<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>key集合与otherKey集合的交集存储到destKey集合中(其中otherKey可以为单个值或者集合)</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intersectAndStore</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> otherKey<span class="token punctuation">,</span> destKey<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>key集合与多个集合的交集存储到destKey无序集合中</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intersectAndStore</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> otherKeys<span class="token punctuation">,</span> destKey<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>获取两个或者多个集合的并集(otherKeys可以为单个值或者是集合)</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">union</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> otherKeys<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>key集合与otherKey集合的并集存储到destKey中(otherKeys可以为单个值或者是集合)</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unionAndStore</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> otherKey<span class="token punctuation">,</span> destKey<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>获取两个或者多个集合的差集(otherKeys可以为单个值或者是集合)</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">difference</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> otherKeys<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>差集存储到destKey中(otherKeys可以为单个值或者集合)</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">differenceAndStore</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> otherKey<span class="token punctuation">,</span> destKey<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>随机获取集合中的一个元素</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">randomMember</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>获取集合中的所有元素</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">members</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>随机获取集合中count个元素</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">randomMembers</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> count<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>获取多个key无序集合中的元素（去重），count表示个数</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distinctRandomMembers</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> count<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>遍历set类似于Interator(ScanOptions.NONE为显示所有的)</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scan</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> options<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h2 id="zset类型" tabindex="-1"><a class="header-anchor" href="#zset类型"><span>zSet类型</span></a></h2><p><strong>ZSetOperations提供了一系列方法对有序集合进行操作</strong><strong>添加元素(有序集合是按照元素的score值由小到大进行排列)</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> score<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>删除对应的value,value可以为多个值</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> values<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>增加元素的score值，并返回增加后的值</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">incrementScore</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> delta<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>返回元素在集合的排名,有序集合是按照元素的score值由小到大排列</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rank</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>返回元素在集合的排名,按元素的score值由大到小排列</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverseRank</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>获取集合中给定区间的元素(start 开始位置，end 结束位置, -1查询所有)</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverseRangeWithScores</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> start<span class="token punctuation">,</span>end<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>按照Score值查询集合中的元素，结果从小到大排序</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverseRangeByScore</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> min<span class="token punctuation">,</span> max<span class="token punctuation">)</span></span>
<span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverseRangeByScoreWithScores</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> min<span class="token punctuation">,</span> max<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">//返回值为:Set&lt;ZSetOperations.TypedTuple&lt;V&gt;&gt;</span></span>
<span class="line"></span></code></pre></div><p><strong>从高到低的排序集中获取分数在最小和最大值之间的元素</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverseRangeByScore</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> min<span class="token punctuation">,</span> max<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>根据score值获取集合元素数量</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> min<span class="token punctuation">,</span> max<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>获取集合的大小</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span></span>
<span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">zCard</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>获取集合中key、value元素对应的score值</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">score</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>移除指定索引位置处的成员</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeRange</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>移除指定score范围的集合成员</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeRangeByScore</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> min<span class="token punctuation">,</span> max<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>获取key和otherKey的并集并存储在destKey中（其中otherKeys可以为单个字符串或者字符串集合）</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unionAndStore</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> otherKey<span class="token punctuation">,</span> destKey<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>获取key和otherKey的交集并存储在destKey中（其中otherKeys可以为单个字符串或者字符串集合）</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intersectAndStore</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> otherKey<span class="token punctuation">,</span> destKey<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p><strong>遍历集合（和iterator一模一样）</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"> <span class="token class-name">Cursor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TypedTuple</span><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> scan <span class="token operator">=</span> opsForZSet<span class="token punctuation">.</span><span class="token function">scan</span><span class="token punctuation">(</span><span class="token string">&quot;test3&quot;</span><span class="token punctuation">,</span> <span class="token class-name">ScanOptions</span><span class="token punctuation">.</span><span class="token constant">NONE</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">while</span> <span class="token punctuation">(</span>scan<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">ZSetOperations<span class="token punctuation">.</span>TypedTuple</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> item <span class="token operator">=</span> scan<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> item<span class="token punctuation">.</span><span class="token function">getScore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>参考：<a href="https://github.com/nuptkwz/notes/tree/master/technology/redis" target="_blank" rel="noopener noreferrer">https://github.com/nuptkwz/notes/tree/master/technology/redis</a></p>`,215)]))}const i=a(e,[["render",o]]),u=JSON.parse('{"path":"/java-tutor/orm-tutor/redis-tutor.html","title":"Redis使用","lang":"zh-CN","frontmatter":{"description":"Redis使用 不还意思没有rediswindows版本,需要memurai 推荐使用 https://github.com/tporadowski/redis/releases memurai https://www.memurai.com/get-memurai 这个不行的话使用winget redis工具推荐 官方管理工具 redisinsigh...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/java-tutor/orm-tutor/redis-tutor.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"Redis使用"}],["meta",{"property":"og:description","content":"Redis使用 不还意思没有rediswindows版本,需要memurai 推荐使用 https://github.com/tporadowski/redis/releases memurai https://www.memurai.com/get-memurai 这个不行的话使用winget redis工具推荐 官方管理工具 redisinsigh..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-24T08:24:01.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-24T08:24:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis使用\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-24T08:24:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"推荐使用","slug":"推荐使用","link":"#推荐使用","children":[]},{"level":2,"title":"memurai","slug":"memurai","link":"#memurai","children":[]},{"level":2,"title":"redis工具推荐","slug":"redis工具推荐","link":"#redis工具推荐","children":[{"level":3,"title":"RedisClient","slug":"redisclient","link":"#redisclient","children":[]},{"level":3,"title":"RedisStudio","slug":"redisstudio","link":"#redisstudio","children":[]},{"level":3,"title":"AnotherRedisDesktopManager","slug":"anotherredisdesktopmanager","link":"#anotherredisdesktopmanager","children":[]}]},{"level":2,"title":"其他 Redis 可视化工具","slug":"其他-redis-可视化工具","link":"#其他-redis-可视化工具","children":[]},{"level":2,"title":"springboot使用redis存储乱码","slug":"springboot使用redis存储乱码","link":"#springboot使用redis存储乱码","children":[]},{"level":2,"title":"Redis常用的数据类型","slug":"redis常用的数据类型","link":"#redis常用的数据类型","children":[]},{"level":2,"title":"String类型","slug":"string类型","link":"#string类型","children":[]},{"level":2,"title":"Hash类型","slug":"hash类型","link":"#hash类型","children":[]},{"level":2,"title":"List类型","slug":"list类型","link":"#list类型","children":[]},{"level":2,"title":"Set类型","slug":"set类型","link":"#set类型","children":[]},{"level":2,"title":"zSet类型","slug":"zset类型","link":"#zset类型","children":[]}],"git":{"createdTime":1647861419000,"updatedTime":1711268641000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":6,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":9.21,"words":2763},"filePathRelative":"java-tutor/orm-tutor/redis-tutor.md","localizedDate":"2022年3月21日","autoDesc":true}');export{i as comp,u as data};
