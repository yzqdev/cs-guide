import{_ as s,c as i,a as n,o as a}from"./app-C8DxhDIZ.js";const t={};function l(c,e){return a(),i("div",null,e[0]||(e[0]=[n(`<h1 id="自动同步github代码到gitee" tabindex="-1"><a class="header-anchor" href="#自动同步github代码到gitee"><span>自动同步github代码到gitee</span></a></h1><h2 id="推荐方法" tabindex="-1"><a class="header-anchor" href="#推荐方法"><span>推荐方法</span></a></h2><p><a href="https://github.com/marketplace/actions/hub-mirror-action" target="_blank" rel="noopener noreferrer">https://github.com/marketplace/actions/hub-mirror-action</a></p><p>下面是知乎的方法</p><blockquote><p>来源 <a href="https://zhuanlan.zhihu.com/p/353862378" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/353862378</a></p></blockquote><p>我的个人博客是通过Github的Pages技术搭建的静态博客，使用 <code>vuepress</code> 驱动。由于Github在国内环境访问速度慢，并且不够稳定，所以通常对外介绍使用Gitee的镜像博客仓库，但是每次都需要在推送Github之后去Gitee上对应的仓库进行手动同步，就无端增加了很多重复的工作量，经过多方搜索和实践，最终选定了Github一个比较新的技术 -- <code>Github Actions</code> <strong>实现代码自动Build，同步到Gitee，自动在Gitee实现Pages功能</strong>。</p><p>下面来看一下如何操作吧：</p><h2 id="_1-github和gitee添加公钥" tabindex="-1"><a class="header-anchor" href="#_1-github和gitee添加公钥"><span>1.Github和Gitee添加公钥</span></a></h2><h2 id="window下通过git-bash生成公钥" tabindex="-1"><a class="header-anchor" href="#window下通过git-bash生成公钥"><span>Window下通过git bash生成公钥</span></a></h2><p>输入 <code>ssh-keygen</code> ，然后连按三下回车</p><p><img src="https://pic2.zhimg.com/v2-87941f9a981a98b493bcd4dd79cc3b25_r.jpg" alt="img"></p><h2 id="gitee-和-github-添加公钥" tabindex="-1"><a class="header-anchor" href="#gitee-和-github-添加公钥"><span>Gitee 和 Github 添加公钥</span></a></h2><p><img src="https://pic4.zhimg.com/v2-00317b83252027a36be6d6ec6f267193_r.jpg" alt="img"></p><h2 id="检测公钥是否成功添加" tabindex="-1"><a class="header-anchor" href="#检测公钥是否成功添加"><span>检测公钥是否成功添加</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">ssh -T git@github.com</span>
<span class="line">ssh -T git@gitee.com</span>
<span class="line">#返回如下图所示结果，则成功添加公钥！</span>
<span class="line"></span></code></pre></div><p><img src="https://pic4.zhimg.com/v2-9f38c06db2d467dbb590964e7a96660f_r.jpg" alt="img"></p><h2 id="_2-github仓库添加token" tabindex="-1"><a class="header-anchor" href="#_2-github仓库添加token"><span>2.Github仓库添加Token</span></a></h2><h2 id="_1-生成账号token" tabindex="-1"><a class="header-anchor" href="#_1-生成账号token"><span>1. 生成账号Token</span></a></h2><p><img src="https://pic2.zhimg.com/v2-cc22ebd8fef6fa4c6d8ddee5bee35121_r.jpg" alt="img"></p><h2 id="_2-在secret中添加token" tabindex="-1"><a class="header-anchor" href="#_2-在secret中添加token"><span>2. 在Secret中添加Token</span></a></h2><p><img src="https://pic3.zhimg.com/v2-a747fed0df42c3c49e561ccbd32e3186_r.jpg" alt="img"></p><h2 id="_3-github仓库添加私钥" tabindex="-1"><a class="header-anchor" href="#_3-github仓库添加私钥"><span>3.Github仓库添加私钥</span></a></h2><h2 id="_1-进入github想要同步的仓库-选择settings进行设置-选择secret进行设置" tabindex="-1"><a class="header-anchor" href="#_1-进入github想要同步的仓库-选择settings进行设置-选择secret进行设置"><span>1. 进入Github想要同步的仓库-选择Settings进行设置-选择Secret进行设置</span></a></h2><p><img src="https://pic4.zhimg.com/v2-bcc8ca15bed8ab44d2a59d08934c7bbf_r.jpg" alt="img"></p><h2 id="_2-创建新的仓库secret-gitee-rsa-private-key" tabindex="-1"><a class="header-anchor" href="#_2-创建新的仓库secret-gitee-rsa-private-key"><span>2. 创建新的仓库Secret <code>GITEE_RSA_PRIVATE_KEY</code></span></a></h2><p><img src="https://pic3.zhimg.com/v2-4be95bbb474808761d322777b6e252aa_r.jpg" alt="img"></p><h2 id="_3-添加-gitee-password" tabindex="-1"><a class="header-anchor" href="#_3-添加-gitee-password"><span>3. 添加 <code>GITEE_PASSWORD</code></span></a></h2><p>同之前一样，在仓库里添加名为 <code>GITEE_PASSWORD</code> 的Secret，内容是你的Gitee账号密码。</p><p>最后检查一下是否在 <code>Github</code> 中添加了 <code>ACCESS_TOKEN</code> ，<code>GITEE_PASSWORD</code> ，<code>GITEE_RSA_PRIVATE_KEY</code> 三个密钥。如下图：</p><p><img src="https://pic2.zhimg.com/v2-dd1befa84a0dab95c1cd0e2ae544bdc5_r.jpg" alt="img"></p><h2 id="重头戏来了" tabindex="-1"><a class="header-anchor" href="#重头戏来了"><span>重头戏来了</span></a></h2><p>在GitHub仓库里添加 Actions 脚本文件！！</p><p><img src="https://pic3.zhimg.com/v2-1a38e1b9c9889a5d7e3d33d02f0a8252_r.jpg" alt="img"></p><p>- 工作流脚本名字可以自定义，随意起！！ - 复制下面的自动打包及同步脚本 - 在之后每次<strong>有 Push 请求</strong>的时候，该脚本就会自动执行，完成<strong>云端Build静态文件</strong>，<strong>部署到 gh_pages 分支</strong>，然后将<strong>代码同步到 Gitee 的镜像仓库</strong>，并且<strong>自动执行 Pages 的 Update 操作</strong>！！！</p><h2 id="自动打包及自动同步脚本" tabindex="-1"><a class="header-anchor" href="#自动打包及自动同步脚本"><span>自动打包及自动同步脚本</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">name: A TO A:GH_PAGES</span>
<span class="line">on: [push]</span>
<span class="line">jobs:</span>
<span class="line">  build-and-deploy:</span>
<span class="line">    runs-on: ubuntu-latest</span>
<span class="line">    steps:</span>
<span class="line">    - name: Checkout</span>
<span class="line">      uses: actions/checkout@master</span>
<span class="line"></span>
<span class="line">    - name: Build and Deploy</span>
<span class="line">      uses: jenkey2011/vuepress-deploy@master</span>
<span class="line">      env:</span>
<span class="line">        ACCESS_TOKEN: \${{ secrets.ACCESS_TOKEN }}</span>
<span class="line">        # 你要操作的目标仓库</span>
<span class="line">        TARGET_REPO: china-fanxin/vuepress-blog</span>
<span class="line">        # 构建结果存储的分支</span>
<span class="line">        TARGET_BRANCH: gh_pages</span>
<span class="line">        # 要使用的构建命令</span>
<span class="line">        BUILD_SCRIPT: yarn &amp;&amp; yarn build</span>
<span class="line">        # 构建结果存储目录</span>
<span class="line">        BUILD_DIR: docs/.vuepress/dist/</span>
<span class="line">  sync:</span>
<span class="line">    needs: build-and-deploy</span>
<span class="line">    runs-on: ubuntu-latest</span>
<span class="line">    steps:</span>
<span class="line">    - name: Sync to Gitee</span>
<span class="line">      uses: wearerequired/git-mirror-action@master</span>
<span class="line">      env:</span>
<span class="line">        SSH_PRIVATE_KEY: \${{ secrets.GITEE_RSA_PRIVATE_KEY }}</span>
<span class="line">      with:</span>
<span class="line">        # 来源仓库</span>
<span class="line">        source-repo: &quot;git@github.com:china-fanxin/vuepress-blog.git&quot;</span>
<span class="line">        # 目标仓库</span>
<span class="line">        destination-repo: &quot;git@gitee.com:china-fanxin/vuepress-blog.git&quot;</span>
<span class="line">  reload-pages:</span>
<span class="line">    needs: sync</span>
<span class="line">    runs-on: ubuntu-latest</span>
<span class="line">    steps:</span>
<span class="line">      - name: Build Gitee Pages</span>
<span class="line">        uses: yanglbme/gitee-pages-action@main</span>
<span class="line">        with:</span>
<span class="line">          # 注意替换为你的 Gitee 用户名</span>
<span class="line">          gitee-username: china-fanxin</span>
<span class="line">          # 注意在 Settings-&gt;Secrets 配置 GITEE_PASSWORD</span>
<span class="line">          gitee-password: \${{ secrets.GITEE_PASSWORD }}</span>
<span class="line">          # 注意替换为你的 Gitee 仓库，仓库名严格区分大小写，请准确填写，否则会出错</span>
<span class="line">          gitee-repo: china-fanxin/vuepress-blog</span>
<span class="line">          # 要部署的分支，默认是 master，若是其他分支，则需要指定（指定的分支必须存在）</span>
<span class="line">          branch: gh_pages</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="功能实现效果" tabindex="-1"><a class="header-anchor" href="#功能实现效果"><span>功能实现效果</span></a></h2><p>完成了上述配置后，就已经可以实现当有代码 Push 到 Github 后，自动将代码 Build 生成静态文件 Pages ，并且将代码同步到Gitee 上，并自动 Pages ！！ 如下的 Actions 执行的结果图！！</p><p><img src="https://pic4.zhimg.com/v2-cb0186d0db9b53e2e5e9befe45aa222f_r.jpg" alt="img"></p><blockquote><p>文档信息 版权声明：自由转载-非商用-非衍生-保持署名（创意共享3.0许可证） 发表日期：2021-03-01 20:42:19 星期一</p></blockquote>`,40)]))}const d=s(t,[["render",l]]),r=JSON.parse('{"path":"/git-tutor/github/github-to-gitee.html","title":"自动同步github代码到gitee","lang":"zh-CN","frontmatter":{"description":"自动同步github代码到gitee 推荐方法 https://github.com/marketplace/actions/hub-mirror-action 下面是知乎的方法 来源 https://zhuanlan.zhihu.com/p/353862378 我的个人博客是通过Github的Pages技术搭建的静态博客，使用 vuepress 驱动...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/git-tutor/github/github-to-gitee.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"自动同步github代码到gitee"}],["meta",{"property":"og:description","content":"自动同步github代码到gitee 推荐方法 https://github.com/marketplace/actions/hub-mirror-action 下面是知乎的方法 来源 https://zhuanlan.zhihu.com/p/353862378 我的个人博客是通过Github的Pages技术搭建的静态博客，使用 vuepress 驱动..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://pic2.zhimg.com/v2-87941f9a981a98b493bcd4dd79cc3b25_r.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-25T05:00:38.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-25T05:00:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"自动同步github代码到gitee\\",\\"image\\":[\\"https://pic2.zhimg.com/v2-87941f9a981a98b493bcd4dd79cc3b25_r.jpg\\",\\"https://pic4.zhimg.com/v2-00317b83252027a36be6d6ec6f267193_r.jpg\\",\\"https://pic4.zhimg.com/v2-9f38c06db2d467dbb590964e7a96660f_r.jpg\\",\\"https://pic2.zhimg.com/v2-cc22ebd8fef6fa4c6d8ddee5bee35121_r.jpg\\",\\"https://pic3.zhimg.com/v2-a747fed0df42c3c49e561ccbd32e3186_r.jpg\\",\\"https://pic4.zhimg.com/v2-bcc8ca15bed8ab44d2a59d08934c7bbf_r.jpg\\",\\"https://pic3.zhimg.com/v2-4be95bbb474808761d322777b6e252aa_r.jpg\\",\\"https://pic2.zhimg.com/v2-dd1befa84a0dab95c1cd0e2ae544bdc5_r.jpg\\",\\"https://pic3.zhimg.com/v2-1a38e1b9c9889a5d7e3d33d02f0a8252_r.jpg\\",\\"https://pic4.zhimg.com/v2-cb0186d0db9b53e2e5e9befe45aa222f_r.jpg\\"],\\"dateModified\\":\\"2023-06-25T05:00:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"推荐方法","slug":"推荐方法","link":"#推荐方法","children":[]},{"level":2,"title":"1.Github和Gitee添加公钥","slug":"_1-github和gitee添加公钥","link":"#_1-github和gitee添加公钥","children":[]},{"level":2,"title":"Window下通过git bash生成公钥","slug":"window下通过git-bash生成公钥","link":"#window下通过git-bash生成公钥","children":[]},{"level":2,"title":"Gitee 和 Github 添加公钥","slug":"gitee-和-github-添加公钥","link":"#gitee-和-github-添加公钥","children":[]},{"level":2,"title":"检测公钥是否成功添加","slug":"检测公钥是否成功添加","link":"#检测公钥是否成功添加","children":[]},{"level":2,"title":"2.Github仓库添加Token","slug":"_2-github仓库添加token","link":"#_2-github仓库添加token","children":[]},{"level":2,"title":"1. 生成账号Token","slug":"_1-生成账号token","link":"#_1-生成账号token","children":[]},{"level":2,"title":"2. 在Secret中添加Token","slug":"_2-在secret中添加token","link":"#_2-在secret中添加token","children":[]},{"level":2,"title":"3.Github仓库添加私钥","slug":"_3-github仓库添加私钥","link":"#_3-github仓库添加私钥","children":[]},{"level":2,"title":"1. 进入Github想要同步的仓库-选择Settings进行设置-选择Secret进行设置","slug":"_1-进入github想要同步的仓库-选择settings进行设置-选择secret进行设置","link":"#_1-进入github想要同步的仓库-选择settings进行设置-选择secret进行设置","children":[]},{"level":2,"title":"2. 创建新的仓库Secret GITEE_RSA_PRIVATE_KEY","slug":"_2-创建新的仓库secret-gitee-rsa-private-key","link":"#_2-创建新的仓库secret-gitee-rsa-private-key","children":[]},{"level":2,"title":"3. 添加 GITEE_PASSWORD","slug":"_3-添加-gitee-password","link":"#_3-添加-gitee-password","children":[]},{"level":2,"title":"重头戏来了","slug":"重头戏来了","link":"#重头戏来了","children":[]},{"level":2,"title":"自动打包及自动同步脚本","slug":"自动打包及自动同步脚本","link":"#自动打包及自动同步脚本","children":[]},{"level":2,"title":"功能实现效果","slug":"功能实现效果","link":"#功能实现效果","children":[]}],"git":{"createdTime":1687669238000,"updatedTime":1687669238000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":1,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":2.9,"words":869},"filePathRelative":"git-tutor/github/github-to-gitee.md","localizedDate":"2023年6月25日","autoDesc":true}');export{d as comp,r as data};
