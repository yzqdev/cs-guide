import{_ as s,c as a,a as e,o as t}from"./app-C8DxhDIZ.js";const p={};function i(l,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="过滤器" tabindex="-1"><a class="header-anchor" href="#过滤器"><span>过滤器</span></a></h1><p>SpringMVC中的Filter两个基类GenericFilterBean与OncePerRequestFilter</p><h2 id="定义filter" tabindex="-1"><a class="header-anchor" href="#定义filter"><span>定义Filter</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TransactionFilter</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span></span>
<span class="line">      <span class="token class-name">ServletRequest</span> request<span class="token punctuation">,</span> </span>
<span class="line">      <span class="token class-name">ServletResponse</span> response<span class="token punctuation">,</span> </span>
<span class="line">      <span class="token class-name">FilterChain</span> chain<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span></span>
<span class="line"> </span>
<span class="line">        <span class="token class-name">HttpServletRequest</span> req <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">)</span> request<span class="token punctuation">;</span></span>
<span class="line">        <span class="token constant">LOG</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span></span>
<span class="line">          <span class="token string">&quot;Starting a transaction for req : {}&quot;</span><span class="token punctuation">,</span> </span>
<span class="line">          req<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"> </span>
<span class="line">        chain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token constant">LOG</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span></span>
<span class="line">          <span class="token string">&quot;Committing a transaction for req : {}&quot;</span><span class="token punctuation">,</span> </span>
<span class="line">          req<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// other methods </span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filterregistrationbean" tabindex="-1"><a class="header-anchor" href="#filterregistrationbean"><span>FilterRegistrationBean</span></a></h2><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Bean</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RequestResponseLoggingFilter</span><span class="token punctuation">&gt;</span></span> <span class="token function">loggingFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RequestResponseLoggingFilter</span><span class="token punctuation">&gt;</span></span> registrationBean </span>
<span class="line">      <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">    registrationBean<span class="token punctuation">.</span><span class="token function">setFilter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RequestResponseLoggingFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    registrationBean<span class="token punctuation">.</span><span class="token function">addUrlPatterns</span><span class="token punctuation">(</span><span class="token string">&quot;/users/*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    registrationBean<span class="token punctuation">.</span><span class="token function">setOrder</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">    <span class="token keyword">return</span> registrationBean<span class="token punctuation">;</span>    </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div>`,6)]))}const o=s(p,[["render",i]]),r=JSON.parse('{"path":"/java-tutor/springboot/tips/filter.html","title":"过滤器","lang":"zh-CN","frontmatter":{"description":"过滤器 SpringMVC中的Filter两个基类GenericFilterBean与OncePerRequestFilter 定义Filter FilterRegistrationBean","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/java-tutor/springboot/tips/filter.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"过滤器"}],["meta",{"property":"og:description","content":"过滤器 SpringMVC中的Filter两个基类GenericFilterBean与OncePerRequestFilter 定义Filter FilterRegistrationBean"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-11T09:37:51.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-11T09:37:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"过滤器\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-11T09:37:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"定义Filter","slug":"定义filter","link":"#定义filter","children":[]},{"level":2,"title":"FilterRegistrationBean","slug":"filterregistrationbean","link":"#filterregistrationbean","children":[]}],"git":{"createdTime":1655535285000,"updatedTime":1718098671000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":2,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":0.28,"words":83},"filePathRelative":"java-tutor/springboot/tips/filter.md","localizedDate":"2022年6月18日","autoDesc":true}');export{o as comp,r as data};
