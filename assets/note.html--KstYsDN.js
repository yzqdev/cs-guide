import{_ as s,c as a,a as t,o as p}from"./app-C8DxhDIZ.js";const e={};function o(l,n){return p(),a("div",null,n[0]||(n[0]=[t(`<h1 id="笔记" tabindex="-1"><a class="header-anchor" href="#笔记"><span>笔记</span></a></h1><h2 id="安卓组件" tabindex="-1"><a class="header-anchor" href="#安卓组件"><span>安卓组件</span></a></h2><table><thead><tr><th>编号</th><th>组件</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td><code>Fragments</code></td><td>表示<code>Activity</code>中的用户界面的一部分。</td></tr><tr><td>2</td><td><code>Views</code></td><td>在屏幕上绘制的UI元素，包括按钮，列表形式等</td></tr><tr><td>3</td><td><code>Layouts</code></td><td>查看控制屏幕格式和视图外观的层次结构。</td></tr><tr><td>4</td><td><code>Intents</code></td><td>消息连接组件在一起。</td></tr><tr><td>5</td><td><code>Resources</code></td><td>外部元素，如字符串，常量和可绘制图片。</td></tr><tr><td>6</td><td><code>Manifest</code></td><td>应用程序的配置文件。</td></tr></tbody></table><h2 id="manifest详解" tabindex="-1"><a class="header-anchor" href="#manifest详解"><span>manifest详解</span></a></h2><p>Activity启动模式(launchMode)</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">android:launchMode=&quot;singleTop&quot;</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="关于字体大小" tabindex="-1"><a class="header-anchor" href="#关于字体大小"><span>关于字体大小</span></a></h2><ul><li>使用sp作为字体大小单位,会随着系统的字体大小改变</li><li>而dp作为单位则不会.</li></ul><h2 id="设置颜色的几种方式" tabindex="-1"><a class="header-anchor" href="#设置颜色的几种方式"><span>设置颜色的几种方式</span></a></h2><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"> basicTv<span class="token punctuation">.</span><span class="token function">setTextColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>GREEN<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">basicTv<span class="token punctuation">.</span><span class="token function">setTextColor</span><span class="token punctuation">(</span><span class="token number">0xff00ff</span><span class="token punctuation">)</span></span>
<span class="line">basicTv<span class="token punctuation">.</span><span class="token function">setTextColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span><span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">basicTv<span class="token punctuation">.</span><span class="token function">setTextColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span><span class="token function">argb</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">basicTv<span class="token punctuation">.</span><span class="token function">setTextColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span><span class="token function">parseColor</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;#00ff00&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h2 id="安卓打包修改名字" tabindex="-1"><a class="header-anchor" href="#安卓打包修改名字"><span>安卓打包修改名字</span></a></h2><h3 id="关于打包的定义" tabindex="-1"><a class="header-anchor" href="#关于打包的定义"><span>关于打包的定义</span></a></h3><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Make Project:- Means you create a real aplication which is working on device and has a executable file like apk.</span>
<span class="line"></span>
<span class="line">Make Module:- means you create a library project for you aplication which is executed with that project and has no executable file like apk but has jar files which work as a library.</span>
<span class="line"></span>
<span class="line">Build apk: when you normally run your application an apk file is generated locally which is like a zipfile and is easily unzipable no security is implemented and you can get the code from that apk file. It is used basically for local testing.</span>
<span class="line"></span>
<span class="line">Signed apk: it is that apk you can create with a password and security and it is not easily unzipable and is used for production.</span>
<span class="line"></span></code></pre></div><h3 id="定义打包名称" tabindex="-1"><a class="header-anchor" href="#定义打包名称"><span>定义打包名称</span></a></h3><div class="language-groovy line-numbers-mode" data-highlighter="prismjs" data-ext="groovy" data-title="groovy"><pre><code><span class="line">    <span class="token comment">// 打包 用来打包修改名字的 跟defaultConfig是同一级的</span></span>
<span class="line">    applicationVariants<span class="token punctuation">.</span>all <span class="token punctuation">{</span> variant <span class="token operator">-&gt;</span></span>
<span class="line">        variant<span class="token punctuation">.</span>outputs<span class="token punctuation">.</span>all <span class="token punctuation">{</span> output <span class="token operator">-&gt;</span> <span class="token comment">// 这里和2.0的不一样 2.0是each 3.0是all</span></span>
<span class="line">            <span class="token keyword">def</span> outputFile <span class="token operator">=</span> output<span class="token punctuation">.</span>outputFile</span>
<span class="line">            <span class="token keyword">def</span> fileName<span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>outputFile <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> outputFile<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;.apk&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">if</span> <span class="token punctuation">(</span>variant<span class="token punctuation">.</span>buildType<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&#39;release&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    fileName <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">&quot;[项目名]</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression"><span class="token function">releaseTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">defaultConfig<span class="token punctuation">.</span>versionName</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_release.apk&quot;</span></span></span>
<span class="line">                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>variant<span class="token punctuation">.</span>buildType<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&#39;debug&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    fileName <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">&quot;[项目名]</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression"><span class="token function">releaseTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">defaultConfig<span class="token punctuation">.</span>versionName</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_debug.apk&quot;</span></span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                outputFileName <span class="token operator">=</span> fileName <span class="token comment">// 这里和2.0不一样</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="定义一个时间" tabindex="-1"><a class="header-anchor" href="#定义一个时间"><span>定义一个时间</span></a></h3><div class="language-groovy" data-highlighter="prismjs" data-ext="groovy" data-title="groovy"><pre><code><span class="line"><span class="token comment">//打包 打包版本需要的当前时间名字 跟 Android 是同一级的</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">releaseTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">//注意时间不对 请注意时区问题 时区在小时分钟的时候不一样</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;yyyy-MM-dd-HH-mm&quot;</span></span><span class="token punctuation">,</span> TimeZone<span class="token punctuation">.</span><span class="token function">getTimeZone</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;Asia/Shanghai&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h2 id="在build-gradle-kts引入function-gradle中方法" tabindex="-1"><a class="header-anchor" href="#在build-gradle-kts引入function-gradle中方法"><span>在build.gradle.kts引入function.gradle中方法</span></a></h2><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">import</span> groovy<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>Closure</span>
<span class="line"><span class="token function">apply</span><span class="token punctuation">(</span>from<span class="token operator">=</span><span class="token string-literal singleline"><span class="token string">&quot;functions.gradle&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">val</span> buildVersionName<span class="token operator">:</span> Closure<span class="token operator">&lt;</span>Any<span class="token operator">&gt;</span> <span class="token keyword">by</span> ext</span>
<span class="line"><span class="token function">buildVersionName</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h2 id="获取所有的provider" tabindex="-1"><a class="header-anchor" href="#获取所有的provider"><span>获取所有的provider</span></a></h2><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">ThirdScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">val</span> ctx <span class="token operator">=</span> LocalContext<span class="token punctuation">.</span>current <span class="token keyword">as</span> ComponentActivity</span>
<span class="line">  <span class="token function">Button</span><span class="token punctuation">(</span>onClick <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span>pack <span class="token keyword">in</span> ctx<span class="token punctuation">.</span><span class="token function">getPackageManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInstalledPackages</span><span class="token punctuation">(</span>PackageManager<span class="token punctuation">.</span>GET_PROVIDERS<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">val</span> providers <span class="token operator">=</span> pack<span class="token punctuation">.</span>providers</span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>providers <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span>provider <span class="token keyword">in</span> providers<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">if</span> <span class="token punctuation">(</span>provider<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;neofileprovider&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            XLog<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>  <span class="token string-literal singleline"><span class="token string">&quot;provider: &quot;</span></span> <span class="token operator">+</span> provider<span class="token punctuation">.</span>authority<span class="token punctuation">)</span></span>
<span class="line">            XLog<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span><span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Text</span><span class="token punctuation">(</span>text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;provide&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="provider冲突解决办法" tabindex="-1"><a class="header-anchor" href="#provider冲突解决办法"><span>provider冲突解决办法</span></a></h2><p>添加一个MiniProvider继承FileProvider,authority都要<code>\${applicationId}..multi_image.provider</code>这种,然后使用<code>requireActivity().getPackageName()+&quot;.multi_image.provider&quot;</code>,</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">FileProvider.getUriForFile(  requireActivity(),  requireActivity().getPackageName()+&quot;.multi_image.provider&quot;,  mTmpFile)</span>
<span class="line"></span></code></pre></div><h3 id="使用fragmentutils" tabindex="-1"><a class="header-anchor" href="#使用fragmentutils"><span>使用fragmentutils</span></a></h3><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">  FragmentUtils<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>supportFragmentManager<span class="token punctuation">,</span> frags<span class="token punctuation">,</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>lib_frag<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">val</span> callback <span class="token operator">=</span> <span class="token keyword">object</span> <span class="token operator">:</span> <span class="token function">OnBackPressedCallback</span><span class="token punctuation">(</span></span>
<span class="line">      <span class="token boolean">true</span> <span class="token comment">// default to enabled</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">handleOnBackPressed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        XLog<span class="token punctuation">.</span><span class="token function">enableStackTrace</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span> FragmentUtils<span class="token punctuation">.</span><span class="token function">getTopShow</span><span class="token punctuation">(</span>supportFragmentManager<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>FragmentUtils<span class="token punctuation">.</span><span class="token function">getTopShow</span><span class="token punctuation">(</span>supportFragmentManager<span class="token punctuation">)</span> <span class="token keyword">is</span> LiblistFragment<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">          <span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>
<span class="line">          FragmentUtils<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>supportFragmentManager<span class="token punctuation">,</span><span class="token function">LiblistFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>lib_frag<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>onBackPressedDispatcher<span class="token punctuation">.</span><span class="token function">addCallback</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h2 id="kotlin获取appllication实例" tabindex="-1"><a class="header-anchor" href="#kotlin获取appllication实例"><span>kotlin获取appllication实例</span></a></h2><div class="language-kotlin" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">class</span> MyApp<span class="token operator">:</span> <span class="token function">Application</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        instance <span class="token operator">=</span> <span class="token keyword">this</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">companion</span> <span class="token keyword">object</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">lateinit</span> <span class="token keyword">var</span> instance<span class="token operator">:</span> MyApp</span>
<span class="line">            <span class="token keyword">private</span> <span class="token keyword">set</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div>`,28)]))}const i=s(e,[["render",o]]),u=JSON.parse('{"path":"/android-tips/note.html","title":"笔记","lang":"zh-CN","frontmatter":{"description":"笔记 安卓组件 manifest详解 Activity启动模式(launchMode) 关于字体大小 使用sp作为字体大小单位,会随着系统的字体大小改变 而dp作为单位则不会. 设置颜色的几种方式 安卓打包修改名字 关于打包的定义 定义打包名称 定义一个时间 在build.gradle.kts引入function.gradle中方法 获取所有的prov...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/android-tips/note.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"笔记"}],["meta",{"property":"og:description","content":"笔记 安卓组件 manifest详解 Activity启动模式(launchMode) 关于字体大小 使用sp作为字体大小单位,会随着系统的字体大小改变 而dp作为单位则不会. 设置颜色的几种方式 安卓打包修改名字 关于打包的定义 定义打包名称 定义一个时间 在build.gradle.kts引入function.gradle中方法 获取所有的prov..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-27T13:03:42.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-27T13:03:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"笔记\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-27T13:03:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"安卓组件","slug":"安卓组件","link":"#安卓组件","children":[]},{"level":2,"title":"manifest详解","slug":"manifest详解","link":"#manifest详解","children":[]},{"level":2,"title":"关于字体大小","slug":"关于字体大小","link":"#关于字体大小","children":[]},{"level":2,"title":"设置颜色的几种方式","slug":"设置颜色的几种方式","link":"#设置颜色的几种方式","children":[]},{"level":2,"title":"安卓打包修改名字","slug":"安卓打包修改名字","link":"#安卓打包修改名字","children":[{"level":3,"title":"关于打包的定义","slug":"关于打包的定义","link":"#关于打包的定义","children":[]},{"level":3,"title":"定义打包名称","slug":"定义打包名称","link":"#定义打包名称","children":[]},{"level":3,"title":"定义一个时间","slug":"定义一个时间","link":"#定义一个时间","children":[]}]},{"level":2,"title":"在build.gradle.kts引入function.gradle中方法","slug":"在build-gradle-kts引入function-gradle中方法","link":"#在build-gradle-kts引入function-gradle中方法","children":[]},{"level":2,"title":"获取所有的provider","slug":"获取所有的provider","link":"#获取所有的provider","children":[]},{"level":2,"title":"provider冲突解决办法","slug":"provider冲突解决办法","link":"#provider冲突解决办法","children":[{"level":3,"title":"使用fragmentutils","slug":"使用fragmentutils","link":"#使用fragmentutils","children":[]}]},{"level":2,"title":"kotlin获取appllication实例","slug":"kotlin获取appllication实例","link":"#kotlin获取appllication实例","children":[]}],"git":{"createdTime":1684738995000,"updatedTime":1711544622000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":3,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":2.16,"words":648},"filePathRelative":"android-tips/note.md","localizedDate":"2023年5月22日","autoDesc":true}');export{i as comp,u as data};
