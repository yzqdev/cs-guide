import{_ as n,c as e,a as p,o as a}from"./app-C8DxhDIZ.js";const s={};function i(o,t){return a(),e("div",null,t[0]||(t[0]=[p(`<h1 id="python环境准备" tabindex="-1"><a class="header-anchor" href="#python环境准备"><span>python环境准备</span></a></h1><h2 id="安装python" tabindex="-1"><a class="header-anchor" href="#安装python"><span>安装python</span></a></h2><p>在<a href="https://www.python.org/" target="_blank" rel="noopener noreferrer">python.org</a>下载python安装包并安装,注意要把环境变量选中,这样系统就有python命令</p><h2 id="pip创建项目venv方法" tabindex="-1"><a class="header-anchor" href="#pip创建项目venv方法"><span>pip创建项目venv方法</span></a></h2><p><a href="https://docs.python.org/zh-cn/3/library/venv.html" target="_blank" rel="noopener noreferrer">https://docs.python.org/zh-cn/3/library/venv.html</a></p><div class="language-txt" data-highlighter="prismjs" data-ext="txt" data-title="txt"><pre><code><span class="line">cd e:/py-proj</span>
<span class="line"></span>
<span class="line">mkdir spider_projs</span>
<span class="line">#进入这个目录</span>
<span class="line">cd spider_projs</span>
<span class="line"># 然后创建虚拟环境,目录是.venv</span>
<span class="line">python -m venv .venv</span>
<span class="line">#然后激活环境,这一步很重要,它是把.venv中的path加入到环境变量去</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>激活命令如下:</p><table><thead><tr><th>平台</th><th>Shell</th><th>用于激活虚拟环境的命令</th></tr></thead><tbody><tr><td>POSIX</td><td>bash/zsh</td><td><code>$ source *&lt;venv&gt;*/bin/activate</code></td></tr><tr><td>fish</td><td><code>$ source *&lt;venv&gt;*/bin/activate.fish</code></td><td></td></tr><tr><td>csh/tcsh</td><td><code>$ source *&lt;venv&gt;*/bin/activate.csh</code></td><td></td></tr><tr><td>PowerShell</td><td><code>$ *&lt;venv&gt;*/bin/Activate.ps1</code></td><td></td></tr><tr><td>Windows</td><td>cmd.exe</td><td><code>C:\\&gt; *&lt;venv&gt;*\\Scripts\\activate.bat</code></td></tr><tr><td>PowerShell</td><td><code>PS C:\\&gt; *&lt;venv&gt;*\\Scripts\\Activate.ps1</code></td><td></td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">提示</p><p>必须在环境激活的情况下安装依赖<code>pip install requests</code>,没激活的话会安装在python的全局<code>site-packages</code>目录!!!</p><div class="language-txt" data-highlighter="prismjs" data-ext="txt" data-title="txt"><pre><code><span class="line">#生成依赖</span>
<span class="line">pip freeze &gt; requirements.txt</span>
<span class="line"></span>
<span class="line"># 安装依赖</span>
<span class="line"></span>
<span class="line">pip install -r requirements.txt</span>
<span class="line"></span>
<span class="line"></span></code></pre></div></div><h2 id="安装-pipx" tabindex="-1"><a class="header-anchor" href="#安装-pipx"><span>安装 pipx</span></a></h2><p>pipx可以吧全局安装的cli工具存在用户目录,做到环境隔离</p><p>通常来说安装全局命令行工具可以用<code>pip install httpie</code>这种方法,但是pip既可以安装cli也可以安装依赖,这样容易混淆</p><h3 id="pipx安装本地的cli项目" tabindex="-1"><a class="header-anchor" href="#pipx安装本地的cli项目"><span>pipx安装本地的cli项目</span></a></h3><p><a href="https://github.com/pypa/pipx/issues/6" target="_blank" rel="noopener noreferrer">https://github.com/pypa/pipx/issues/6</a></p><h2 id="安装poetry" tabindex="-1"><a class="header-anchor" href="#安装poetry"><span>安装poetry</span></a></h2><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">pipx <span class="token function">install</span> poetry</span>
<span class="line"></span></code></pre></div><p>poetry<strong>不</strong>会使用用户定义的pip.ini里面的镜像,所以要设置url</p><div class="language-toml" data-highlighter="prismjs" data-ext="toml" data-title="toml"><pre><code><span class="line"><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">tool.poetry.source</span><span class="token punctuation">]</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;tsinghua&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token key property">url</span> <span class="token punctuation">=</span> <span class="token string">&quot;https://pypi.tuna.tsinghua.edu.cn/simple&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token key property">priority</span> <span class="token punctuation">=</span> <span class="token string">&quot;default&quot;</span></span>
<span class="line"></span></code></pre></div><p>配置环境变量 <a href="https://python-poetry.org/docs/configuration/" target="_blank" rel="noopener noreferrer">https://python-poetry.org/docs/configuration/</a></p><p>配置在项目目录生成.venv文件夹: <code>poetry config virtualenvs.in-project true</code>,或者设置环境变量<code>POETRY_VIRTUALENVS_IN_PROJECT</code>为true (用户环境变量重启后生效)</p><p>配置环境名称<code>poetry config virtualenvs.prompt &quot;{project_name}&quot;</code></p><p>poetry缓存路径<code>C:\\Users\\{username}\\AppData\\Local\\pypoetry</code></p><h2 id="安装pipenv" tabindex="-1"><a class="header-anchor" href="#安装pipenv"><span>安装pipenv</span></a></h2><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">pipx <span class="token function">install</span> pipenv</span>
<span class="line"></span>
<span class="line">pip <span class="token function">install</span> pipenv</span>
<span class="line"></span></code></pre></div><p>export PIPENV_VENV_IN_PROJECT=1 设置这个环境变量，pipenv会在当前目录下创建.venv的目录，以后都会把模块装到这个.venv下</p><p>pipenv 缓存路径<code>C:\\Users\\{username}\\AppData\\Local\\pipenv</code></p>`,26)]))}const r=n(s,[["render",i]]),c=JSON.parse('{"path":"/python-tutor/python-tips/install-python-environment.html","title":"python环境准备","lang":"zh-CN","frontmatter":{"description":"python环境准备 安装python 在python.org下载python安装包并安装,注意要把环境变量选中,这样系统就有python命令 pip创建项目venv方法 https://docs.python.org/zh-cn/3/library/venv.html 激活命令如下: 提示 必须在环境激活的情况下安装依赖pip install req...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/python-tutor/python-tips/install-python-environment.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"python环境准备"}],["meta",{"property":"og:description","content":"python环境准备 安装python 在python.org下载python安装包并安装,注意要把环境变量选中,这样系统就有python命令 pip创建项目venv方法 https://docs.python.org/zh-cn/3/library/venv.html 激活命令如下: 提示 必须在环境激活的情况下安装依赖pip install req..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-11T12:26:49.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-11T12:26:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"python环境准备\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-11T12:26:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"安装python","slug":"安装python","link":"#安装python","children":[]},{"level":2,"title":"pip创建项目venv方法","slug":"pip创建项目venv方法","link":"#pip创建项目venv方法","children":[]},{"level":2,"title":"安装 pipx","slug":"安装-pipx","link":"#安装-pipx","children":[{"level":3,"title":"pipx安装本地的cli项目","slug":"pipx安装本地的cli项目","link":"#pipx安装本地的cli项目","children":[]}]},{"level":2,"title":"安装poetry","slug":"安装poetry","link":"#安装poetry","children":[]},{"level":2,"title":"安装pipenv","slug":"安装pipenv","link":"#安装pipenv","children":[]}],"git":{"createdTime":1695234758000,"updatedTime":1723379209000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":3,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":1.53,"words":459},"filePathRelative":"python-tutor/python-tips/install-python-environment.md","localizedDate":"2023年9月20日","autoDesc":true}');export{r as comp,c as data};
