import{_ as s,c as a,a as p,o as t}from"./app-C8DxhDIZ.js";const e={};function o(c,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="sanic框架" tabindex="-1"><a class="header-anchor" href="#sanic框架"><span>sanic框架</span></a></h1><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">  </span>
<span class="line"><span class="token keyword">from</span> colorama <span class="token keyword">import</span> Back<span class="token punctuation">,</span> Fore  </span>
<span class="line"><span class="token keyword">from</span> sanic <span class="token keyword">import</span> Sanic  </span>
<span class="line"><span class="token keyword">from</span> sanic<span class="token punctuation">.</span>response <span class="token keyword">import</span> json<span class="token punctuation">,</span> text  </span>
<span class="line">  </span>
<span class="line"><span class="token keyword">from</span> sanic_api<span class="token punctuation">.</span>cat_api <span class="token keyword">import</span> bp  </span>
<span class="line">  </span>
<span class="line">app <span class="token operator">=</span> Sanic<span class="token punctuation">(</span><span class="token string">&quot;MyHelloWorldApp&quot;</span><span class="token punctuation">)</span>  </span>
<span class="line">app<span class="token punctuation">.</span>blueprint<span class="token punctuation">(</span>bp<span class="token punctuation">)</span>  </span>
<span class="line">swagger_ui_configuration <span class="token operator">=</span> <span class="token punctuation">{</span>  </span>
<span class="line">        <span class="token string">&quot;validatorUrl&quot;</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span>  <span class="token comment"># Disable Swagger validator  </span></span>
<span class="line">        <span class="token string">&quot;displayRequestDuration&quot;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>  </span>
<span class="line">        <span class="token string">&quot;docExpansion&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">,</span>  <span class="token comment"># 或者full  </span></span>
<span class="line">  </span>
<span class="line">    <span class="token punctuation">}</span>  </span>
<span class="line">app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>SWAGGER_UI_CONFIGURATION <span class="token operator">=</span> swagger_ui_configuration  </span>
<span class="line">app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>OAS_UI_DEFAULT<span class="token operator">=</span><span class="token string">&quot;swagger&quot;</span>  </span>
<span class="line"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>  </span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">hello_world</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>  </span>
<span class="line">    <span class="token keyword">return</span> text<span class="token punctuation">(</span><span class="token string">&quot;Hello, world.&quot;</span><span class="token punctuation">)</span>  </span>
<span class="line">  </span>
<span class="line">  </span>
<span class="line"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/json&quot;</span><span class="token punctuation">)</span>  </span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">get_json</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>  </span>
<span class="line">    <span class="token keyword">return</span> json<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;清清楚楚&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;data&quot;</span><span class="token punctuation">:</span> request<span class="token punctuation">.</span>args<span class="token punctuation">}</span><span class="token punctuation">)</span>  </span>
<span class="line">  </span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">handler</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>  </span>
<span class="line">    <span class="token keyword">return</span> text<span class="token punctuation">(</span><span class="token string">&quot;OK&quot;</span><span class="token punctuation">)</span>  </span>
<span class="line">  </span>
<span class="line">  </span>
<span class="line">app<span class="token punctuation">.</span>add_route<span class="token punctuation">(</span>handler<span class="token punctuation">,</span> <span class="token string">&quot;/test&quot;</span><span class="token punctuation">)</span>  </span>
<span class="line">  </span>
<span class="line"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>  </span>
<span class="line">    port <span class="token operator">=</span> <span class="token number">9200</span>  </span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>Fore<span class="token punctuation">.</span>RED<span class="token punctuation">}</span></span><span class="token string">http://localhost:</span><span class="token interpolation"><span class="token punctuation">{</span>port<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  </span>
<span class="line">    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">&quot;0.0.0.0&quot;</span><span class="token punctuation">,</span> port<span class="token operator">=</span>port<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建定时任务" tabindex="-1"><a class="header-anchor" href="#创建定时任务"><span>创建定时任务</span></a></h2><div class="language-python" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">generate_code</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Server successfully started!&quot;</span><span class="token punctuation">)</span></span>
<span class="line"> </span>
<span class="line">app<span class="token punctuation">.</span>add_task<span class="token punctuation">(</span>generate_code<span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div>`,4)]))}const i=s(e,[["render",o]]),u=JSON.parse('{"path":"/python-tutor/web-framework/sanic.html","title":"sanic框架","lang":"zh-CN","frontmatter":{"description":"sanic框架 创建定时任务","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/python-tutor/web-framework/sanic.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"sanic框架"}],["meta",{"property":"og:description","content":"sanic框架 创建定时任务"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-20T18:32:38.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-20T18:32:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"sanic框架\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-20T18:32:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"创建定时任务","slug":"创建定时任务","link":"#创建定时任务","children":[]}],"git":{"createdTime":1674222982000,"updatedTime":1695234758000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":3,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":0.4,"words":120},"filePathRelative":"python-tutor/web-framework/sanic.md","localizedDate":"2023年1月20日","autoDesc":true}');export{i as comp,u as data};
