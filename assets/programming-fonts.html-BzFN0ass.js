import{_ as o,c as t,a,o as r}from"./app-C8DxhDIZ.js";const n={};function i(s,e){return r(),t("div",null,e[0]||(e[0]=[a('<h1 id="编程字体推荐" tabindex="-1"><a class="header-anchor" href="#编程字体推荐"><span>编程字体推荐</span></a></h1><h2 id="自用的字体" tabindex="-1"><a class="header-anchor" href="#自用的字体"><span>自用的字体</span></a></h2><p>&quot;Microsoft YaHei Mono&quot;和<strong>Jetbrains Mono</strong></p><h2 id="推荐的字体" tabindex="-1"><a class="header-anchor" href="#推荐的字体"><span>推荐的字体</span></a></h2><ul><li>Cascadia Code 微软出品的字体</li><li>Fira Code 火狐出品的字体</li><li><a href="https://www.iplaysoft.com/source-code-pro-font.html" target="_blank" rel="noopener noreferrer">Source Code Pro</a></li><li><a href="https://www.iplaysoft.com/mononoki.html" target="_blank" rel="noopener noreferrer">Mononoki</a></li><li><a href="https://www.iplaysoft.com/consolas.html" target="_blank" rel="noopener noreferrer">Consolas</a></li><li>Monaco 苹果电脑默认字体 ​</li></ul><p>注意 <code>Microsoft Yahei Mono</code>和<code>Yahei Mono</code>不是同一个字体,用前一个就好了 一般有图形设置界面的编辑器里可以很方便地将字体设置为 Cascadia，而如果编辑器需要用配置文件设置的话，在 Font / Font Family 等项里设置字体名称为<code>Cascadia Code</code> 即可。 多个单词的字体名要加双引号如下 <code>&quot;Cascadia Code&quot;,&quot;Microsoft YaHei Mono&quot;, Consolas,Source Code Pro, monospace</code> ​</p><p>​</p><h2 id="音乐源地址" tabindex="-1"><a class="header-anchor" href="#音乐源地址"><span>音乐源地址</span></a></h2><h3 id="api" tabindex="-1"><a class="header-anchor" href="#api"><span>api</span></a></h3><p>我们知道网易云音乐上的一首歌 ID，如何获取它的 MP3 源地址呢？其实网易云音提供了转换的地址： <code>http://music.163.com/song/media/outer/url?id=**ID数字**.mp3</code> 把上面红色部分ID数字换成网易云播放页面的即可，举个例子： 朴树的「平凡之路」，这首歌的地址是： <code>https://music.163.com/#/song?id=29750099</code> 这首歌的 ID 是：29750099，那么它的 MP3 地址是： <code>https://music.163.com/song/media/outer/url?id=29750099.mp3</code></p><h2 id="电子书格式" tabindex="-1"><a class="header-anchor" href="#电子书格式"><span>电子书格式</span></a></h2><h3 id="常见格式" tabindex="-1"><a class="header-anchor" href="#常见格式"><span>常见格式</span></a></h3><p>txt 纯文本，不解释 优点：体积小，适用于绝大多数设备 缺点：不支持分章节、不支持图片、不支持封面、不支持超链接——它就是个纯文本</p><p>chm 这个东西最早是微软拿来做软件的帮助文档的吧……然后就被拿来做电子书了 优点：相对txt，可以分章节和加超链接 缺点：相对之后的其他电子书格式，体积较大；只是相对txt增加了分章节和超链接功能，依旧不支持很多东西；软件和设备支持差</p><p>pdf 开放的移动文档标准(Portable Document Format)，Adobe开发，适合用于复杂排版的电子刊物，创建和排版的软件专业度和功能性都很强。 优点：提供最好的排版效果、从创建到浏览都有一大批软硬件提供支持 缺点：在小屏上体验不佳，需要频繁缩放拖动（保证文档高还原度的代偿）</p><p>epub 排版基于HTML技术，能提供接近pdf的功能，图文混排功能和对格式的控制不如pdf强大 优点：体积相对pdf要小；对阅读设备的性能要求较低；对小屏设备友好 缺点：无明显缺点</p><p>mobi 根据我的使用经验，mobi跟epub表现无限接近，主要推手是Amazon，两种格式可以傻瓜式互转</p><p>关于mobi和epub的具体优劣：</p><p>epub格式对于复杂的排版，图表，公式等元素的兼容性比mobi格式好很多，在脚本，公式，矢量图形的支持方面也强过mobi格式，现阶段epub格式的优势体现在图文混排、图片嵌入字体等，未来可预测的优势是epub格式对于声音，影像等多媒体内容互动的支持上。</p><p>epub 格式是开放标准，所以在开发工具上也会有更大的选择，像Sigil、Calibre、Jutoh等软件都可以让用户自助制作epub格式电子书，但因为良莠不齐的制作也导致一个问题：大量的epub文件其实是不符合标准，无法保证在所有支持epub的硬件和软件上都可以顺利阅读，这就和iOS系统和 Android系统的区别有些相似。</p><p><strong>无脑选epub就好</strong></p><h3 id="阅读器软件" tabindex="-1"><a class="header-anchor" href="#阅读器软件"><span>阅读器软件</span></a></h3><p>Calibre <a href="https://www.neat-reader.cn/" target="_blank" rel="noopener noreferrer">neatreader</a><a href="https://github.com/troyeguo/koodo-reader" target="_blank" rel="noopener noreferrer">https://github.com/troyeguo/koodo-reader</a></p>',23)]))}const d=o(n,[["render",i]]),l=JSON.parse('{"path":"/windows-tutor/others/programming-fonts.html","title":"编程字体推荐","lang":"zh-CN","frontmatter":{"description":"编程字体推荐 自用的字体 \\"Microsoft YaHei Mono\\"和Jetbrains Mono 推荐的字体 Cascadia Code 微软出品的字体 Fira Code 火狐出品的字体 Source Code Pro Mononoki Consolas Monaco 苹果电脑默认字体 ​ 注意 Microsoft Yahei Mono和Yahe...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/windows-tutor/others/programming-fonts.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"编程字体推荐"}],["meta",{"property":"og:description","content":"编程字体推荐 自用的字体 \\"Microsoft YaHei Mono\\"和Jetbrains Mono 推荐的字体 Cascadia Code 微软出品的字体 Fira Code 火狐出品的字体 Source Code Pro Mononoki Consolas Monaco 苹果电脑默认字体 ​ 注意 Microsoft Yahei Mono和Yahe..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-26T03:09:46.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-26T03:09:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"编程字体推荐\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-26T03:09:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"自用的字体","slug":"自用的字体","link":"#自用的字体","children":[]},{"level":2,"title":"推荐的字体","slug":"推荐的字体","link":"#推荐的字体","children":[]},{"level":2,"title":"音乐源地址","slug":"音乐源地址","link":"#音乐源地址","children":[{"level":3,"title":"api","slug":"api","link":"#api","children":[]}]},{"level":2,"title":"电子书格式","slug":"电子书格式","link":"#电子书格式","children":[{"level":3,"title":"常见格式","slug":"常见格式","link":"#常见格式","children":[]},{"level":3,"title":"阅读器软件","slug":"阅读器软件","link":"#阅读器软件","children":[]}]}],"git":{"createdTime":1649659998000,"updatedTime":1677380986000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":2,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":3.04,"words":913},"filePathRelative":"windows-tutor/others/programming-fonts.md","localizedDate":"2022年4月11日","autoDesc":true}');export{d as comp,l as data};
