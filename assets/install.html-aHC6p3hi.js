import{_ as a,c as e,a as n,o as p}from"./app-C8DxhDIZ.js";const o="/cs-guide/assets/e45e9ccc918e320e0e1ebb7bd2812f1a-DnfAa8hF.webp",t="/cs-guide/assets/858b1e66515f2298bb22e06ffa9e9792-BPUwIWsh.webp",l="/cs-guide/assets/ee94b4fd0c05615d3334ec2ce871674f-JOw3Ktqe.webp",c="/cs-guide/assets/29b1af3c6254f9a55cf329df451e1f8b-BtUxWGeF.webp",r="/cs-guide/assets/57f68a38a70e1a78e275b6539a7cd275-CZ4O1dG7.webp",i="/cs-guide/assets/d821ab74baabee3c91e560e00efea0de-CRw2ybH0.webp",d="/cs-guide/assets/48b26e190568574b2de2d23186adc5be-DqrHBUtx.webp",h="/cs-guide/assets/1b06187ef93ca1fc5cdb5836ce753656-Cu6gWT9P.webp",m="/cs-guide/assets/phpstorm-run-tuOQTVxR.png",g={};function u(b,s){return p(),e("div",null,s[0]||(s[0]=[n('<h1 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建"><span>环境搭建</span></a></h1><h2 id="安装php" tabindex="-1"><a class="header-anchor" href="#安装php"><span>安装php</span></a></h2><p>windows版本php下载: <a href="https://windows.php.net/download" target="_blank" rel="noopener noreferrer">https://windows.php.net/download</a><br> xdebug下载: <a href="https://xdebug.org/" target="_blank" rel="noopener noreferrer">https://xdebug.org/</a> 把php的压缩包解压后放在<code>c:\\php</code>文件夹</p><h2 id="安装composer" tabindex="-1"><a class="header-anchor" href="#安装composer"><span>安装composer</span></a></h2><p>如果出现如下错误，说明伟大的防火墙阻止了你获取存在国外服务器的文件，需要手动下载一下</p><p><img src="'+o+'" alt="88108dda7f29ef40596f219db284a09e"></p><h3 id="第一步-添加php-exe到环境变量" tabindex="-1"><a class="header-anchor" href="#第一步-添加php-exe到环境变量"><span>第一步：添加php.exe到环境变量</span></a></h3><p>方法：计算机--&gt;右键--&gt;属性--&gt;高级系统设置--&gt;环境变量（这一步相信大家都是妥妥的）</p><p><img src="'+t+'" alt="ba47a64eb2ac2b217a522b27fd644eb9"></p><p>复制php.exe的路径，粘贴到path环境变量中（注意前面有一个分号;），图片如下：</p><p><img src="'+l+'" alt="c1fc192727d2dd7b13bc7ea29a524a56"></p><blockquote><p><strong>php -v</strong> 执行成功会返回版本信息，这里是PHP 7.0.12</p></blockquote><p><img src="'+c+'" alt="8692dcabbeb60afe006c2699e2429480"></p><h3 id="第二步-开启openssl扩展" tabindex="-1"><a class="header-anchor" href="#第二步-开启openssl扩展"><span>第二步：开启openssl扩展</span></a></h3><p>方法：在PHP目录下，打开<strong>php.ini</strong>文件，去掉<strong>extension=php_openssl.dll</strong>前面的分号(<strong>;</strong>)</p><p><img src="'+r+`" alt="7dadd699abb3a4d03f0a1b6235c4316b"></p><h3 id="第三-下载composer-phar并放到php目录下-在php目录下新建composer-cmd-内容为" tabindex="-1"><a class="header-anchor" href="#第三-下载composer-phar并放到php目录下-在php目录下新建composer-cmd-内容为"><span>第三：下载<a href="https://link.jianshu.com?t=https://getcomposer.org/composer.phar" target="_blank" rel="noopener noreferrer">composer.phar</a>并放到PHP目录下，在PHP目录下新建<code>composer.cmd</code>， 内容为</span></a></h3><div class="language-powershell" data-highlighter="prismjs" data-ext="powershell" data-title="powershell"><pre><code><span class="line">@php <span class="token string">&quot;%~dp0composer.phar&quot;</span> <span class="token operator">%</span><span class="token operator">*</span></span>
<span class="line"></span></code></pre></div><p><img src="`+i+'" alt="851b81a56ab9d052a8a5481bacc7b328"></p><p>保存后，**运行这个文件，**打开cmd，输入 <code>composer -V</code> 查看是否成功</p><p><img src="'+d+`" alt="d33d95cb0f6a9aa1f3eb2c826f03f622"></p><h4 id="第四-更改-packagist-为国内镜像" tabindex="-1"><a class="header-anchor" href="#第四-更改-packagist-为国内镜像"><span>第四：更改 Packagist 为国内镜像</span></a></h4><div class="language-powershell" data-highlighter="prismjs" data-ext="powershell" data-title="powershell"><pre><code><span class="line">composer config <span class="token operator">-</span>g repo<span class="token punctuation">.</span>packagist composer  https:<span class="token operator">/</span><span class="token operator">/</span>packagist<span class="token punctuation">.</span>phpcomposer<span class="token punctuation">.</span>com </span>
<span class="line"></span>
<span class="line">阿里</span>
<span class="line">composer config <span class="token operator">-</span>g repo<span class="token punctuation">.</span>packagist composer https:<span class="token operator">/</span><span class="token operator">/</span>mirrors<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>com/composer/</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">退回原镜像</span>
<span class="line">composer config <span class="token operator">-</span>g <span class="token operator">--</span>unset repos<span class="token punctuation">.</span>packagist</span>
<span class="line"></span></code></pre></div><p><img src="`+h+`" alt="50c60854f9c07f15eb6cfbdb89fb7cd4"></p><h2 id="composer运行出现问题" tabindex="-1"><a class="header-anchor" href="#composer运行出现问题"><span>composer运行出现问题</span></a></h2><ol><li>建议先将Composer版本升级到最新：</li></ol><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">composer</span> self-update</span>
<span class="line"></span></code></pre></div><ol start="2"><li>执行诊断命令：</li></ol><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">composer</span> diagnose</span>
<span class="line"></span></code></pre></div><ol start="3"><li>清除缓存：</li></ol><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">composer</span> <span class="token function">clear</span></span>
<span class="line"></span></code></pre></div><ol start="4"><li>若项目之前已通过其他源安装，则需要更新 composer.lock 文件，执行命令：</li></ol><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">composer</span> update <span class="token parameter variable">--lock</span></span>
<span class="line"></span></code></pre></div><h2 id="composer管理依赖" tabindex="-1"><a class="header-anchor" href="#composer管理依赖"><span>composer管理依赖</span></a></h2><p>要使用 Composer，我们需要先在项目的目录下创建一个 composer.json 文件，文件描述了项目的依赖关系</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;require&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;monolog/monolog&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.2.*&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h3 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖"><span>安装依赖</span></a></h3><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">composer</span> <span class="token function">install</span></span>
<span class="line"></span></code></pre></div><h3 id="指定安装依赖" tabindex="-1"><a class="header-anchor" href="#指定安装依赖"><span>指定安装依赖</span></a></h3><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"> <span class="token function">composer</span> require monolog/monolog</span>
<span class="line"></span></code></pre></div><h3 id="更新依赖" tabindex="-1"><a class="header-anchor" href="#更新依赖"><span>更新依赖</span></a></h3><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 更新所有依赖</span></span>
<span class="line"><span class="token function">composer</span> update</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 更新指定的包</span></span>
<span class="line"><span class="token function">composer</span> update monolog/monolog</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 更新指定的多个包</span></span>
<span class="line"><span class="token function">composer</span> update monolog/monolog symfony/dependency-injection</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 还可以通过通配符匹配包</span></span>
<span class="line"><span class="token function">composer</span> update monolog/monolog symfony/*</span>
<span class="line"></span></code></pre></div><h3 id="移除依赖" tabindex="-1"><a class="header-anchor" href="#移除依赖"><span>移除依赖</span></a></h3><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"></span>
<span class="line"><span class="token function">composer</span> remove monolog/monolog</span>
<span class="line"></span></code></pre></div><h2 id="phpstorm运行项目" tabindex="-1"><a class="header-anchor" href="#phpstorm运行项目"><span>phpstorm运行项目</span></a></h2><p>配置好php环境,然后,选择<code>php build in web server</code>:<br><img src="`+m+`" alt="run"></p><p>使用命令行运行</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 其中php-tutor是文件夹名称</span></span>
<span class="line">php.exe <span class="token parameter variable">-S</span> localhost:82 <span class="token parameter variable">-t</span>  php-tutor</span>
<span class="line"></span>
<span class="line"></span></code></pre></div>`,48)]))}const f=a(g,[["render",u]]),v=JSON.parse('{"path":"/go-tutor/php-tutor/install.html","title":"环境搭建","lang":"zh-CN","frontmatter":{"description":"环境搭建 安装php windows版本php下载: https://windows.php.net/download xdebug下载: https://xdebug.org/ 把php的压缩包解压后放在c:\\\\php文件夹 安装composer 如果出现如下错误，说明伟大的防火墙阻止了你获取存在国外服务器的文件，需要手动下载一下 88108dda7f...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/go-tutor/php-tutor/install.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"环境搭建"}],["meta",{"property":"og:description","content":"环境搭建 安装php windows版本php下载: https://windows.php.net/download xdebug下载: https://xdebug.org/ 把php的压缩包解压后放在c:\\\\php文件夹 安装composer 如果出现如下错误，说明伟大的防火墙阻止了你获取存在国外服务器的文件，需要手动下载一下 88108dda7f..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-20T18:32:38.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-20T18:32:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"环境搭建\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-20T18:32:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"安装php","slug":"安装php","link":"#安装php","children":[]},{"level":2,"title":"安装composer","slug":"安装composer","link":"#安装composer","children":[{"level":3,"title":"第一步：添加php.exe到环境变量","slug":"第一步-添加php-exe到环境变量","link":"#第一步-添加php-exe到环境变量","children":[]},{"level":3,"title":"第二步：开启openssl扩展","slug":"第二步-开启openssl扩展","link":"#第二步-开启openssl扩展","children":[]},{"level":3,"title":"第三：下载composer.phar并放到PHP目录下，在PHP目录下新建composer.cmd， 内容为","slug":"第三-下载composer-phar并放到php目录下-在php目录下新建composer-cmd-内容为","link":"#第三-下载composer-phar并放到php目录下-在php目录下新建composer-cmd-内容为","children":[{"level":4,"title":"第四：更改 Packagist 为国内镜像","slug":"第四-更改-packagist-为国内镜像","link":"#第四-更改-packagist-为国内镜像","children":[]}]}]},{"level":2,"title":"composer运行出现问题","slug":"composer运行出现问题","link":"#composer运行出现问题","children":[]},{"level":2,"title":"composer管理依赖","slug":"composer管理依赖","link":"#composer管理依赖","children":[{"level":3,"title":"安装依赖","slug":"安装依赖","link":"#安装依赖","children":[]},{"level":3,"title":"指定安装依赖","slug":"指定安装依赖","link":"#指定安装依赖","children":[]},{"level":3,"title":"更新依赖","slug":"更新依赖","link":"#更新依赖","children":[]},{"level":3,"title":"移除依赖","slug":"移除依赖","link":"#移除依赖","children":[]}]},{"level":2,"title":"phpstorm运行项目","slug":"phpstorm运行项目","link":"#phpstorm运行项目","children":[]}],"git":{"createdTime":1653497324000,"updatedTime":1695234758000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":3,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":1.82,"words":545},"filePathRelative":"go-tutor/php-tutor/install.md","localizedDate":"2022年5月25日","autoDesc":true}');export{f as comp,v as data};
