import{_ as s,c as a,a as t,o as e}from"./app-C8DxhDIZ.js";const p="/cs-guide/assets/jstype-DZVHFD9S.png",o={};function c(l,n){return e(),a("div",null,n[0]||(n[0]=[t(`<h1 id="go内嵌资源" tabindex="-1"><a class="header-anchor" href="#go内嵌资源"><span>go内嵌资源</span></a></h1><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果出现</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Failed to load module script: Expected a JavaScript module script but the server responded with a MIME type of &quot;text/html&quot;. Strict MIME type checking is enforced for module scripts per HTML spec.</span>
<span class="line"></span></code></pre></div><p>则需要在注册表里面把关联给改掉 <code>HKEY_CLASSES_ROOT\\.js</code></p><p><img src="`+p+`" alt="res"></p></div><h2 id="embed-的基本用法" tabindex="-1"><a class="header-anchor" href="#embed-的基本用法"><span>embed 的基本用法</span></a></h2><p>Go embed的使用非常简单，通过//go:embed指令即可，下面我通过一个例子说明：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">   <span class="token string">&quot;embed&quot;</span></span>
<span class="line">   <span class="token string">&quot;fmt&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">//go:embed fire</span></span>
<span class="line"><span class="token keyword">var</span> s <span class="token builtin">string</span></span>
<span class="line"><span class="token comment">//go:embed fire</span></span>
<span class="line"><span class="token keyword">var</span> b <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span></span>
<span class="line"><span class="token comment">//go:embed templates</span></span>
<span class="line"><span class="token keyword">var</span> fs embed<span class="token punctuation">.</span>FS</span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">   fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span></span>
<span class="line">   fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">   data<span class="token punctuation">,</span> err <span class="token operator">:=</span> fs<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span><span class="token string">&quot;templates/index.tmpl&quot;</span><span class="token punctuation">)</span></span>
<span class="line">   fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span><span class="token function">string</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上代码中，主要是通过<code>//go:embed</code>指令达到读取文件内容的目的。<code>//go:embed</code>指令后可以是一个文件，也可以是多个文件（空格隔开即可），也可以是一个目录。 其中<code>string</code>和<code>[]byte</code>类型都只能匹配一个文件，如果要匹配多个文件或者一个目录，就要使用<code>embed.FS</code>类型。</p><h2 id="embed-在http-web中的使用" tabindex="-1"><a class="header-anchor" href="#embed-在http-web中的使用"><span>embed 在http web中的使用</span></a></h2><p>看到embed这个功能，你首先想到的应该是把以前开发Web应用时使用的静态文件、模板文件打包进应用程序中，所以接下来就来看下embed如何在http web中使用。</p><p>下面先来看一个使用http托管静态文件的示例</p><div class="language-go" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">   <span class="token string">&quot;embed&quot;</span></span>
<span class="line">   <span class="token string">&quot;net/http&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">//go:embed static</span></span>
<span class="line"><span class="token keyword">var</span> static embed<span class="token punctuation">.</span>FS</span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">   http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span><span class="token function">FileServer</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span><span class="token function">FS</span><span class="token punctuation">(</span>static<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>看到了吧就是这么简单，就是这么魔幻，几行代码就实现了静态文件的Web托管，并且可以结合<code>embed</code>特性把静态<code>static</code>目录里的内容全部打包到生成的应用程序中，部署非常方便。 以上代码的核心除了<code>//go:embed</code>指令外，还有通过<code>http.FS</code>这个函数，把<code>embed.FS</code>类型的<code>static</code>转换为<code>http.FileServer</code>函数可以识别的<code>http.FileSystem</code>类型。</p><h2 id="embed-在模板中的应用" tabindex="-1"><a class="header-anchor" href="#embed-在模板中的应用"><span>embed 在模板中的应用</span></a></h2><p>在Go Web的开发中，除了静态文件外，还有Go Template，可以更好的帮助我们渲染Web网页。下面来下看<code>embed</code>是如何被Go 模板使用的。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">   <span class="token string">&quot;embed&quot;</span></span>
<span class="line">   <span class="token string">&quot;html/template&quot;</span></span>
<span class="line">   <span class="token string">&quot;net/http&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">//go:embed templates</span></span>
<span class="line"><span class="token keyword">var</span> tmpl embed<span class="token punctuation">.</span>FS</span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">   t<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> template<span class="token punctuation">.</span><span class="token function">ParseFS</span><span class="token punctuation">(</span>tmpl<span class="token punctuation">,</span> <span class="token string">&quot;templates/*.tmpl&quot;</span><span class="token punctuation">)</span></span>
<span class="line">   http<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>rw http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      t<span class="token punctuation">.</span><span class="token function">ExecuteTemplate</span><span class="token punctuation">(</span>rw<span class="token punctuation">,</span><span class="token string">&quot;index.tmpl&quot;</span><span class="token punctuation">,</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;Golang Embed 测试&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">   <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">   http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">,</span><span class="token boolean">nil</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从以上示例中可以看到，<code>template</code>包提供了<code>ParseFS</code>函数，可以直接从一个<code>embed.FS</code>中加载模板，然后用于<code>HTTP Web</code>中。模板文件夹的结构如下所示：</p><div class="language-go" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">templates</span>
<span class="line">└── index<span class="token punctuation">.</span>tmpl</span>
<span class="line"></span></code></pre></div><h2 id="gin静态文件服务" tabindex="-1"><a class="header-anchor" href="#gin静态文件服务"><span>Gin静态文件服务</span></a></h2><p>Gin框架中托管一个静态文件服务非常简单，使用<code>Static</code>方法即可，下面看个例子：</p><div class="language-go" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">   <span class="token string">&quot;embed&quot;</span></span>
<span class="line">   <span class="token string">&quot;github.com/gin-gonic/gin&quot;</span></span>
<span class="line">   <span class="token string">&quot;net/http&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">//go:embed static</span></span>
<span class="line"><span class="token keyword">var</span> static embed<span class="token punctuation">.</span>FS</span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">   r<span class="token operator">:=</span>gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">   r<span class="token punctuation">.</span><span class="token function">StaticFS</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span>http<span class="token punctuation">.</span><span class="token function">FS</span><span class="token punctuation">(</span>static<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">   r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>从以上示例中可以看到，在<code>Gin</code>中使用<code>embed</code>作为静态文件，也是用过<code>http.FS</code>函数转化的。</p><h2 id="gin-html-模板" tabindex="-1"><a class="header-anchor" href="#gin-html-模板"><span>Gin HTML 模板</span></a></h2><p>同样的，<code>embed</code>也可以用于Gin的HTML模板中，示例如下：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">   <span class="token string">&quot;embed&quot;</span></span>
<span class="line">   <span class="token string">&quot;github.com/gin-gonic/gin&quot;</span></span>
<span class="line">   <span class="token string">&quot;html/template&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">//go:embed templates</span></span>
<span class="line"><span class="token keyword">var</span> tmpl embed<span class="token punctuation">.</span>FS</span>
<span class="line"><span class="token comment">//go:embed static</span></span>
<span class="line"><span class="token keyword">var</span> static embed<span class="token punctuation">.</span>FS</span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">   r<span class="token operator">:=</span>gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">   t<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> template<span class="token punctuation">.</span><span class="token function">ParseFS</span><span class="token punctuation">(</span>tmpl<span class="token punctuation">,</span> <span class="token string">&quot;templates/*.tmpl&quot;</span><span class="token punctuation">)</span></span>
<span class="line">   r<span class="token punctuation">.</span><span class="token function">SetHTMLTemplate</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span></span>
<span class="line">   r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>ctx <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      ctx<span class="token punctuation">.</span><span class="token function">HTML</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token string">&quot;index.tmpl&quot;</span><span class="token punctuation">,</span>gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;Golang Embed 测试&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">   <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">   r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>和前面的模板例子一样，也是通过<code>template.ParseFS</code>函数先加载<code>embed</code>中的模板，然后通过Gin的<code>SetHTMLTemplate</code>设置后就可以使用了。</p>`,24)]))}const u=s(o,[["render",c]]),d=JSON.parse('{"path":"/go-tutor/basics/go-embed.html","title":"go内嵌资源","lang":"zh-CN","frontmatter":{"description":"go内嵌资源 提示 如果出现 则需要在注册表里面把关联给改掉 HKEY_CLASSES_ROOT\\\\.js res embed 的基本用法 Go embed的使用非常简单，通过//go:embed指令即可，下面我通过一个例子说明： 以上代码中，主要是通过//go:embed指令达到读取文件内容的目的。//go:embed指令后可以是一个文件，也可以是多个...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/go-tutor/basics/go-embed.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"go内嵌资源"}],["meta",{"property":"og:description","content":"go内嵌资源 提示 如果出现 则需要在注册表里面把关联给改掉 HKEY_CLASSES_ROOT\\\\.js res embed 的基本用法 Go embed的使用非常简单，通过//go:embed指令即可，下面我通过一个例子说明： 以上代码中，主要是通过//go:embed指令达到读取文件内容的目的。//go:embed指令后可以是一个文件，也可以是多个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-07-29T07:25:09.000Z"}],["meta",{"property":"article:modified_time","content":"2022-07-29T07:25:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"go内嵌资源\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-07-29T07:25:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"embed 的基本用法","slug":"embed-的基本用法","link":"#embed-的基本用法","children":[]},{"level":2,"title":"embed 在http web中的使用","slug":"embed-在http-web中的使用","link":"#embed-在http-web中的使用","children":[]},{"level":2,"title":"embed 在模板中的应用","slug":"embed-在模板中的应用","link":"#embed-在模板中的应用","children":[]},{"level":2,"title":"Gin静态文件服务","slug":"gin静态文件服务","link":"#gin静态文件服务","children":[]},{"level":2,"title":"Gin HTML 模板","slug":"gin-html-模板","link":"#gin-html-模板","children":[]}],"git":{"createdTime":1651940602000,"updatedTime":1659079509000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":4,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":2.7,"words":811},"filePathRelative":"go-tutor/basics/go-embed.md","localizedDate":"2022年5月7日","autoDesc":true}');export{u as comp,d as data};
