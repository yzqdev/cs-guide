import{_ as a,c as n,a as e,o as t}from"./app-C8DxhDIZ.js";const p={};function o(l,s){return t(),n("div",null,s[0]||(s[0]=[e(`<h1 id="web请求" tabindex="-1"><a class="header-anchor" href="#web请求"><span>web请求</span></a></h1><p>提交key1=value1&amp;key2=value2类型参数：</p><p>方法一：</p><div class="language-powershell" data-highlighter="prismjs" data-ext="powershell" data-title="powershell"><pre><code><span class="line"><span class="token variable">$textmod</span>=<span class="token string">&quot;key=<span class="token variable">$key</span>&amp;content=<span class="token variable">$data</span>&amp;touser=<span class="token variable">$touser</span>&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">Invoke-WebRequest</span> <span class="token operator">-</span>UseBasicParsing <span class="token variable">$url</span>  <span class="token operator">-</span>Method POST <span class="token operator">-</span>Body <span class="token variable">$textmod</span></span>
<span class="line"><span class="token function">Invoke-WebRequest</span> <span class="token operator">-</span>UseBasicParsing <span class="token variable">$url</span> <span class="token operator">-</span>ContentType <span class="token string">&#39;application/x-www-form-urlencoded;charset=UTF-8&#39;</span> <span class="token operator">-</span>Method POST <span class="token operator">-</span>Body <span class="token variable">$textmod</span>  <span class="token comment">#提交的数据中如果包含符号&amp;使用%26代替，contentType解决中文乱码问题</span></span>
<span class="line"> </span>
<span class="line"></span></code></pre></div><p>方法二：</p><div class="language-powershell" data-highlighter="prismjs" data-ext="powershell" data-title="powershell"><pre><code><span class="line"><span class="token comment">#中文和特殊符号无需特殊处理</span></span>
<span class="line"><span class="token variable">$textmod</span> = @<span class="token punctuation">{</span>key=<span class="token variable">$key</span><span class="token punctuation">;</span>content=<span class="token variable">$data</span><span class="token punctuation">;</span>touser=<span class="token variable">$touser</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token function">Invoke-WebRequest</span> <span class="token operator">-</span>UseBasicParsing <span class="token variable">$url</span> <span class="token operator">-</span>Method POST <span class="token operator">-</span>Body <span class="token variable">$textmod</span>  </span>
<span class="line"></span></code></pre></div><p>提交json类型参数，未测试</p><div class="language-powershell" data-highlighter="prismjs" data-ext="powershell" data-title="powershell"><pre><code><span class="line"><span class="token variable">$text</span> = @<span class="token punctuation">{</span></span>
<span class="line"> <span class="token string">&quot;content&quot;</span> = <span class="token variable">$data</span><span class="token punctuation">,</span></span>
<span class="line"> <span class="token string">&quot;touser&quot;</span> = <span class="token variable">$touser</span><span class="token punctuation">,</span></span>
<span class="line"> <span class="token string">&quot;sn&quot;</span> = <span class="token variable">$sn</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token punctuation">|</span> <span class="token function">ConvertTo-Json</span></span>
<span class="line"></span>
<span class="line"><span class="token function">Invoke-WebRequest</span> <span class="token operator">-</span>UseBasicParsing <span class="token variable">$url</span> <span class="token operator">-</span>ContentType <span class="token string">&quot;application/json&quot;</span> <span class="token operator">-</span>Method POST <span class="token operator">-</span>Body <span class="token variable">$text</span></span>
<span class="line"></span></code></pre></div>`,8)]))}const r=a(p,[["render",o]]),i=JSON.parse('{"path":"/windows-tutor/powershell/basics/web-request.html","title":"web请求","lang":"zh-CN","frontmatter":{"description":"web请求 提交key1=value1&key2=value2类型参数： 方法一： 方法二： 提交json类型参数，未测试","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/windows-tutor/powershell/basics/web-request.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"web请求"}],["meta",{"property":"og:description","content":"web请求 提交key1=value1&key2=value2类型参数： 方法一： 方法二： 提交json类型参数，未测试"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-07-31T13:53:29.000Z"}],["meta",{"property":"article:modified_time","content":"2022-07-31T13:53:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"web请求\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-07-31T13:53:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[],"git":{"createdTime":1658584315000,"updatedTime":1659275609000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":2,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":0.46,"words":138},"filePathRelative":"windows-tutor/powershell/basics/web-request.md","localizedDate":"2022年7月23日","autoDesc":true}');export{r as comp,i as data};
