import{_ as s,c as a,a as t,o as p}from"./app-C8DxhDIZ.js";const e={};function o(i,n){return p(),a("div",null,n[0]||(n[0]=[t(`<h1 id="一些变量小技巧" tabindex="-1"><a class="header-anchor" href="#一些变量小技巧"><span>一些变量小技巧</span></a></h1><div class="hint-container tip"><p class="hint-container-title">提示</p><p><a href="https://docs.python.org/3/library/string.html" target="_blank" rel="noopener noreferrer">https://docs.python.org/3/library/string.html</a></p></div><h2 id="旧式字符串格式化-运算符" tabindex="-1"><a class="header-anchor" href="#旧式字符串格式化-运算符"><span>旧式字符串格式化（％ 运算符）</span></a></h2><div class="language-python" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;hello %s, this is %d&quot;</span> <span class="token operator">%</span><span class="token punctuation">(</span><span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h2 id="新式字符串格式化-str-format" tabindex="-1"><a class="header-anchor" href="#新式字符串格式化-str-format"><span>新式字符串格式化（str.format）</span></a></h2><div class="language-python" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;{2}, {1}, {0}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;hello {name}, this is {total}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span>total<span class="token operator">=</span><span class="token number">45</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h2 id="字符串插值-f-strings-python-3-6" tabindex="-1"><a class="header-anchor" href="#字符串插值-f-strings-python-3-6"><span>字符串插值 / f-Strings（Python 3.6+)</span></a></h2><div class="language-python" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">name<span class="token punctuation">,</span>total<span class="token operator">=</span><span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span><span class="token number">45</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;hello </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">, this is </span><span class="token interpolation"><span class="token punctuation">{</span>total<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span> <span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h2 id="模板字符串-标准库" tabindex="-1"><a class="header-anchor" href="#模板字符串-标准库"><span>模板字符串（标准库）</span></a></h2><div class="language-python" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"></span>
<span class="line">s <span class="token operator">=</span> Template<span class="token punctuation">(</span><span class="token string">&#39;$who likes $what&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>substitute<span class="token punctuation">(</span>who<span class="token operator">=</span><span class="token string">&#39;tim&#39;</span><span class="token punctuation">,</span> what<span class="token operator">=</span><span class="token string">&#39;kung pao&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">d<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>who<span class="token operator">=</span><span class="token string">&#39;tim&#39;</span><span class="token punctuation">)</span></span>
<span class="line">Template<span class="token punctuation">(</span><span class="token string">&#39;$who likes $what&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>safe_substitute<span class="token punctuation">(</span>d<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><ul><li><strong>r</strong> means <strong>raw</strong></li><li><strong>b</strong> means <strong>bytes</strong></li><li><strong>u</strong> means <strong>unicode</strong></li><li><strong>f</strong> means <strong>format</strong></li></ul><p>rstring会返回原始字符串</p><div class="language-python" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"> dat <span class="token operator">=</span> <span class="token string">r&quot;E:\\PycharmProjects\\a.py&quot;</span></span>
<span class="line"></span></code></pre></div>`,13)]))}const r=s(e,[["render",o]]),c=JSON.parse('{"path":"/python-tutor/python-tips/print.html","title":"一些变量小技巧","lang":"zh-CN","frontmatter":{"description":"一些变量小技巧 提示 https://docs.python.org/3/library/string.html 旧式字符串格式化（％ 运算符） 新式字符串格式化（str.format） 字符串插值 / f-Strings（Python 3.6+) 模板字符串（标准库） r means raw b means bytes u means unicode...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/python-tutor/python-tips/print.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"一些变量小技巧"}],["meta",{"property":"og:description","content":"一些变量小技巧 提示 https://docs.python.org/3/library/string.html 旧式字符串格式化（％ 运算符） 新式字符串格式化（str.format） 字符串插值 / f-Strings（Python 3.6+) 模板字符串（标准库） r means raw b means bytes u means unicode..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T05:45:13.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T05:45:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"一些变量小技巧\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-22T05:45:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"旧式字符串格式化（％ 运算符）","slug":"旧式字符串格式化-运算符","link":"#旧式字符串格式化-运算符","children":[]},{"level":2,"title":"新式字符串格式化（str.format）","slug":"新式字符串格式化-str-format","link":"#新式字符串格式化-str-format","children":[]},{"level":2,"title":"字符串插值 / f-Strings（Python 3.6+)","slug":"字符串插值-f-strings-python-3-6","link":"#字符串插值-f-strings-python-3-6","children":[]},{"level":2,"title":"模板字符串（标准库）","slug":"模板字符串-标准库","link":"#模板字符串-标准库","children":[]}],"git":{"createdTime":1658584315000,"updatedTime":1697953513000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":4,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":0.46,"words":139},"filePathRelative":"python-tutor/python-tips/print.md","localizedDate":"2022年7月23日","autoDesc":true}');export{r as comp,c as data};
