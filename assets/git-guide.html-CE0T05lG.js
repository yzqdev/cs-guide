import{_ as e,c as t,a as s,o as l}from"./app-C8DxhDIZ.js";const i={};function n(d,a){return l(),t("div",null,a[0]||(a[0]=[s(`<h1 id="git-cheat-sheet-中文版" tabindex="-1"><a class="header-anchor" href="#git-cheat-sheet-中文版"><span>Git Cheat Sheet 中文版</span></a></h1><h2 id="索引" tabindex="-1"><a class="header-anchor" href="#索引"><span>索引</span></a></h2><ul><li><a href="#%E9%85%8D%E7%BD%AE">配置</a></li><li><a href="#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">配置文件</a></li><li><a href="#%E5%88%9B%E5%BB%BA">创建</a></li><li><a href="#%E6%9C%AC%E5%9C%B0%E4%BF%AE%E6%94%B9">本地修改</a></li><li><a href="#%E6%90%9C%E7%B4%A2">搜索</a></li><li><a href="#%E6%8F%90%E4%BA%A4%E5%8E%86%E5%8F%B2">提交历史</a></li><li><a href="#%E5%88%86%E6%94%AF%E4%B8%8E%E6%A0%87%E7%AD%BE">分支与标签</a></li><li><a href="#%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%8F%91%E5%B8%83">更新与发布</a></li><li><a href="#%E5%90%88%E5%B9%B6%E4%B8%8E%E9%87%8D%E7%BD%AE">合并与重置</a></li><li><a href="#%E6%92%A4%E9%94%80">撤销</a></li><li><a href="#git-flow">Git Flow</a></li></ul><hr><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h3><h2 id="列出当前配置" tabindex="-1"><a class="header-anchor" href="#列出当前配置"><span>列出当前配置</span></a></h2><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> config <span class="token parameter variable">--list</span></span>
<span class="line"></span></code></pre></div><h2 id="列出repository配置" tabindex="-1"><a class="header-anchor" href="#列出repository配置"><span>列出repository配置</span></a></h2><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> config <span class="token parameter variable">--local</span> <span class="token parameter variable">--list</span></span>
<span class="line"></span></code></pre></div><h2 id="列出全局配置" tabindex="-1"><a class="header-anchor" href="#列出全局配置"><span>列出全局配置</span></a></h2><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--list</span></span>
<span class="line"></span></code></pre></div><h2 id="列出系统配置" tabindex="-1"><a class="header-anchor" href="#列出系统配置"><span>列出系统配置</span></a></h2><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> config <span class="token parameter variable">--system</span> <span class="token parameter variable">--list</span></span>
<span class="line"></span></code></pre></div><h2 id="设置用户名" tabindex="-1"><a class="header-anchor" href="#设置用户名"><span>设置用户名</span></a></h2><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">&quot;[firstname lastname]&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="设置用户邮箱" tabindex="-1"><a class="header-anchor" href="#设置用户邮箱"><span>设置用户邮箱</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git config --global user.email &quot;[valid-email]&quot;</span>
<span class="line"></span></code></pre></div><h2 id="设置git命令输出为彩色" tabindex="-1"><a class="header-anchor" href="#设置git命令输出为彩色"><span>设置git命令输出为彩色</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git config --global color.ui auto</span>
<span class="line"></span></code></pre></div><h2 id="设置git使用的文本编辑器设" tabindex="-1"><a class="header-anchor" href="#设置git使用的文本编辑器设"><span>设置git使用的文本编辑器设</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git config --global core.editor vi</span>
<span class="line"></span></code></pre></div><hr><h3 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h3><h2 id="repository配置对应的配置文件路径-local" tabindex="-1"><a class="header-anchor" href="#repository配置对应的配置文件路径-local"><span>Repository配置对应的配置文件路径[--local]</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&lt;repo&gt;/.git/config</span>
<span class="line"></span></code></pre></div><h2 id="用户全局配置对应的配置文件路径-global" tabindex="-1"><a class="header-anchor" href="#用户全局配置对应的配置文件路径-global"><span>用户全局配置对应的配置文件路径[--global]</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">~/.gitconfig</span>
<span class="line"></span></code></pre></div><h2 id="系统配置对应的配置文件路径-local" tabindex="-1"><a class="header-anchor" href="#系统配置对应的配置文件路径-local"><span>系统配置对应的配置文件路径[--local]</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">/etc/gitconfig</span>
<span class="line"></span></code></pre></div><hr><h3 id="创建" tabindex="-1"><a class="header-anchor" href="#创建"><span>创建</span></a></h3><h2 id="复制一个已创建的仓库" tabindex="-1"><a class="header-anchor" href="#复制一个已创建的仓库"><span>复制一个已创建的仓库</span></a></h2><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 通过 SSH</span></span>
<span class="line">$ <span class="token function">git</span> clone ssh://user@domain.com/repo.git</span>
<span class="line"></span>
<span class="line"><span class="token comment">#通过 HTTP</span></span>
<span class="line">$ <span class="token function">git</span> clone http://domain.com/user/repo.git</span>
<span class="line"></span></code></pre></div><h2 id="创建一个新的本地仓库" tabindex="-1"><a class="header-anchor" href="#创建一个新的本地仓库"><span>创建一个新的本地仓库</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git init</span>
<span class="line"></span></code></pre></div><hr><h3 id="本地修改" tabindex="-1"><a class="header-anchor" href="#本地修改"><span>本地修改</span></a></h3><h2 id="显示工作路径下已修改的文件" tabindex="-1"><a class="header-anchor" href="#显示工作路径下已修改的文件"><span>显示工作路径下已修改的文件</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git status</span>
<span class="line"></span></code></pre></div><h2 id="显示与上次提交版本文件的不同" tabindex="-1"><a class="header-anchor" href="#显示与上次提交版本文件的不同"><span>显示与上次提交版本文件的不同</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git diff</span>
<span class="line"></span></code></pre></div><h2 id="把当前所有修改添加到下次提交中" tabindex="-1"><a class="header-anchor" href="#把当前所有修改添加到下次提交中"><span>把当前所有修改添加到下次提交中</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git add .</span>
<span class="line"></span></code></pre></div><h2 id="把对某个文件的修改添加到下次提交中" tabindex="-1"><a class="header-anchor" href="#把对某个文件的修改添加到下次提交中"><span>把对某个文件的修改添加到下次提交中</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git add -p &lt;file&gt;</span>
<span class="line"></span></code></pre></div><h2 id="提交本地的所有修改" tabindex="-1"><a class="header-anchor" href="#提交本地的所有修改"><span>提交本地的所有修改</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git commit -a</span>
<span class="line"></span></code></pre></div><h2 id="提交之前已标记的变化" tabindex="-1"><a class="header-anchor" href="#提交之前已标记的变化"><span>提交之前已标记的变化</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git commit</span>
<span class="line"></span></code></pre></div><h2 id="附加消息提交" tabindex="-1"><a class="header-anchor" href="#附加消息提交"><span>附加消息提交</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git commit -m &#39;message here&#39;</span>
<span class="line"></span></code></pre></div><h2 id="提交-并将提交时间设置为之前的某个日期" tabindex="-1"><a class="header-anchor" href="#提交-并将提交时间设置为之前的某个日期"><span>提交，并将提交时间设置为之前的某个日期</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git commit --date=&quot;\`date --date=&#39;n day ago&#39;\`&quot; -am &quot;Commit Message&quot;</span>
<span class="line"></span></code></pre></div><h2 id="修改上次提交" tabindex="-1"><a class="header-anchor" href="#修改上次提交"><span>修改上次提交</span></a></h2><p><em>请勿修改已发布的提交记录!</em></p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git commit --amend</span>
<span class="line"></span></code></pre></div><h2 id="修改上次提交的committer-date" tabindex="-1"><a class="header-anchor" href="#修改上次提交的committer-date"><span>修改上次提交的committer date</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">GIT_COMMITTER_DATE=&quot;date&quot; git commit --amend</span>
<span class="line"></span></code></pre></div><h2 id="修改上次提交的author-date" tabindex="-1"><a class="header-anchor" href="#修改上次提交的author-date"><span>修改上次提交的author date</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git commit --amend --date=&quot;date&quot;</span>
<span class="line"></span></code></pre></div><h2 id="把当前分支中未提交的修改移动到其他分支" tabindex="-1"><a class="header-anchor" href="#把当前分支中未提交的修改移动到其他分支"><span>把当前分支中未提交的修改移动到其他分支</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git stash</span>
<span class="line">git checkout branch2</span>
<span class="line">git stash pop</span>
<span class="line"></span></code></pre></div><h2 id="将-stashed-changes-应用到当前分支" tabindex="-1"><a class="header-anchor" href="#将-stashed-changes-应用到当前分支"><span>将 stashed changes 应用到当前分支</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git stash apply</span>
<span class="line"></span></code></pre></div><h2 id="删除最新一次的-stashed-changes" tabindex="-1"><a class="header-anchor" href="#删除最新一次的-stashed-changes"><span>删除最新一次的 stashed changes</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git stash drop</span>
<span class="line"></span></code></pre></div><hr><h3 id="搜索" tabindex="-1"><a class="header-anchor" href="#搜索"><span>搜索</span></a></h3><h2 id="从当前目录的所有文件中查找文本内容" tabindex="-1"><a class="header-anchor" href="#从当前目录的所有文件中查找文本内容"><span>从当前目录的所有文件中查找文本内容</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git grep &quot;Hello&quot;</span>
<span class="line"></span></code></pre></div><h2 id="在某一版本中搜索文本" tabindex="-1"><a class="header-anchor" href="#在某一版本中搜索文本"><span>在某一版本中搜索文本</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git grep &quot;Hello&quot; v2.5</span>
<span class="line"></span></code></pre></div><hr><h3 id="提交历史" tabindex="-1"><a class="header-anchor" href="#提交历史"><span>提交历史</span></a></h3><h2 id="从最新提交开始-显示所有的提交记录-显示hash-作者信息-提交的标题和时间" tabindex="-1"><a class="header-anchor" href="#从最新提交开始-显示所有的提交记录-显示hash-作者信息-提交的标题和时间"><span>从最新提交开始，显示所有的提交记录（显示hash， 作者信息，提交的标题和时间）</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git log</span>
<span class="line"></span></code></pre></div><h2 id="显示所有提交-仅显示提交的hash和message" tabindex="-1"><a class="header-anchor" href="#显示所有提交-仅显示提交的hash和message"><span>显示所有提交（仅显示提交的hash和message）</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git log --oneline</span>
<span class="line"></span></code></pre></div><h2 id="显示某个用户的所有提交" tabindex="-1"><a class="header-anchor" href="#显示某个用户的所有提交"><span>显示某个用户的所有提交</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git log --author=&quot;username&quot;</span>
<span class="line"></span></code></pre></div><h2 id="显示某个文件的所有修改" tabindex="-1"><a class="header-anchor" href="#显示某个文件的所有修改"><span>显示某个文件的所有修改</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git log -p &lt;file&gt;</span>
<span class="line"></span></code></pre></div><h2 id="仅显示远端-remote-master-分支与远端-origin-master-分支提交记录的差集" tabindex="-1"><a class="header-anchor" href="#仅显示远端-remote-master-分支与远端-origin-master-分支提交记录的差集"><span>仅显示远端&lt;remote/master&gt;分支与远端&lt;origin/master&gt;分支提交记录的差集</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git log --oneline &lt;origin/master&gt;..&lt;remote/master&gt; --left-right</span>
<span class="line"></span></code></pre></div><h2 id="谁-在什么时间-修改了文件的什么内容" tabindex="-1"><a class="header-anchor" href="#谁-在什么时间-修改了文件的什么内容"><span>谁，在什么时间，修改了文件的什么内容</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git blame &lt;file&gt;</span>
<span class="line"></span></code></pre></div><h2 id="显示reflog" tabindex="-1"><a class="header-anchor" href="#显示reflog"><span>显示reflog</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git reflog show</span>
<span class="line"></span></code></pre></div><h2 id="删除reflog" tabindex="-1"><a class="header-anchor" href="#删除reflog"><span>删除reflog</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git reflog delete</span>
<span class="line"></span></code></pre></div><hr><h3 id="分支与标签" tabindex="-1"><a class="header-anchor" href="#分支与标签"><span>分支与标签</span></a></h3><h2 id="列出所有的分支" tabindex="-1"><a class="header-anchor" href="#列出所有的分支"><span>列出所有的分支</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git branch</span>
<span class="line"></span></code></pre></div><h2 id="列出所有的远端分支" tabindex="-1"><a class="header-anchor" href="#列出所有的远端分支"><span>列出所有的远端分支</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git branch -r</span>
<span class="line"></span></code></pre></div><h2 id="切换分支" tabindex="-1"><a class="header-anchor" href="#切换分支"><span>切换分支</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git checkout &lt;branch&gt;</span>
<span class="line"></span></code></pre></div><h2 id="创建并切换到新分支" tabindex="-1"><a class="header-anchor" href="#创建并切换到新分支"><span>创建并切换到新分支</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git checkout -b &lt;branch&gt;</span>
<span class="line"></span></code></pre></div><h2 id="基于当前分支创建新分支" tabindex="-1"><a class="header-anchor" href="#基于当前分支创建新分支"><span>基于当前分支创建新分支</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git branch &lt;new-branch&gt;</span>
<span class="line"></span></code></pre></div><h2 id="基于远程分支创建新的可追溯的分支" tabindex="-1"><a class="header-anchor" href="#基于远程分支创建新的可追溯的分支"><span>基于远程分支创建新的可追溯的分支</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git branch --track &lt;new-branch&gt; &lt;remote-branch&gt;</span>
<span class="line"></span></code></pre></div><h2 id="删除本地分支" tabindex="-1"><a class="header-anchor" href="#删除本地分支"><span>删除本地分支</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git branch -d &lt;branch&gt;</span>
<span class="line"></span></code></pre></div><h2 id="强制删除一个本地分支" tabindex="-1"><a class="header-anchor" href="#强制删除一个本地分支"><span>强制删除一个本地分支</span></a></h2><p><em>将会丢失未合并的修改！</em></p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git branch -D &lt;branch&gt;</span>
<span class="line"></span></code></pre></div><h2 id="给当前版本打标签" tabindex="-1"><a class="header-anchor" href="#给当前版本打标签"><span>给当前版本打标签</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git tag &lt;tag-name&gt;</span>
<span class="line"></span></code></pre></div><h2 id="给当前版本打标签并附加消息" tabindex="-1"><a class="header-anchor" href="#给当前版本打标签并附加消息"><span>给当前版本打标签并附加消息</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git tag -a &lt;tag-name&gt;</span>
<span class="line"></span></code></pre></div><hr><h3 id="更新与发布" tabindex="-1"><a class="header-anchor" href="#更新与发布"><span>更新与发布</span></a></h3><h2 id="列出当前配置的远程端" tabindex="-1"><a class="header-anchor" href="#列出当前配置的远程端"><span>列出当前配置的远程端</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git remote -v</span>
<span class="line"></span></code></pre></div><h2 id="显示远程端的信息" tabindex="-1"><a class="header-anchor" href="#显示远程端的信息"><span>显示远程端的信息</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git remote show &lt;remote&gt;</span>
<span class="line"></span></code></pre></div><h2 id="添加新的远程端" tabindex="-1"><a class="header-anchor" href="#添加新的远程端"><span>添加新的远程端</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git remote add &lt;remote&gt; &lt;url&gt;</span>
<span class="line"></span></code></pre></div><h2 id="下载远程端版本-但不合并到head中" tabindex="-1"><a class="header-anchor" href="#下载远程端版本-但不合并到head中"><span>下载远程端版本，但不合并到HEAD中</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git fetch &lt;remote&gt;</span>
<span class="line"></span></code></pre></div><h2 id="下载远程端版本-并自动与head版本合并" tabindex="-1"><a class="header-anchor" href="#下载远程端版本-并自动与head版本合并"><span>下载远程端版本，并自动与HEAD版本合并</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git remote pull &lt;remote&gt; &lt;url&gt;</span>
<span class="line"></span></code></pre></div><h2 id="将远程端版本合并到本地版本中" tabindex="-1"><a class="header-anchor" href="#将远程端版本合并到本地版本中"><span>将远程端版本合并到本地版本中</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git pull origin master</span>
<span class="line"></span></code></pre></div><h2 id="以rebase方式将远端分支与本地合并" tabindex="-1"><a class="header-anchor" href="#以rebase方式将远端分支与本地合并"><span>以rebase方式将远端分支与本地合并</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git pull --rebase &lt;remote&gt; &lt;branch&gt;</span>
<span class="line"></span></code></pre></div><h2 id="将本地版本发布到远程端" tabindex="-1"><a class="header-anchor" href="#将本地版本发布到远程端"><span>将本地版本发布到远程端</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git push remote &lt;remote&gt; &lt;branch&gt;</span>
<span class="line"></span></code></pre></div><h2 id="删除远程端分支" tabindex="-1"><a class="header-anchor" href="#删除远程端分支"><span>删除远程端分支</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">$ git push &lt;remote&gt; :&lt;branch&gt; (since Git v1.5.0)</span>
<span class="line">or</span>
<span class="line">git push &lt;remote&gt; --delete &lt;branch&gt; (since Git v1.7.0)</span>
<span class="line"></span></code></pre></div><h2 id="发布标签" tabindex="-1"><a class="header-anchor" href="#发布标签"><span>发布标签</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git push --tags</span>
<span class="line"></span></code></pre></div><hr><h3 id="合并与重置-rebase" tabindex="-1"><a class="header-anchor" href="#合并与重置-rebase"><span>合并与重置(Rebase)</span></a></h3><h2 id="将分支合并到当前head中" tabindex="-1"><a class="header-anchor" href="#将分支合并到当前head中"><span>将分支合并到当前HEAD中</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git merge &lt;branch&gt;</span>
<span class="line"></span></code></pre></div><h2 id="将当前head版本重置到分支中" tabindex="-1"><a class="header-anchor" href="#将当前head版本重置到分支中"><span>将当前HEAD版本重置到分支中</span></a></h2><p><em>请勿重置已发布的提交!</em></p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git rebase &lt;branch&gt;</span>
<span class="line"></span></code></pre></div><h2 id="退出重置" tabindex="-1"><a class="header-anchor" href="#退出重置"><span>退出重置</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git rebase --abort</span>
<span class="line"></span></code></pre></div><h2 id="解决冲突后继续重置" tabindex="-1"><a class="header-anchor" href="#解决冲突后继续重置"><span>解决冲突后继续重置</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git rebase --continue</span>
<span class="line"></span></code></pre></div><h2 id="使用配置好的merge-tool-解决冲突" tabindex="-1"><a class="header-anchor" href="#使用配置好的merge-tool-解决冲突"><span>使用配置好的merge tool 解决冲突</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git mergetool</span>
<span class="line"></span></code></pre></div><h2 id="在编辑器中手动解决冲突后-标记文件为已解决冲突" tabindex="-1"><a class="header-anchor" href="#在编辑器中手动解决冲突后-标记文件为已解决冲突"><span>在编辑器中手动解决冲突后，标记文件为<code>已解决冲突</code></span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git add &lt;resolved-file&gt;</span>
<span class="line"></span></code></pre></div><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git rm &lt;resolved-file&gt;</span>
<span class="line"></span></code></pre></div><h2 id="合并提交" tabindex="-1"><a class="header-anchor" href="#合并提交"><span>合并提交</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git rebase -i &lt;commit-just-before-first&gt;</span>
<span class="line"></span></code></pre></div><p>把上面的内容替换为下面的内容：</p><p>原内容：</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">pick &lt;commit_id&gt;</span>
<span class="line">pick &lt;commit_id2&gt;</span>
<span class="line">pick &lt;commit_id3&gt;</span>
<span class="line"></span></code></pre></div><p>替换为：</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">pick &lt;commit_id&gt;</span>
<span class="line">squash &lt;commit_id2&gt;</span>
<span class="line">squash &lt;commit_id3&gt;</span>
<span class="line"></span></code></pre></div><hr><h3 id="撤销" tabindex="-1"><a class="header-anchor" href="#撤销"><span>撤销</span></a></h3><h2 id="放弃工作目录下的所有修改" tabindex="-1"><a class="header-anchor" href="#放弃工作目录下的所有修改"><span>放弃工作目录下的所有修改</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git reset --hard HEAD</span>
<span class="line"></span></code></pre></div><h2 id="移除缓存区的所有文件-i-e-撤销上次git-add" tabindex="-1"><a class="header-anchor" href="#移除缓存区的所有文件-i-e-撤销上次git-add"><span>移除缓存区的所有文件（i.e. 撤销上次<code>git add</code>）</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git reset HEAD</span>
<span class="line"></span></code></pre></div><h2 id="放弃某个文件的所有本地修改" tabindex="-1"><a class="header-anchor" href="#放弃某个文件的所有本地修改"><span>放弃某个文件的所有本地修改</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git checkout HEAD &lt;file&gt;</span>
<span class="line"></span></code></pre></div><h2 id="重置一个提交-通过创建一个截然不同的新提交" tabindex="-1"><a class="header-anchor" href="#重置一个提交-通过创建一个截然不同的新提交"><span>重置一个提交（通过创建一个截然不同的新提交）</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git revert &lt;commit&gt;</span>
<span class="line"></span></code></pre></div><h2 id="将head重置到指定的版本-并抛弃该版本之后的所有修改" tabindex="-1"><a class="header-anchor" href="#将head重置到指定的版本-并抛弃该版本之后的所有修改"><span>将HEAD重置到指定的版本，并抛弃该版本之后的所有修改</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git reset --hard &lt;commit&gt;</span>
<span class="line"></span></code></pre></div><h2 id="用远端分支强制覆盖本地分支" tabindex="-1"><a class="header-anchor" href="#用远端分支强制覆盖本地分支"><span>用远端分支强制覆盖本地分支</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git reset --hard &lt;remote/branch&gt; e.g., upstream/master, origin/my-feature</span>
<span class="line"></span></code></pre></div><h2 id="将head重置到上一次提交的版本-并将之后的修改标记为未添加到缓存区的修改" tabindex="-1"><a class="header-anchor" href="#将head重置到上一次提交的版本-并将之后的修改标记为未添加到缓存区的修改"><span>将HEAD重置到上一次提交的版本，并将之后的修改标记为未添加到缓存区的修改</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git reset &lt;commit&gt;</span>
<span class="line"></span></code></pre></div><h2 id="将head重置到上一次提交的版本-并保留未提交的本地修改" tabindex="-1"><a class="header-anchor" href="#将head重置到上一次提交的版本-并保留未提交的本地修改"><span>将HEAD重置到上一次提交的版本，并保留未提交的本地修改</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git reset --keep &lt;commit&gt;</span>
<span class="line"></span></code></pre></div><h2 id="删除添加-gitignore文件前错误提交的文件" tabindex="-1"><a class="header-anchor" href="#删除添加-gitignore文件前错误提交的文件"><span>删除添加<code>.gitignore</code>文件前错误提交的文件</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git rm -r --cached .</span>
<span class="line">git add .</span>
<span class="line">git commit -m &quot;remove xyz file&quot;</span>
<span class="line"></span></code></pre></div><hr><h2 id="git-flow" tabindex="-1"><a class="header-anchor" href="#git-flow"><span>Git-Flow</span></a></h2><h3 id="索引-1" tabindex="-1"><a class="header-anchor" href="#索引-1"><span>索引</span></a></h3><ul><li><a href="#%E5%AE%89%E8%A3%85">安装</a></li><li><a href="#%E5%BC%80%E5%A7%8B">开始</a></li><li><a href="#%E7%89%B9%E6%80%A7">特性</a></li><li><a href="#%E5%81%9A%E4%B8%80%E4%B8%AArelease%E7%89%88%E6%9C%AC">做一个release版本</a></li><li><a href="#%E7%B4%A7%E6%80%A5%E4%BF%AE%E5%A4%8D">紧急修复</a></li><li><a href="#commands">Commands</a></li></ul><hr><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h3><ul><li>你需要有一个可以工作的 git 作为前提。</li><li>Git flow 可以工作在 OSX, Linux 和 Windows之下</li></ul><h2 id="osx-homebrew" tabindex="-1"><a class="header-anchor" href="#osx-homebrew"><span>OSX Homebrew</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">brew install git-flow</span>
<span class="line"></span></code></pre></div><h2 id="osx-macports" tabindex="-1"><a class="header-anchor" href="#osx-macports"><span>OSX Macports</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">port install git-flow</span>
<span class="line"></span></code></pre></div><h2 id="linux" tabindex="-1"><a class="header-anchor" href="#linux"><span>Linux</span></a></h2><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">apt-get install git-flow</span>
<span class="line"></span></code></pre></div><h2 id="windows-cygwin" tabindex="-1"><a class="header-anchor" href="#windows-cygwin"><span>Windows (Cygwin)</span></a></h2><p>安装 git-flow, 你需要 wget 和 util-linux。</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">wget -q -O - --no-check-certificate https://github.com/nvie/gitflow/raw/develop/contrib/gitflow-installer.sh | bash</span>
<span class="line"></span></code></pre></div><hr><h3 id="开始" tabindex="-1"><a class="header-anchor" href="#开始"><span>开始</span></a></h3><ul><li>为了自定义你的项目，Git flow 需要初始化过程。</li><li>使用 git-flow，从初始化一个现有的 git 库内开始。</li><li>初始化，你必须回答几个关于分支的命名约定的问题。建议使用默认值。</li></ul><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git flow init</span>
<span class="line"></span></code></pre></div><hr><h3 id="特性" tabindex="-1"><a class="header-anchor" href="#特性"><span>特性</span></a></h3><ul><li>为即将发布的版本开发新功能特性。</li><li>这通常只存在开发者的库中。</li></ul><h2 id="创建一个新特性" tabindex="-1"><a class="header-anchor" href="#创建一个新特性"><span>创建一个新特性</span></a></h2><p>下面操作创建了一个新的feature分支，并切换到该分支</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git flow feature start MYFEATURE</span>
<span class="line"></span></code></pre></div><h2 id="完成新特性的开发" tabindex="-1"><a class="header-anchor" href="#完成新特性的开发"><span>完成新特性的开发</span></a></h2><p>完成开发新特性。这个动作执行下面的操作：</p><ol><li>合并 MYFEATURE 分支到 &#39;develop&#39;</li><li>删除这个新特性分支</li><li>切换回 &#39;develop&#39; 分支</li></ol><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git flow feature finish MYFEATURE</span>
<span class="line"></span></code></pre></div><h2 id="发布新特性" tabindex="-1"><a class="header-anchor" href="#发布新特性"><span>发布新特性</span></a></h2><p>你是否合作开发一项新特性？ 发布新特性分支到远程服务器，所以，其它用户也可以使用这分支。</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git flow feature publish MYFEATURE</span>
<span class="line"></span></code></pre></div><h2 id="取得一个发布的新特性分支" tabindex="-1"><a class="header-anchor" href="#取得一个发布的新特性分支"><span>取得一个发布的新特性分支</span></a></h2><p>取得其它用户发布的新特性分支。</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git flow feature pull origin MYFEATURE</span>
<span class="line"></span></code></pre></div><h2 id="追溯远端上的特性" tabindex="-1"><a class="header-anchor" href="#追溯远端上的特性"><span>追溯远端上的特性</span></a></h2><p>通过下面命令追溯远端上的特性</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git flow feature track MYFEATURE</span>
<span class="line"></span></code></pre></div><hr><h3 id="做一个release版本" tabindex="-1"><a class="header-anchor" href="#做一个release版本"><span>做一个release版本</span></a></h3><ul><li>支持一个新的用于生产环境的发布版本。</li><li>允许修正小问题，并为发布版本准备元数据。</li></ul><h2 id="开始创建release版本" tabindex="-1"><a class="header-anchor" href="#开始创建release版本"><span>开始创建release版本</span></a></h2><ul><li>开始创建release版本，使用 git flow release 命令。</li><li>&#39;release&#39; 分支的创建基于 &#39;develop&#39; 分支。</li><li>你可以选择提供一个 [BASE]参数，即提交记录的 sha-1 hash 值，来开启动 release 分支。</li><li>这个提交记录的 sha-1 hash 值必须是&#39;develop&#39; 分支下的。</li></ul><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git flow release start RELEASE [BASE]</span>
<span class="line"></span></code></pre></div><p>创建 release 分支之后立即发布允许其它用户向这个 release 分支提交内容是个明智的做法。命令十分类似发布新特性：</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git flow release publish RELEASE</span>
<span class="line"></span></code></pre></div><p>(你可以通过<code>git flow release track RELEASE</code> 命令追溯远端的 release 版本)</p><h2 id="完成-release-版本" tabindex="-1"><a class="header-anchor" href="#完成-release-版本"><span>完成 release 版本</span></a></h2><p>完成 release 版本是一个大 git 分支操作。它执行下面几个动作：</p><ol><li>归并 release 分支到 &#39;master&#39; 分支。</li><li>用 release 分支名打 Tag</li><li>归并 release 分支到 &#39;develop&#39;</li><li>移除 release 分支。</li></ol><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git flow release finish RELEASE</span>
<span class="line"></span></code></pre></div><p>不要忘记使用<code>git push --tags</code>将tags推送到远端</p><hr><h3 id="紧急修复" tabindex="-1"><a class="header-anchor" href="#紧急修复"><span>紧急修复</span></a></h3><p>紧急修复来自这样的需求：生产环境的版本处于一个不预期状态，需要立即修正。有可能是需要修正 master 分支上某个 TAG 标记的生产版本。</p><h2 id="开始-git-flow-紧急修复" tabindex="-1"><a class="header-anchor" href="#开始-git-flow-紧急修复"><span>开始 git flow 紧急修复</span></a></h2><p>像其它 git flow 命令一样, 紧急修复分支开始自：</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git flow hotfix start VERSION [BASENAME]</span>
<span class="line"></span></code></pre></div><p>VERSION 参数标记着修正版本。你可以从 <code>[BASENAME]开始，</code>[BASENAME]\`为finish release时填写的版本号</p><h2 id="完成紧急修复" tabindex="-1"><a class="header-anchor" href="#完成紧急修复"><span>完成紧急修复</span></a></h2><p>当完成紧急修复分支，代码归并回 develop 和 master 分支。相应地，master 分支打上修正版本的 TAG。</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git flow hotfix finish VERSION</span>
<span class="line"></span></code></pre></div><hr>`,242)]))}const h=e(i,[["render",n]]),p=JSON.parse('{"path":"/git-tutor/git/git-guide.html","title":"Git Cheat Sheet 中文版","lang":"zh-CN","frontmatter":{"description":"Git Cheat Sheet 中文版 索引 配置 配置文件 创建 本地修改 搜索 提交历史 分支与标签 更新与发布 合并与重置 撤销 Git Flow 配置 列出当前配置 列出repository配置 列出全局配置 列出系统配置 设置用户名 设置用户邮箱 设置git命令输出为彩色 设置git使用的文本编辑器设 配置文件 Repository配置对应的...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/git-tutor/git/git-guide.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"Git Cheat Sheet 中文版"}],["meta",{"property":"og:description","content":"Git Cheat Sheet 中文版 索引 配置 配置文件 创建 本地修改 搜索 提交历史 分支与标签 更新与发布 合并与重置 撤销 Git Flow 配置 列出当前配置 列出repository配置 列出全局配置 列出系统配置 设置用户名 设置用户邮箱 设置git命令输出为彩色 设置git使用的文本编辑器设 配置文件 Repository配置对应的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-25T05:00:38.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-25T05:00:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git Cheat Sheet 中文版\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-25T05:00:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"索引","slug":"索引","link":"#索引","children":[{"level":3,"title":"配置","slug":"配置","link":"#配置","children":[]}]},{"level":2,"title":"列出当前配置","slug":"列出当前配置","link":"#列出当前配置","children":[]},{"level":2,"title":"列出repository配置","slug":"列出repository配置","link":"#列出repository配置","children":[]},{"level":2,"title":"列出全局配置","slug":"列出全局配置","link":"#列出全局配置","children":[]},{"level":2,"title":"列出系统配置","slug":"列出系统配置","link":"#列出系统配置","children":[]},{"level":2,"title":"设置用户名","slug":"设置用户名","link":"#设置用户名","children":[]},{"level":2,"title":"设置用户邮箱","slug":"设置用户邮箱","link":"#设置用户邮箱","children":[]},{"level":2,"title":"设置git命令输出为彩色","slug":"设置git命令输出为彩色","link":"#设置git命令输出为彩色","children":[]},{"level":2,"title":"设置git使用的文本编辑器设","slug":"设置git使用的文本编辑器设","link":"#设置git使用的文本编辑器设","children":[{"level":3,"title":"配置文件","slug":"配置文件","link":"#配置文件","children":[]}]},{"level":2,"title":"Repository配置对应的配置文件路径[--local]","slug":"repository配置对应的配置文件路径-local","link":"#repository配置对应的配置文件路径-local","children":[]},{"level":2,"title":"用户全局配置对应的配置文件路径[--global]","slug":"用户全局配置对应的配置文件路径-global","link":"#用户全局配置对应的配置文件路径-global","children":[]},{"level":2,"title":"系统配置对应的配置文件路径[--local]","slug":"系统配置对应的配置文件路径-local","link":"#系统配置对应的配置文件路径-local","children":[{"level":3,"title":"创建","slug":"创建","link":"#创建","children":[]}]},{"level":2,"title":"复制一个已创建的仓库","slug":"复制一个已创建的仓库","link":"#复制一个已创建的仓库","children":[]},{"level":2,"title":"创建一个新的本地仓库","slug":"创建一个新的本地仓库","link":"#创建一个新的本地仓库","children":[{"level":3,"title":"本地修改","slug":"本地修改","link":"#本地修改","children":[]}]},{"level":2,"title":"显示工作路径下已修改的文件","slug":"显示工作路径下已修改的文件","link":"#显示工作路径下已修改的文件","children":[]},{"level":2,"title":"显示与上次提交版本文件的不同","slug":"显示与上次提交版本文件的不同","link":"#显示与上次提交版本文件的不同","children":[]},{"level":2,"title":"把当前所有修改添加到下次提交中","slug":"把当前所有修改添加到下次提交中","link":"#把当前所有修改添加到下次提交中","children":[]},{"level":2,"title":"把对某个文件的修改添加到下次提交中","slug":"把对某个文件的修改添加到下次提交中","link":"#把对某个文件的修改添加到下次提交中","children":[]},{"level":2,"title":"提交本地的所有修改","slug":"提交本地的所有修改","link":"#提交本地的所有修改","children":[]},{"level":2,"title":"提交之前已标记的变化","slug":"提交之前已标记的变化","link":"#提交之前已标记的变化","children":[]},{"level":2,"title":"附加消息提交","slug":"附加消息提交","link":"#附加消息提交","children":[]},{"level":2,"title":"提交，并将提交时间设置为之前的某个日期","slug":"提交-并将提交时间设置为之前的某个日期","link":"#提交-并将提交时间设置为之前的某个日期","children":[]},{"level":2,"title":"修改上次提交","slug":"修改上次提交","link":"#修改上次提交","children":[]},{"level":2,"title":"修改上次提交的committer date","slug":"修改上次提交的committer-date","link":"#修改上次提交的committer-date","children":[]},{"level":2,"title":"修改上次提交的author date","slug":"修改上次提交的author-date","link":"#修改上次提交的author-date","children":[]},{"level":2,"title":"把当前分支中未提交的修改移动到其他分支","slug":"把当前分支中未提交的修改移动到其他分支","link":"#把当前分支中未提交的修改移动到其他分支","children":[]},{"level":2,"title":"将 stashed changes 应用到当前分支","slug":"将-stashed-changes-应用到当前分支","link":"#将-stashed-changes-应用到当前分支","children":[]},{"level":2,"title":"删除最新一次的 stashed changes","slug":"删除最新一次的-stashed-changes","link":"#删除最新一次的-stashed-changes","children":[{"level":3,"title":"搜索","slug":"搜索","link":"#搜索","children":[]}]},{"level":2,"title":"从当前目录的所有文件中查找文本内容","slug":"从当前目录的所有文件中查找文本内容","link":"#从当前目录的所有文件中查找文本内容","children":[]},{"level":2,"title":"在某一版本中搜索文本","slug":"在某一版本中搜索文本","link":"#在某一版本中搜索文本","children":[{"level":3,"title":"提交历史","slug":"提交历史","link":"#提交历史","children":[]}]},{"level":2,"title":"从最新提交开始，显示所有的提交记录（显示hash， 作者信息，提交的标题和时间）","slug":"从最新提交开始-显示所有的提交记录-显示hash-作者信息-提交的标题和时间","link":"#从最新提交开始-显示所有的提交记录-显示hash-作者信息-提交的标题和时间","children":[]},{"level":2,"title":"显示所有提交（仅显示提交的hash和message）","slug":"显示所有提交-仅显示提交的hash和message","link":"#显示所有提交-仅显示提交的hash和message","children":[]},{"level":2,"title":"显示某个用户的所有提交","slug":"显示某个用户的所有提交","link":"#显示某个用户的所有提交","children":[]},{"level":2,"title":"显示某个文件的所有修改","slug":"显示某个文件的所有修改","link":"#显示某个文件的所有修改","children":[]},{"level":2,"title":"仅显示远端<remote/master>分支与远端<origin/master>分支提交记录的差集","slug":"仅显示远端-remote-master-分支与远端-origin-master-分支提交记录的差集","link":"#仅显示远端-remote-master-分支与远端-origin-master-分支提交记录的差集","children":[]},{"level":2,"title":"谁，在什么时间，修改了文件的什么内容","slug":"谁-在什么时间-修改了文件的什么内容","link":"#谁-在什么时间-修改了文件的什么内容","children":[]},{"level":2,"title":"显示reflog","slug":"显示reflog","link":"#显示reflog","children":[]},{"level":2,"title":"删除reflog","slug":"删除reflog","link":"#删除reflog","children":[{"level":3,"title":"分支与标签","slug":"分支与标签","link":"#分支与标签","children":[]}]},{"level":2,"title":"列出所有的分支","slug":"列出所有的分支","link":"#列出所有的分支","children":[]},{"level":2,"title":"列出所有的远端分支","slug":"列出所有的远端分支","link":"#列出所有的远端分支","children":[]},{"level":2,"title":"切换分支","slug":"切换分支","link":"#切换分支","children":[]},{"level":2,"title":"创建并切换到新分支","slug":"创建并切换到新分支","link":"#创建并切换到新分支","children":[]},{"level":2,"title":"基于当前分支创建新分支","slug":"基于当前分支创建新分支","link":"#基于当前分支创建新分支","children":[]},{"level":2,"title":"基于远程分支创建新的可追溯的分支","slug":"基于远程分支创建新的可追溯的分支","link":"#基于远程分支创建新的可追溯的分支","children":[]},{"level":2,"title":"删除本地分支","slug":"删除本地分支","link":"#删除本地分支","children":[]},{"level":2,"title":"强制删除一个本地分支","slug":"强制删除一个本地分支","link":"#强制删除一个本地分支","children":[]},{"level":2,"title":"给当前版本打标签","slug":"给当前版本打标签","link":"#给当前版本打标签","children":[]},{"level":2,"title":"给当前版本打标签并附加消息","slug":"给当前版本打标签并附加消息","link":"#给当前版本打标签并附加消息","children":[{"level":3,"title":"更新与发布","slug":"更新与发布","link":"#更新与发布","children":[]}]},{"level":2,"title":"列出当前配置的远程端","slug":"列出当前配置的远程端","link":"#列出当前配置的远程端","children":[]},{"level":2,"title":"显示远程端的信息","slug":"显示远程端的信息","link":"#显示远程端的信息","children":[]},{"level":2,"title":"添加新的远程端","slug":"添加新的远程端","link":"#添加新的远程端","children":[]},{"level":2,"title":"下载远程端版本，但不合并到HEAD中","slug":"下载远程端版本-但不合并到head中","link":"#下载远程端版本-但不合并到head中","children":[]},{"level":2,"title":"下载远程端版本，并自动与HEAD版本合并","slug":"下载远程端版本-并自动与head版本合并","link":"#下载远程端版本-并自动与head版本合并","children":[]},{"level":2,"title":"将远程端版本合并到本地版本中","slug":"将远程端版本合并到本地版本中","link":"#将远程端版本合并到本地版本中","children":[]},{"level":2,"title":"以rebase方式将远端分支与本地合并","slug":"以rebase方式将远端分支与本地合并","link":"#以rebase方式将远端分支与本地合并","children":[]},{"level":2,"title":"将本地版本发布到远程端","slug":"将本地版本发布到远程端","link":"#将本地版本发布到远程端","children":[]},{"level":2,"title":"删除远程端分支","slug":"删除远程端分支","link":"#删除远程端分支","children":[]},{"level":2,"title":"发布标签","slug":"发布标签","link":"#发布标签","children":[{"level":3,"title":"合并与重置(Rebase)","slug":"合并与重置-rebase","link":"#合并与重置-rebase","children":[]}]},{"level":2,"title":"将分支合并到当前HEAD中","slug":"将分支合并到当前head中","link":"#将分支合并到当前head中","children":[]},{"level":2,"title":"将当前HEAD版本重置到分支中","slug":"将当前head版本重置到分支中","link":"#将当前head版本重置到分支中","children":[]},{"level":2,"title":"退出重置","slug":"退出重置","link":"#退出重置","children":[]},{"level":2,"title":"解决冲突后继续重置","slug":"解决冲突后继续重置","link":"#解决冲突后继续重置","children":[]},{"level":2,"title":"使用配置好的merge tool 解决冲突","slug":"使用配置好的merge-tool-解决冲突","link":"#使用配置好的merge-tool-解决冲突","children":[]},{"level":2,"title":"在编辑器中手动解决冲突后，标记文件为已解决冲突","slug":"在编辑器中手动解决冲突后-标记文件为已解决冲突","link":"#在编辑器中手动解决冲突后-标记文件为已解决冲突","children":[]},{"level":2,"title":"合并提交","slug":"合并提交","link":"#合并提交","children":[{"level":3,"title":"撤销","slug":"撤销","link":"#撤销","children":[]}]},{"level":2,"title":"放弃工作目录下的所有修改","slug":"放弃工作目录下的所有修改","link":"#放弃工作目录下的所有修改","children":[]},{"level":2,"title":"移除缓存区的所有文件（i.e. 撤销上次git add）","slug":"移除缓存区的所有文件-i-e-撤销上次git-add","link":"#移除缓存区的所有文件-i-e-撤销上次git-add","children":[]},{"level":2,"title":"放弃某个文件的所有本地修改","slug":"放弃某个文件的所有本地修改","link":"#放弃某个文件的所有本地修改","children":[]},{"level":2,"title":"重置一个提交（通过创建一个截然不同的新提交）","slug":"重置一个提交-通过创建一个截然不同的新提交","link":"#重置一个提交-通过创建一个截然不同的新提交","children":[]},{"level":2,"title":"将HEAD重置到指定的版本，并抛弃该版本之后的所有修改","slug":"将head重置到指定的版本-并抛弃该版本之后的所有修改","link":"#将head重置到指定的版本-并抛弃该版本之后的所有修改","children":[]},{"level":2,"title":"用远端分支强制覆盖本地分支","slug":"用远端分支强制覆盖本地分支","link":"#用远端分支强制覆盖本地分支","children":[]},{"level":2,"title":"将HEAD重置到上一次提交的版本，并将之后的修改标记为未添加到缓存区的修改","slug":"将head重置到上一次提交的版本-并将之后的修改标记为未添加到缓存区的修改","link":"#将head重置到上一次提交的版本-并将之后的修改标记为未添加到缓存区的修改","children":[]},{"level":2,"title":"将HEAD重置到上一次提交的版本，并保留未提交的本地修改","slug":"将head重置到上一次提交的版本-并保留未提交的本地修改","link":"#将head重置到上一次提交的版本-并保留未提交的本地修改","children":[]},{"level":2,"title":"删除添加.gitignore文件前错误提交的文件","slug":"删除添加-gitignore文件前错误提交的文件","link":"#删除添加-gitignore文件前错误提交的文件","children":[]},{"level":2,"title":"Git-Flow","slug":"git-flow","link":"#git-flow","children":[{"level":3,"title":"索引","slug":"索引-1","link":"#索引-1","children":[]},{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[]}]},{"level":2,"title":"OSX Homebrew","slug":"osx-homebrew","link":"#osx-homebrew","children":[]},{"level":2,"title":"OSX Macports","slug":"osx-macports","link":"#osx-macports","children":[]},{"level":2,"title":"Linux","slug":"linux","link":"#linux","children":[]},{"level":2,"title":"Windows (Cygwin)","slug":"windows-cygwin","link":"#windows-cygwin","children":[{"level":3,"title":"开始","slug":"开始","link":"#开始","children":[]},{"level":3,"title":"特性","slug":"特性","link":"#特性","children":[]}]},{"level":2,"title":"创建一个新特性","slug":"创建一个新特性","link":"#创建一个新特性","children":[]},{"level":2,"title":"完成新特性的开发","slug":"完成新特性的开发","link":"#完成新特性的开发","children":[]},{"level":2,"title":"发布新特性","slug":"发布新特性","link":"#发布新特性","children":[]},{"level":2,"title":"取得一个发布的新特性分支","slug":"取得一个发布的新特性分支","link":"#取得一个发布的新特性分支","children":[]},{"level":2,"title":"追溯远端上的特性","slug":"追溯远端上的特性","link":"#追溯远端上的特性","children":[{"level":3,"title":"做一个release版本","slug":"做一个release版本","link":"#做一个release版本","children":[]}]},{"level":2,"title":"开始创建release版本","slug":"开始创建release版本","link":"#开始创建release版本","children":[]},{"level":2,"title":"完成 release 版本","slug":"完成-release-版本","link":"#完成-release-版本","children":[{"level":3,"title":"紧急修复","slug":"紧急修复","link":"#紧急修复","children":[]}]},{"level":2,"title":"开始 git flow 紧急修复","slug":"开始-git-flow-紧急修复","link":"#开始-git-flow-紧急修复","children":[]},{"level":2,"title":"完成紧急修复","slug":"完成紧急修复","link":"#完成紧急修复","children":[]}],"git":{"createdTime":1687669238000,"updatedTime":1687669238000,"contributors":[{"name":"yzqdev","username":"yzqdev","email":"yzqdev@outlook.com","commits":1,"url":"https://github.com/yzqdev"}]},"readingTime":{"minutes":7.75,"words":2324},"filePathRelative":"git-tutor/git/git-guide.md","localizedDate":"2023年6月25日","autoDesc":true}');export{h as comp,p as data};
